/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.terakeet.soapware.handlers;

/**
 *
 * @author suba
 */
import java.io.BufferedReader;
import java.io.InputStreamReader;
import net.terakeet.soapware.*;
import net.terakeet.soapware.security.*;
import net.terakeet.util.MidwareLogger;
import org.apache.log4j.Logger;
import org.dom4j.Element;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.*;
import java.text.*;
import java.net.*;
import java.text.SimpleDateFormat;
import net.terakeet.util.TemplatedMessage;
import net.terakeet.util.ParameterFile;
import net.terakeet.util.MailException;
import net.terakeet.soapware.handlers.report.*;
import net.terakeet.usbn.WebPermission;
import javax.net.ssl.HttpsURLConnection;
import org.json.JSONObject;


public class SQLBeerBoardTvHandler implements Handler {
    
    private MidwareLogger logger;
    private static final String transConnName
                                            = "auper";
    private RegisteredConnection transconn;
    private SecureSession ss;
    private DecimalFormat cf;
    private LocationMap locationMap;
    private boolean animationVisibility     = true;;
    private static SimpleDateFormat dateFormat 
                                            =  new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
    private static SimpleDateFormat dbDateFormat
                                            = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    
    /**
     * Creates a new instance of SQLBeerBoardTvHandler
     */
    public SQLBeerBoardTvHandler() throws HandlerException {
        HandlerUtils.initializeClientKeyManager();
        logger                              = new MidwareLogger(SQLBOSSHandler.class.getName());
        transconn                           = null;
        locationMap                         = null;
        cf                                  = (DecimalFormat) NumberFormat.getInstance(Locale.US);
    }
    
    public void handle(Element toHandle, Element toAppend) throws HandlerException{
        
        String function                     = toHandle.getName();
        String responseNamespace            = (String)SOAPMessage.getURIMap().get("tkmsg");
        
        String clientKey                    = HandlerUtils.getOptionalString(toHandle,"clientKey");
        ss                                  = ClientKeyManager.getSession(clientKey);
        
        logger                              = new MidwareLogger(SQLBOSSHandler.class.getName(), function);
        logger.debug("SQLBeerBoardTvHandler processing method: "+function);
        logger.xml("request: " + toHandle.asXML());
        
        transconn                           = DatabaseConnectionManager.getNewConnection(transConnName, function + " (SQLBeerBoardTvHandler)");
        
        cf.applyPattern("#.####");
        try {
            // All methods require an admin client key
            if (ss.getLocation() == 0 && ss.getClientId() == 1 && ss.getSecurityLevel().canAdmin()) {
                if ("authBeerBoardTvUser".equals(function)) {
                    authBeerBoardTvUser(toHandle, responseFor(function,toAppend));
                } else if ("getLocationContent".equals(function)) {
                    getLocationContent(toHandle, responseFor(function,toAppend));
                }  else if ("getLocationPage".equals(function)) {
                    getLocationPage(toHandle, responseFor(function,toAppend));
                }  else if ("getLocationSchedule".equals(function)) {
                    getLocationSchedule(toHandle, responseFor(function,toAppend));
                } else if ("getBeerBoardTvUpdates".equals(function)) {
                    getBeerBoardTvUpdates(toHandle, responseFor(function,toAppend));
                } else if ("addBBTVErrorLogs".equals(function)) {
                    addBBTVErrorLogs(toHandle, responseFor(function,toAppend));
                } else if ("addSponsorLogs".equals(function)) {
                    addSponsorLogs(toHandle, responseFor(function,toAppend));
                } else if ("getLocationTileContent".equals(function)) {
                    getLocationTileContent(toHandle, responseFor(function,toAppend));
                }  else {
                    logger.generalWarning("Unknown function '" + function + "'.");
                }
            } else {
                // access violation
                addErrorDetail(toAppend, "Access violation: This method is not available with your client key");
                logger.portalAccessViolation("Tried to call '"+function+"' with key "+ss.toString());
            }
        } catch (Exception e) {
            if (e instanceof HandlerException) {
                throw (HandlerException) e;
            } else {
                logger.midwareError("Non-handler exception thrown in ReportHandler: "+e.toString());
                logger.midwareError("XML: " + toHandle.asXML());
                throw new HandlerException(e);
            }
        } finally {
            // Log database use
            int queryCount                  = transconn.getQueryCount();
            logger.dbAction("Executed " + queryCount + " report quer" + (queryCount == 1 ? "y" : "ies"));

            transconn.close();
        }
        
        logger.xml("response: " + toAppend.asXML());
        
    }
    
    private Element responseFor(String s, Element e) {
        String responseNamespace = (String)SOAPMessage.getURIMap().get("tkmsg");
        return e.addElement("m:"+s+"Response",responseNamespace);
    }
    
    
     private void close(Statement s) {
        if (s != null) {
            try { s.close(); } catch (SQLException sqle) { }
        }
    }
    private void close(ResultSet rs) {
        if (rs != null) {
            try { rs.close(); } catch (SQLException sqle) { }
        }
    }
    private void close(Connection c) {
        if (c != null) {
            try { c.close(); } catch (SQLException sqle) { }
        }
    }
    private void close(RegisteredConnection c) {
        c.close();
    }
    
    private void addErrorDetail(Element toAppend, String message) {
        toAppend.addElement("error").addElement("detail").addText(message);
    }
    private int getCallerId(Element toHandle) throws HandlerException {
        return HandlerUtils.getRequiredInteger(HandlerUtils.getRequiredElement(toHandle,"caller"),"callerId");
    }
    
    private boolean checkForeignKey(String table, int value) throws SQLException, HandlerException {
        return checkForeignKey(table,"id",value);
    }
    
    private boolean checkForeignKey(String table, String field, int value) throws SQLException, HandlerException {
        
        PreparedStatement stmt = null;
        ResultSet rs = null;
        boolean result = false;
        
        String select = "SELECT " + field + " FROM " + table + " WHERE " + field + " = ?";
        
        stmt = transconn.prepareStatement(select);
        stmt.setInt(1, value);
        rs = stmt.executeQuery();
        result = rs.next();
        
        close(rs);
        close(stmt);
        return result;
    }
    
    
    private boolean checkForeignKey(String table, int value, RegisteredConnection transconn) throws SQLException {
        return checkForeignKey(table, "id", value, transconn);
    }
    
    
    private boolean checkForeignKey(String table, String field, int value, RegisteredConnection transconn) throws SQLException {

        PreparedStatement stmt = null;
        ResultSet rs = null;
        boolean result = false;

        String select = "SELECT " + field + " FROM " + table + " WHERE " + field + "=?";

        stmt = transconn.prepareStatement(select);
        stmt.setInt(1, value);
        rs = stmt.executeQuery();
        result = rs.next();

        close(rs);
        close(stmt);

        return result;
    }
    
    
    /**     Beer Board security levels:
     *  All users are associated with a Beer Board Location
     *
     *  Each user has a Manager flag.
     *  A manager can access admin functions for the location.  They can also set
     *  up subordinate accounts for their location, and set other permissions.
     *
     * If a user is not a manager, the user is considered to be the beer board page
     *
     * See also: net.terakeet.usbn.WebPermssion
     */
    private void authBeerBoardTvUser(Element toHandle, Element toAppend) throws HandlerException {
        
        String wmac                         = HandlerUtils.getOptionalString(toHandle, "wmac");
        String emac                         = HandlerUtils.getOptionalString(toHandle, "emac");
        
        String selectWMACBBTV               = "SELECT id,location,tile,template FROM bbtvUserMac WHERE wmac=?";
        String selectEMACBBTV               = "SELECT id,location,tile,template FROM bbtvUserMac WHERE emac=?";
        
        
        Calendar calendar                   = Calendar.getInstance();
        int day                             = calendar.get(Calendar.DAY_OF_WEEK);
        String openHours                    = "";
        switch(day) {
            
            case 1:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openSun, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeSun, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;
            case 2:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openMon, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeMon, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;
            case 3:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openTue, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeTue, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;
            case 4:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openWed, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeWed, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;    
            case 5:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openThu, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeThu, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;
            case 6:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openFri, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeFri, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;    
            case 7:
                openHours                   = "DATE_FORMAT(IFNULL(lH.openSat, '2000-00-00 11:00:00'),'%l:%i:%s'), DATE_FORMAT(IFNULL(lH.closeSat, '2000-00-00 02:00:00'),'%l:%i:%s')";
                break;
        }

        String selectNormalLocation         = "SELECT l.id, l.name, l.type, l.easternOffset, IFNULL(lG.logo, 'USBNLogo.png'), IFNULL(lBM.wifi, 1), " +openHours +
                                            " FROM location l LEFT JOIN locationBeerBoardMap lBM ON lBM.location = l.id " +
                                            " LEFT JOIN locationGraphics lG ON lG.location = l.id LEFT JOIN locationHours lH ON lH.location =l.id " +
                                            " LEFT JOIN locationDetails lD ON lD.location = l.id WHERE lD.active = 1 AND lD.beerboard = 1 AND l.id = ?; ";
        String insertUserAccess             = "INSERT INTO bbtvUsage (location, user, lastAccess) VALUES (?, ?, ?);";
        String updateUserLogin              = "UPDATE bbtvUserMac SET lastLogin = ? WHERE id = ?;";
        
        Calendar currentDate                = Calendar.getInstance();
        String lastAccess                   = dbDateFormat.format(currentDate.getTime());

        int userId                          = -1, user=-1;
        int location                        = -1;
        String platformName                 = "BeerBoard";

        PreparedStatement stmt              = null;
        ResultSet rs                        = null;
        int tile                            = 0;
        int template                        = 0;

        try {
            if(wmac != null || emac != null) {
                if(emac != null && emac.length() > 5) {
                    stmt                    = transconn.prepareStatement(selectEMACBBTV);
                    stmt.setString(1, emac);
                    rs                      = stmt.executeQuery();
                    if (rs != null && rs.next()) {
                        user                = rs.getInt(1);
                        location            = rs.getInt(2);
                        tile                = rs.getInt(3);
                        template            = rs.getInt(4);
                    }
                }
                
                if(wmac!=null && wmac.length() > 5) {
                    stmt                    = transconn.prepareStatement(selectWMACBBTV);
                    stmt.setString(1, wmac);
                    rs                      = stmt.executeQuery();
                    if (rs != null && rs.next()) {
                        user                = rs.getInt(1);
                        location            = rs.getInt(2);
                        tile                = rs.getInt(3);
                        template            = rs.getInt(4);
                        
                    }
                }
                logger.debug("Location:"+location);
                if(location <= 0) {
                    String ipAddress        = "0.0.0.0";
                    stmt                    = transconn.prepareStatement("SELECT SUBSTRING(REPLACE(ipAddress, '/',''), 1, LOCATE(':',ipAddress) - 2), id FROM ipLogs WHERE modified = 0 ORDER BY id DESC LIMIT 1;");
                    rs                      = stmt.executeQuery();
                    if (rs.next()) {
                        ipAddress    = rs.getString(1);
                        logger.debug("IP:" + ipAddress);
                    }
                    stmt                    = transconn.prepareStatement("SELECT id,location,emac,wmac,tile FROM bbtvUserMac WHERE provision= 1 ");
                    rs                      = stmt.executeQuery();
                    if (rs != null && rs.next()) {
                        user                = rs.getInt(1);
                        location            = rs.getInt(2);
                        String oldEMAC      = rs.getString(3);
                        String oldWMAC      = rs.getString(4);
                        tile                = rs.getInt(5);

                        if (emac == null && emac.length() < 10) {
                            emac            = oldEMAC;
                        }
                        if (wmac == null && wmac.length() < 10) {
                            wmac            = oldWMAC;
                        }
                        
                        stmt                = transconn.prepareStatement("UPDATE bbtvUserMac SET emac= ?, wmac= ?,ipAddress = ?,provision=0 WHERE id = ?");
                        stmt.setString(1,emac);
                        stmt.setString(2,wmac);
                        stmt.setString(3,ipAddress);
                        stmt.setInt(4, user);
                        stmt.executeUpdate();
                        logger.debug("Provision Updated BBTV:" + location);
                    }
                }

                if (location > 0) {
                    stmt                    = transconn.prepareStatement(selectNormalLocation);
                    stmt.setInt(1, location);
                    rs                      = stmt.executeQuery();
                    if (rs != null && rs.next()) {
                        if(user > 0) {
                            stmt            = transconn.prepareStatement(updateUserLogin);
                            stmt.setString(1, lastAccess);
                            stmt.setInt(2, user);
                            stmt.executeUpdate();

                            stmt            = transconn.prepareStatement(insertUserAccess);
                            stmt.setInt(1, location);
                            stmt.setInt(2, user);
                            stmt.setString(3, lastAccess);
                            stmt.executeUpdate();
                        }
                        int rsIndex         = 1;
                        Element locEl       = toAppend.addElement("location");
                        locEl.addElement("userId").addText(String.valueOf(user));
                        int locationId      = rs.getInt(rsIndex++);
                        
                        locEl.addElement("locationName").addText(HandlerUtils.nullToEmpty((rs.getString(rsIndex++))));
                        locEl.addElement("locationType").addText(String.valueOf(rs.getInt(rsIndex++)));                        
                        locEl.addElement("easternOffset").addText(HandlerUtils.nullToEmpty((rs.getString(rsIndex++))));
                        locEl.addElement("logo").addText(HandlerUtils.nullToEmpty(("http://bevmanager.net/Images/Location_logo/" + rs.getString(rsIndex++))));
                        if(locationId ==1011 || locationId ==425 || locationId ==1016) {
                            locEl.addElement("bbtvLogo").addText(HandlerUtils.nullToEmpty(("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/beerboardwhitelogo.png")));
                        } else {
                            locEl.addElement("bbtvLogo").addText(HandlerUtils.nullToEmpty(("http://bevmanager.net/Images/Assets/Generic/beerboardlogo.png")));
                        }
                        locEl.addElement("wifi").addText(String.valueOf(rs.getInt(rsIndex++)));
                        locEl.addElement("open").addText(HandlerUtils.nullToEmpty((rs.getString(rsIndex++))));
                        locEl.addElement("close").addText(HandlerUtils.nullToEmpty((rs.getString(rsIndex++))));
                        locEl.addElement("email").addText(HandlerUtils.nullToEmpty("androidcrashbb@gmail.com"));
                        locEl.addElement("password").addText(HandlerUtils.nullToEmpty("android12345"));
                        locEl.addElement("tile").addText(String.valueOf(tile));
                        if(tile>0 && template > 0){
                            locEl.addElement("locationId").addText(String.valueOf(locationId)+"990"+String.valueOf(template));
                        } else {
                            locEl.addElement("locationId").addText(String.valueOf(locationId));
                        }
                         
                    } else {
                        logger.portalAction("Authentication failed to WMAC:" + wmac + " and EMAC: " + emac);
                        // authentication failed
                    }
                } else {
                    logger.ip("BB");
                    stmt                    = transconn.prepareStatement("SELECT SUBSTRING(REPLACE(ipAddress, '/',''), 1, LOCATE(':',ipAddress) - 2), id FROM ipLogs WHERE modified = 0 ORDER BY id DESC LIMIT 1;");
                    rs                      = stmt.executeQuery();
                    if (rs.next()) {
                        String ipAddress    = rs.getString(1);
                        logger.debug("IP:" + ipAddress);
                        stmt                = transconn.prepareStatement("UPDATE ipLogs SET modified = 1 WHERE modified = 0");
                        stmt.executeUpdate();

                        stmt                = transconn.prepareStatement("SELECT id FROM bbtvUserMac WHERE ipAddress LIKE '%" + ipAddress + "%'");
                        rs                  = stmt.executeQuery();
                        if (rs.next()) {
                            stmt            = transconn.prepareStatement("UPDATE bbtvUserMac SET wmac = ?, emac = ? WHERE id = ?;");
                            stmt.setString(1, wmac);
                            stmt.setString(2, emac);
                            stmt.setInt(3, rs.getInt(1));
                            stmt.executeUpdate();
                        } else {
                            stmt            = transconn.prepareStatement("SELECT location FROM ipLocationMap WHERE ipAddress  LIKE '%" + ipAddress + "%'");
                            rs              = stmt.executeQuery();
                            if (rs.next()) {
                                stmt        = transconn.prepareStatement("INSERT INTO bbtvUserMac (name, location, wmac, emac, ipAddress) VALUES ((SELECT name FROM location WHERE id = ?), ?, ?, ?, ?)");
                                stmt.setInt(1, rs.getInt(1));
                                stmt.setInt(2, rs.getInt(1));
                                stmt.setString(3, wmac);
                                stmt.setString(4, emac);
                                stmt.setString(5, ipAddress);
                                stmt.executeUpdate();
                            }
                        }
                    }
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: " + sqle.getMessage());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
    }
    
    private void getLocationTileContent(Element toHandle, Element toAppend) throws HandlerException {
         String location                    = HandlerUtils.getRequiredString(toHandle, "locationId");
         logger.debug(location);
         if (!location.contains("990")) {
             int locationId                 = Integer.parseInt(location);
            if(locationId == 976 || locationId == 3) {
                getTileMenuTemplate5(locationId, toAppend);
            } else if (locationId == 966) {
                getTileMenuTemplate6(locationId, toAppend);
            } else if (locationId == 967) {
                getTileMenuTemplate9(locationId, toAppend);
            } else if( locationId==425 || locationId == 853 ){
                getTileMenuTemplate7(locationId, toAppend); 
            } else {
                getTileMenuTemplate5(locationId, toAppend);
            }
         } else {
             String locTemp[]               = location.split("990");             
             int locationId                 = Integer.parseInt(locTemp[0]);
             int template                   = Integer.parseInt(locTemp[1]);
             logger.debug("Loading Template " + template);
             switch(template) {
                    case 1:
                         getTileMenuTemplate1(locationId, toAppend);
                        break; 
                    case 2:
                         getTileMenuTemplate2(locationId, toAppend);
                        break; 
                    case 3:
                         getTileMenuTemplate3(locationId, toAppend);
                        break; 
                    case 4:
                         getTileMenuTemplate4(locationId, toAppend);
                        break; 
                    case 5:
                         getTileMenuTemplate5(locationId, toAppend);
                        break; 
                     case 6:
                         getTileMenuTemplate6(locationId, toAppend);
                        break; 
                    case 7:
                         getTileMenuTemplate7(locationId, toAppend);
                        break; 
                    case 8:
                         getTileMenuTemplate8(locationId, toAppend);
                        break; 
                    case 9:
                         getTileMenuTemplate9(locationId, toAppend);
                        break; 
                    case 10:
                         getTileMenuTemplate10(locationId, toAppend);
                        break; 
                    case 11:
                         getTileMenuTemplate11(locationId, toAppend);
                        break; 
                    case 12:
                         getTileMenuTemplate12(locationId, toAppend);
                        break; 
                    case 13:
                         getTileMenuTemplate13(locationId, toAppend);
                        break; 
                    case 14:
                         getTileMenuTemplate14(locationId, toAppend);
                        break;  
                    case 15:
                         getTileMenuTemplate15(locationId, toAppend);
                        break;
                    case 16:
                         getTileMenuTemplate16(locationId, toAppend);
                        break;  
                    case 17:
                         getVerticalMenuTemplate1(locationId, toAppend);
                        break; 
                    case 18:
                         getThreeColumnTemplate(locationId, toAppend);
                        break;
                    case 19:
                         getEightMenuTemplate(locationId, toAppend);
                        break; 
                    case 20:
                         getVerticalMenuTemplate2(locationId, toAppend);
                        break;    
                    default:
                        getTileMenuTemplate10(locationId,  toAppend);
                        break;
                }
         }
    }
    
    private void getLocationContent(Element toHandle, Element toAppend) throws HandlerException {
        int locationId                      = HandlerUtils.getRequiredInteger(toHandle, "locationId");
        PreparedStatement stmt              = null;
        ResultSet rs                        = null;
        String selectLocationSpecials       = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ?  ";
        String selectLocationMenuLayout     = "SELECT template FROM locationBeerBoardMap WHERE location = ?;";

        try {
            String specialsFont             = "/mnt/sdcard/Images/kamanssk.ttf";
            String specialsSize             = "25";
            String bgcolor                  = "#ffffff";
            String color                    ="#000000";
            if(locationId==1002){
                //specialsSize                = "35";
            }
             if(locationId==1011){ 
                specialsFont                = "/mnt/sdcard/Images/arial.ttf";
               // bgcolor                     = "#000000";
                //color                       = "#ffffff";
                specialsSize                = "35";
            }
             
             if(locationId==425 || locationId==1016){ 
                specialsFont                = "/mnt/sdcard/Images/arial.ttf";
                bgcolor                     = "#000000";
                color                       = "#ffffff";
                specialsSize                = "35";
            }
             boolean isSpecialAvail =  false; 
            stmt                            = transconn.prepareStatement(selectLocationSpecials);
            stmt.setInt(1,locationId);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                Element locationSpecialsEl  = toAppend.addElement("locationSpecials");
                locationSpecialsEl.addElement("visibleTime").addText("10000");
                locationSpecialsEl.addElement("id").addText(HandlerUtils.nullToEmpty(rs.getString(1)));
                locationSpecialsEl.addElement("specials").addText(HandlerUtils.nullToEmpty(rs.getString(2)));
                locationSpecialsEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(rs.getString(3)));
                locationSpecialsEl.addElement("font").addText(specialsFont );
                locationSpecialsEl.addElement("size").addText(specialsSize);
                locationSpecialsEl.addElement("color").addText(color);
                locationSpecialsEl.addElement("bgcolor").addText(bgcolor);
                isSpecialAvail              = true;
            }
            if(!isSpecialAvail) {
                Element locationSpecialsEl  = toAppend.addElement("locationSpecials");
                locationSpecialsEl.addElement("visibleTime").addText("10000");
                locationSpecialsEl.addElement("id").addText(String.valueOf(1));
                locationSpecialsEl.addElement("specials").addText("");
                locationSpecialsEl.addElement("sequence").addText(String.valueOf(1));
                locationSpecialsEl.addElement("font").addText(specialsFont );
                locationSpecialsEl.addElement("size").addText(specialsSize);
                locationSpecialsEl.addElement("color").addText(color);
                locationSpecialsEl.addElement("bgcolor").addText(bgcolor);
            }
            String beerSize                 = getBeverageSize(locationId);
            toAppend.addElement("beerSize").addText(HandlerUtils.nullToEmpty(beerSize));

            stmt                            = transconn.prepareStatement(selectLocationMenuLayout);
            stmt.setInt(1,locationId);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                int type                    = rs.getInt(1);                  
                switch(type) {
                    case 1:
                        getBeerBoardMenu1(locationId, 1,toAppend);
                        break;
                    case 2:
                        getBeerBoardMenu2(locationId, 1, toAppend);
                        break;
                    case 3:
                        getBeerBoardMenu5(locationId, 1, toAppend);
                        break;
                    case 4:
                        getBeerBoardMenu3(locationId, 1, toAppend);
                        break;
                    case 5:
                        getBeerBoardMenu7(locationId, 1, toAppend);
                        break;
                    case 6:
                        getBeerBoardMenu6(locationId,1, toAppend);
                        break;
                    case 7:
                        getBeerBoardMenu7(locationId,1, toAppend);
                        break;
                    default:
                        getBeerBoardMenu2(locationId, 1, toAppend);
                        break;
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
    }


    private void getBeerBoardMenu1(int locationId,int sequence, Element toAppend) throws HandlerException {
            ArrayList<String> beerBoardMenus= new ArrayList<String>();
            beerBoardMenus                  = getBeerBoardMenuStyleTemplate(locationId, 3);
            int totalBeerMenus              = beerBoardMenus.size();
            if(totalBeerMenus > 0) {
                for (int i = 0; i < totalBeerMenus; i++) {
                    if(sequence <12){
                        String beerListString
                                            = beerBoardMenus.get(i);
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(6, (animationVisibility ? 46 : 38))));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/patrick_hand.otf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                        sequence++;
                    }
                }
            }
    }


    private void getBeerBoardMenu2(int locationId,int  sequence,Element toAppend) throws HandlerException {

        // Overlay HTML
       toAppend.addElement("overlayHTML").addText("<table width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                        "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%' bgcolor='#000000'><table width='100%' " +
                                        "height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; border-collapse: collapse'><tr><td width='100%' " +
                                        "height='20%'><div align=\"center\" class=\"feed\">DOWNLOAD<br />BEERBOARD MOBILE</div></td></tr><tr><td align='middle' width='100%' height='50%'>" +
                                        "<img height='25%' src='/mnt/sdcard/Images/MobileApp.png' /></td></tr><tr><td width='100%' height='30%' align='middle'>" +
                                        "<img width='90%' src='/mnt/sdcard/Images/iStoreGooglePlayIcon.png' /></td></tr></table></td></tr></table>");
        toAppend.addElement("overlayCSS").addText(HandlerUtils.nullToEmpty(getMenuCSS(5, 25)));

       // int sequence                        = 1;
        for(int t = 1; t < 4; t++) {
            animationVisibility             = true;
            ArrayList<String> beerBoardMenus= new ArrayList<String>();
            String typeBarrel[]             = {"/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/craftBarrelRoll.png","/mnt/sdcard/Images/importedBarrelRollGreen.png","/mnt/sdcard/Images/importedBarrelRollGreen.png"};
            String typeBackground[]         = {"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Craft-Screen.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png"};
           

            beerBoardMenus                  = getBeerBoardMenuTemplate(locationId, t);
            int totalBeerMenus              = beerBoardMenus.size();
            if(totalBeerMenus > 0) {
                for (int i = -1; i < totalBeerMenus; i++) {
                    if(i==-1) {
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(t)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(typeBackground[t]));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty(typeBarrel[t]));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(t, (animationVisibility ? 46 : 38))));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/domesticBarrel.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));

                    } else {
                        String beerListString
                                            = beerBoardMenus.get(i);
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(t)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(typeBackground[t]));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(t, (animationVisibility ? 46 : 38))));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/craftBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/arial.ttf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/importedBarrelRollGreen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    }
                    sequence++;
                }
            }
        }
    }


    private void getBeerBoardMenu3(int locationId, int sequence, Element toAppend) throws HandlerException {

        // Overlay HTML
       toAppend.addElement("overlayHTML").addText("<table width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                        "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%'></td></tr></table>");
        toAppend.addElement("overlayCSS").addText(HandlerUtils.nullToEmpty(getMenuCSS(5, 25)));

       // int sequence                        = 1;
        animationVisibility                 = true;
        ArrayList<String> beerBoardMenus= new ArrayList<String>();
        String typeBarrel[]                 = {"/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/craftBarrelRoll.png","/mnt/sdcard/Images/importedBarrelRollGreen.png","/mnt/sdcard/Images/importedBarrelRollGreen.png"};
        String typeBackground[]             = {"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Craft-Screen.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png"};

        beerBoardMenus                      = getBeerBoardBrassTapMenuTemplate(locationId);
        int totalBeerMenus                  = beerBoardMenus.size();
        if(totalBeerMenus > 0) {
            for (int i = 0; i < totalBeerMenus; i++) {
                if(i == -1) {
                    Element beerMenusEl     = toAppend.addElement("beerMenus");
                    beerMenusEl.addElement("visibleTime").addText("10000");
                    beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(""));
                    beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(2)));
                    beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                    beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty(typeBarrel[2]));
                    beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(7, 26)));
                    beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                    beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                    Element menusLayoutEl   = beerMenusEl.addElement("menuLayout");
                    menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));
                    Element layoutAssetEl   = menusLayoutEl.addElement("asset");
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/domesticBarrel.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                    
                } else {
                    String beerListString   = beerBoardMenus.get(i);
                    Element beerMenusEl     = toAppend.addElement("beerMenus");
                    beerMenusEl.addElement("visibleTime").addText("10000");
                    beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                    beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                    beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(2)));
                    beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                    beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                    beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                    beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(7, 34)));
                    Element menusLayoutEl   = beerMenusEl.addElement("menuLayout");
                    menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));
                    Element layoutAssetEl   = menusLayoutEl.addElement("asset");
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/craftBarrelRoll.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/arial.ttf"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/importedBarrelRollGreen.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    
                    //logger.debug("Total BeerMenus:"+totalBeerMenus);
                    if(totalBeerMenus==1){
                        beerListString   = beerBoardMenus.get(i);
                        Element beerMenusEl1     = toAppend.addElement("beerMenus");
                        beerMenusEl1.addElement("visibleTime").addText("10000");
                        beerMenusEl1.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl1.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl1.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(2)));
                        beerMenusEl1.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl1.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl1.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl1.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(7, 34)));
                        Element menusLayoutEl1   = beerMenusEl1.addElement("menuLayout");
                        menusLayoutEl1.addElement("html").addText(HandlerUtils.nullToEmpty(""));
                    }
                    
                }
                sequence++;
            }
        }
    }


    private void getBeerBoardMenu4(int locationId, int sequence, Element toAppend) throws HandlerException {

        // Overlay HTML
        toAppend.addElement("overlayHTML").addText("<table width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                        "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%'></td></tr></table>");
        toAppend.addElement("overlayCSS").addText(HandlerUtils.nullToEmpty(getMenuCSS(5, 25)));

        // int sequence                        = 1;
        for(int t = 1; t < 4; t++) {
            animationVisibility             = true;
            ArrayList<String> beerBoardMenus= new ArrayList<String>();
            String typeBarrel[]             = {"/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/craftBarrelRoll.png","/mnt/sdcard/Images/importedBarrelRollGreen.png","/mnt/sdcard/Images/importedBarrelRollGreen.png"};
            String typeBackground[]         = {"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Craft-Screen.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png"};
            beerBoardMenus                  = getBeerBoardBrassTapMenuTemplate(locationId);
            int totalBeerMenus              = beerBoardMenus.size();
            if(totalBeerMenus > 0) {
                for (int i = -1; i < totalBeerMenus; i++) {
                    if(i == -1) {
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(2)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(typeBackground[2]));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty(typeBarrel[2]));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(7, 26)));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/domesticBarrel.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                    } else {
                        String beerListString
                                            = beerBoardMenus.get(i);
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(2)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(typeBackground[2]));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(7, 34)));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/craftBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/arial.ttf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/importedBarrelRollGreen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    }
                    sequence++;
                }
            }
        }
    }
    
    
     private void getBeerBoardMenu5(int locationId,int  sequence,Element toAppend) throws HandlerException {

        // Overlay HTML
         String slidebgColor                = "bgcolor='#000000'";
         if(locationId == 425){
             slidebgColor                = "bgcolor='#ffffff'";
         }
       toAppend.addElement("overlayHTML").addText("<table  width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                        "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%' bgcolor='#000000'><table "+slidebgColor+"  width='100%' " +                                        "height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; border-collapse: collapse'><tr><td width='100%' " +
                                        "height='20%'><div align=\"center\" class=\"feed\">DOWNLOAD<br />BEERBOARD MOBILE</div></td></tr><tr><td align='middle' width='100%' height='50%'>" +
                                        "<img height='25%' src='/mnt/sdcard/Images/MobileApp.png' /></td></tr><tr><td width='100%' height='30%' align='middle'>" +
                                        "<img width='90%' src='/mnt/sdcard/Images/iStoreGooglePlayIcon.png' /></td></tr></table></td></tr></table>");
        toAppend.addElement("overlayCSS").addText(HandlerUtils.nullToEmpty(getMenuCSS(5, 25)));

       // int sequence                        = 1;
        for(int t = 1; t < 4; t++) {
            animationVisibility             = true;
            ArrayList<String> beerBoardMenus= new ArrayList<String>();
            String typeBarrel[]             = {"/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/DomesticBarrelRoll.png","/mnt/sdcard/Images/craftBarrelRoll.png","/mnt/sdcard/Images/importedBarrelRollGreen.png","/mnt/sdcard/Images/importedBarrelRollGreen.png"};
            String typeBackground[]         = {"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Craft-Screen.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png"};
           

            beerBoardMenus                  = getBeerBoardMenuTemplate5(locationId, t);
            int totalBeerMenus              = beerBoardMenus.size();
            if(totalBeerMenus > 0) {
                for (int i = -1; i < totalBeerMenus; i++) {
                    if(i==-1) {
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(t)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(typeBackground[t]));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty(typeBarrel[t]));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(t, (animationVisibility ? 46 : 38))));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/domesticBarrel.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));

                    } else {
                        String beerListString
                                            = beerBoardMenus.get(i);
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(t)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(typeBackground[t]));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((animationVisibility ? 1 : 0)));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(t, (animationVisibility ? 46 : 38))));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        Element layoutAssetEl
                                            = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/craftBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/DomesticBarrelRoll.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/arial.ttf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/importedBarrelRollGreen.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    }
                    sequence++;
                }
            }
        }
    }
     
     
     private void getBeerBoardMenu6(int locationId, int sequence,Element toAppend) throws HandlerException {
            ArrayList<String> beerBoardMenus= new ArrayList<String>();
            beerBoardMenus                  = getBeerBoardMenuTemplate6(locationId);
            int totalBeerMenus              = beerBoardMenus.size();
             Element layoutAssetEl          = null;
            if(totalBeerMenus > 0) {
                for (int i = 0; i < totalBeerMenus; i++) {                    
                        String beerListString
                                            = beerBoardMenus.get(i);
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(9, 25)));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        layoutAssetEl       = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/patrick_hand.otf"));                        
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                        sequence++;
                                
                }
                
            }
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png"));                        
            
    }

      private void getBeerBoardMenu7(int locationId, int sequence,Element toAppend) throws HandlerException {
            ArrayList<String> beerBoardMenus= new ArrayList<String>();
            beerBoardMenus                  = getBeerBoardMenuTemplate7(locationId);
            int totalBeerMenus              = beerBoardMenus.size();
             Element layoutAssetEl          = null;
            if(totalBeerMenus > 0) {
                for (int i = 0; i < totalBeerMenus; i++) {                    
                        String beerListString
                                            = beerBoardMenus.get(i);
                        Element beerMenusEl = toAppend.addElement("beerMenus");
                        beerMenusEl.addElement("visibleTime").addText("10000");
                        beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(sequence)));
                        beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                        beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                        beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                        beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                        beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                        beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getMenuCSS(9, 25)));

                        Element menusLayoutEl
                                            = beerMenusEl.addElement("menuLayout");
                        menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                        layoutAssetEl       = menusLayoutEl.addElement("asset");
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/patrick_hand.otf"));                        
                        layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Fonts/kamanssk.ttf"));
                        sequence++;
                                
                }
                
            }
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png"));                        
            
    }
    
    private ArrayList<String> getBeerBoardMenuTemplate(int location, int type) throws HandlerException {

         ArrayList<String> beerBoardMenus   = new ArrayList<String>();
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null, innerRS = null;
         int maxColumn                      = 1, maxRow = 5;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, ( SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName WHERE location =b.location AND productSet = sPS.id) FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND pD.category = ? AND sPS.productSetType = 9 ORDER BY pD.category, pD.boardName";

             StringBuilder prodDesc         = new StringBuilder();


             int productCount               = 0;
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             stmt.setInt(2, type);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodCategory           = rs.getInt(1);
                 String productName         = rs.getString(2);
                 String style               = rs.getString(4);
                  String customName          = HandlerUtils.nullToString(rs.getString(5),productName);         
                  style                      = HandlerUtils.nullToString(rs.getString(6),style);
                 if(customName!=null && !customName.equals("")){
                     productName            = customName;
                 }                 
                 productCount++;
                 //logger.debug("Beer Menu for Type: " + type + ", Beer: " + productName);
                 switch(prodCategory) {
                     case 1:
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(style);
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                         break;
                     case 2:
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(style);
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                         break;
                     case 3:
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p  class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(style);
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                        break;
                    case 4:
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(style);
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                        break;
                 }
             }
             //logger.debug("Type"+type);
             //logger.debug("product"+beerBoardMenus.size());

             if (productCount > 10) {
                maxColumn                   = 2;
                maxRow                      = 4;
                animationVisibility         = false;
             } else {
                maxColumn                   = 1;
                maxRow                      = 5;
                animationVisibility         = true;
             }
             
             switch (maxColumn) {
                 case 1:
                     loadOneColumnBeerBoardMenu(beerBoardMenus, htmlMenus, maxRow);
                     break;
                 case 2:
                     loadTwoColumnBeerBoardMenu(beerBoardMenus, type, htmlMenus, maxRow);
                     break;
                 default:
                     loadOneColumnBeerBoardMenu(beerBoardMenus, htmlMenus, maxRow);
                     break;
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return htmlMenus;
     }

    private ArrayList<String> getBeerBoardBrassTapMenuTemplate(int location) throws HandlerException {

         ArrayList<String> beerBoardMenus   = new ArrayList<String>();
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<Double> pricesMenus      = new ArrayList<Double>();
         HashMap<Integer, ArrayList<Double>> productPrices
                                            = new HashMap<Integer, ArrayList<Double>>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null, innerRS = null;
         int maxColumn                      = 1, maxRow = 5;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, p.id, ( SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName WHERE location =b.location AND productSet = sPS.id) FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 ORDER BY pD.boardName";
             String selectBeveragePrices    = "SELECT i.product, iP.value FROM inventoryPrices iP LEFT JOIN inventory i ON i.id = iP.inventory WHERE i.location = ?" +
                                            " ORDER BY i.product, iP.value";


             int product                    = -1;
             stmt                           = transconn.prepareStatement(selectBeveragePrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 if (product == rs.getInt(1)) {
                        pricesMenus.add(rs.getDouble(2));
                 } else {
                     if (product < 0) {
                         product            = rs.getInt(1);
                         pricesMenus        = new ArrayList<Double>();
                         pricesMenus.add(rs.getDouble(2));
                     } else {
                         productPrices.put(product, pricesMenus);
                         product            = rs.getInt(1);
                         pricesMenus        = new ArrayList<Double>();
                         pricesMenus.add(rs.getDouble(2));
                     }
                 }
                 if (rs.isLast()) {
                     productPrices.put(product, pricesMenus);
                 }
             }

             StringBuilder prodDesc         = new StringBuilder();
             int productCount               = 0;
             int classCount                 = 1;
             String productClassName        = "beer_list_product_gold";
             String styleClassName          = "percentage_gold";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodCategory           = rs.getInt(1);
                 String productName         = rs.getString(2);
                 String style               = rs.getString(4);
                 int productId              = rs.getInt(5);
                 String customName          = HandlerUtils.nullToString(rs.getString(6),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(7),style); 
                 if(customName!=null && !customName.equals("")){
                     productName            = customName;
                 }
                 productCount++;
                 
                 if (classCount == 1) {
                    productClassName        = "beer_list_product_gold";
                    styleClassName          = "percentage_gold";
                 } else if (classCount == 2) {
                    productClassName        = "beer_list_product_white";
                    styleClassName          = "percentage_white";
                 } else if (classCount == 3){
                    productClassName        = "beer_list_product_gold";
                    styleClassName          = "percentage_gold";
                    classCount              = 0;
                 }
                 classCount++;

                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<tr><td><p class='no_margin'><span class='" + productClassName + "' style='padding-bottom:10px;'>");
                 prodDesc.append(productName);
                 prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:10px;'><span class='" + styleClassName + "'>");
                 prodDesc.append(style);
                 prodDesc.append(" "+rs.getString(3));
                 prodDesc.append("</span></p>");
                 if (productPrices.containsKey(productId)) {
                     NumberFormat formatter = NumberFormat.getCurrencyInstance();
                     prodDesc.append("<p class='no_margin' style='padding-bottom:20px;'><span class='" + styleClassName + "'>");
                     ArrayList<Double> invoiceArray
                                            = productPrices.get(productId);
                     for (Double price : invoiceArray) {
                         prodDesc.append(" " + formatter.format(price) + " &nbsp;");
                     }
                     prodDesc.append("</span></p>");
                 } else {
                     prodDesc.append("<p class='no_margin' style='padding-bottom:20px;'><span class='" + styleClassName + "'>");
                     prodDesc.append("&nbsp;</span></p>");
                 }
                 prodDesc.append("</td></tr>");
                 beerBoardMenus.add(prodDesc.toString());
                 //logger.debug("Beer Menu for Type: " + type + ", Beer: " + productName);
             }
             //logger.debug("Type"+type);
             //logger.debug("product"+beerBoardMenus.size());
             
             maxColumn                      = 3;
             maxRow                         = 5;
             animationVisibility            = false;

             switch (maxColumn) {
                 case 1:
                     loadOneColumnBeerBoardMenu(beerBoardMenus, htmlMenus, maxRow);
                     break;
                 case 2:
                     loadTwoColumnBeerBoardMenu(beerBoardMenus, 2, htmlMenus, maxRow);
                     break;
                 case 3:
                     loadThreeColumnBeerBoardMenu(beerBoardMenus, 2, htmlMenus, maxRow);
                     break;
                 default:
                     loadOneColumnBeerBoardMenu(beerBoardMenus, htmlMenus, maxRow);
                     break;
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return htmlMenus;
     }


      private ArrayList<String> loadOneColumnBeerBoardMenu(ArrayList<String> beerBoardMenus,ArrayList<String> htmlMenus, int maxrow) {
        StringBuilder beerMenuList          = new StringBuilder();
        int rowCount                        = 0;

        for(int i = 0; i<beerBoardMenus.size(); i++){
            if(rowCount==0) {
                beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; border-collapse: collapse'>" +
                                    "<tr><td width='30%'></td><td width='37%'><table>");
                beerMenuList.append(beerBoardMenus.get(i));
                rowCount++;
            } else {
                beerMenuList.append(beerBoardMenus.get(i));
                rowCount++;
                if(rowCount == maxrow) {
                    beerMenuList.append("</table></td><td width='20%' bgcolor='#000000'></td></tr></table>");
                    htmlMenus.add(beerMenuList.toString());
                    //logger.debug("Beer Menu: " + beerMenuList.toString());
                    beerMenuList            = new StringBuilder();
                    rowCount                = 0;
                }
            }
        }

        if (rowCount > 0) {
            for (int j = 0; j < (maxrow - rowCount); j++) {
                beerMenuList.append("<tr><td><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td></tr>");
            }
            beerMenuList.append("</table></td><td width='20%' bgcolor='#000000'></td></tr></table>");
            htmlMenus.add(beerMenuList.toString());
            //logger.debug("Beer Menu: " + beerMenuList.toString());
            beerMenuList            = new StringBuilder();
            rowCount                = 0;
        }
        return htmlMenus;
    }

     private ArrayList<String> loadTwoColumnBeerBoardMenu(ArrayList<String> beerBoardMenus, int type, ArrayList<String> htmlMenus, int maxrow) {
        StringBuilder beerMenuList          = new StringBuilder();
        StringBuilder beerMenuTitle         = new StringBuilder();
        int rowCount                        = 0, colCount = 0;
        beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 10px; border-collapse: collapse'>");
        switch (type) {
            case 1:
                beerMenuTitle.append("<tr><td><span class='beer_list_title' style='padding-left: 20px; padding-bottom:20px;'>Domestic</span><td><td><td><td><td></tr>");
                break;
            case 2:
                beerMenuTitle.append("<tr><td><span class='beer_list_title' style='padding-left: 20px; padding-bottom:20px;'>Craft</span><td><td><td><td><td></tr>");
                break;
            case 3:
                beerMenuTitle.append("<tr><td><span class='beer_list_title' style='padding-left: 20px; padding-bottom:20px;'>Import</span><td><td><td><td><td></tr>");
                break;
            case 4:
                beerMenuTitle.append("<tr><td><span class='beer_list_title' style='padding-left: 20px; padding-bottom:20px;'>House Brew</span><td><td><td><td><td></tr>");
                break;
        }
        beerMenuList.append(beerMenuTitle);

        for(int i = 0; i<beerBoardMenus.size(); i++) {
            
            if (colCount == 0) {
                beerMenuList.append("<tr><td width='34%'><table>");
                //logger.debug("I:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td>");
                colCount++;
            } else {
                beerMenuList.append("<td width='34%'><table>");
                //logger.debug("I1:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td><td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
                colCount                    = 0;
                rowCount++;
            }
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                //logger.debug("Beer Menu: " + beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 10px; border-collapse: collapse'>");
                beerMenuList.append(beerMenuTitle);
                rowCount                    = 0;
                colCount                    = 0;
            }
        }

        if (colCount > 0) {
            beerMenuList.append("<td width='42%'>&nbsp;</td><td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
            rowCount++;
            colCount                        = 0;
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                rowCount                    = 0;
            }
        }

        if (rowCount > 0) {
            for (int j = 0; j < (maxrow - rowCount); j++) {
                beerMenuList.append("<tr><td width='38%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='42%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
            }
            beerMenuList.append("</table>");
            htmlMenus.add(beerMenuList.toString());
            //logger.debug("Beer Menu: " + beerMenuList.toString());
            beerMenuList                    = new StringBuilder();
            rowCount                        = 0;
        }
        return htmlMenus;
     }

     private ArrayList<String> loadThreeColumnBeerBoardMenu(ArrayList<String> beerBoardMenus, int type, ArrayList<String> htmlMenus, int maxrow) {
        StringBuilder beerMenuList          = new StringBuilder();
        int rowCount                        = 0, colCount = 0;
        beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 10px; border-collapse: collapse'>");
        for(int i = 0; i<beerBoardMenus.size(); i++) {

            if (colCount == 0) {
                beerMenuList.append("<tr><td width='33%'><table>");
                //logger.debug("I:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td>");
                colCount++;
            } else if (colCount == 1) {
                beerMenuList.append("<td width='33%'><table>");
                //logger.debug("I:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td>");
                colCount++;
            } else {
                beerMenuList.append("<td width='34%'><table>");
                //logger.debug("I1:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td></tr>");
                colCount                    = 0;
                rowCount++;
            }
            
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                //logger.debug("Beer Menu: " + beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 10px; border-collapse: collapse'>");
                rowCount                    = 0;
                colCount                    = 0;
            }
        }

        if (colCount == 1) {
            beerMenuList.append("<td width='33%'>&nbsp;</td><td width='34%'>&nbsp;</td></tr>");
            rowCount++;
            colCount                        = 0;
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                rowCount                    = 0;
            }
        } else if (colCount == 2) {
            beerMenuList.append("<td width='34%'>&nbsp;</td></tr>");
            rowCount++;
            colCount                        = 0;
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                rowCount                    = 0;
            }
        }

        if (rowCount > 0) {
            for (int j = 0; j < (maxrow - rowCount); j++) {
                beerMenuList.append("<tr><td width='33%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='33%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='34%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td></tr>");
            }
            beerMenuList.append("</table>");
            htmlMenus.add(beerMenuList.toString());
            //logger.debug("Beer Menu: " + beerMenuList.toString());
            beerMenuList                    = new StringBuilder();
            rowCount                        = 0;
        }
        return htmlMenus;
     }

     private String getMenuCSS(int type, int fontSize) throws HandlerException {

           String typeBackground[]          = {"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png", "/mnt/sdcard/Images/BeerBoard-Craft-Screen.png", "/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png", "/mnt/sdcard/Images/BeerBoardSocialMedia.png"};

           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/Orange_Background_by_soxrox22.png'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_title{ font-family: 'PPETRIAL'; font-size:30px; font-weight:bold; color: #FFF; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_list_product{ font-family: 'kamanssk'; font-size:45px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            "  .percentage { font-family: 'PPETRIAL'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'PPETRIAL'; font-size:30px; font-weight:bold; overflow:hidden;  white-space:nowrap; } ";

           switch(type) {
             case 1:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[0]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }" +
                                            " .beer_list_title{ font-family: 'kamanssk'; font-size: 46px; font-weight:bold; color: #FFF; word-wrap:break-word; } " +
                                            " .beer_list_product{ font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold; color: #000; word-wrap:break-word; } " +
                                            " .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".no_margin{	margin:0px;}"
                                            + " #me { -webkit-animation: rotation 2s infinite linear;}@-webkit-keyframes rotation {    from {-webkit-transform: rotate(0deg);}    to   {-webkit-transform: rotate(359deg);}}";
                 break;
             case 2:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[1]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_title{ font-family: 'kamanssk'; font-size:46px; font-weight:bold; color: #FFF; word-wrap:break-word; } " +
                                            " .beer_list_product{ font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold; color: #000; word-wrap:break-word;} " +
                                            " .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                          + " .no_margin{	margin:0px;}";
                 break;
             case 3:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[2]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_title{ font-family: 'kamanssk'; font-size:46px; font-weight:bold; color: #FFF; word-wrap:break-word; } " +
                                            " .beer_list_product{ font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold; color: #000; word-wrap:break-word; } " +
                                            " .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".no_margin{	margin:0px;}";

                 break;
             case 4:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[3]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_title{ font-family: 'kamanssk'; font-size:46px; font-weight:bold; color: #000; word-wrap:break-word; } " +
                                            " .beer_list_product{ font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold; color: #000; word-wrap:break-word; } " +
                                            " .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".no_margin{	margin:0px;}";

                 break;
             case 5:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            ".no_margin{	margin:0px;}" +
                                            " body { border-style:none; margin:0px; border-collapse:collapse;  }" +
                                            " .feed{ font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold;  color: #ff9900; word-wrap:break-word; } " ;
                 break;
             case 6:
                css                         = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'patrick'; src: url('file:///android_asset/fonts/patrick_hand.otf'); } " +
                                            " * { color:#FFFFFF; } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; } " +
                                            " .beer_size { font-family: 'PPETRIAL'; font-size:30px; font-weight:bold; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_price { font-family: 'patrick'; font-size:20px; font-weight:normal; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_category { font-family: 'ChalkDust'; font-size:26px; font-weight:bold; color: #ff9900; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_name { font-family: 'PPETRIAL'; font-size:50px; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_big_name { font-family: 'patrick'; font-size:76px; word-wrap:break-word; } " +
                                            " .beer_description { font-family: 'PPETRIAL'; font-size:26px;  font-style:italic;  font-weight:normal; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_abv { font-family: 'patrick'; font-size:20px; margin-left:5px; font-weight:normal; } " +
                                            " .vendor_logo { float:left;  width:150px; margin-top:15px; margin-left:15px; } " +
                                            " .other_data_feed { float:left;  font-size:26px;  margin-top:25px; margin-left:25px; text-align: center; } " +
                                            " .sponsor_header { font-size:16px; }";
                break;
             case 7:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_title{ font-family: 'kamanssk'; font-size:46px; font-weight:bold; color: #FFF; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_list_product_gold { font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold; color: #FFD700; word-wrap:break-word; } " +
                                            " .percentage_gold { font-family: 'kamanssk'; font-size:24px; font-weight:bold; color: #FFD700; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_list_product_white { font-family: 'kamanssk'; font-size:"+fontSize+"px; font-weight:bold; color: #FFF; word-wrap:break-word; } " +
                                            " .percentage_white { font-family: 'kamanssk'; font-size:24px; font-weight:bold; color: #FFF; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                          + " .no_margin{	margin:0px;}";
                 break;
                 case 8:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            "body { background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; } " +
                                            ".CSSTableOrange {margin:0px;padding:0px;width:100%; box-shadow: 10px 10px 5px #888888;border:1px solid #000000;"
                                            + " -webkit-border-bottom-left-radius:0px; border-bottom-left-radius:0px; -webkit-border-bottom-right-radius:0px; border-bottom-right-radius:0px;"
                                            + " -webkit-border-top-right-radius:0px; border-top-right-radius:0px; -webkit-border-top-left-radius:0px; border-top-left-radius:0px;"
                                            + "}.CSSTableOrange table{width:100%;height:100%;margin:0px;padding:0px;}.CSSTableOrange tr:last-child td:last-child {"
                                            + "-webkit-border-bottom-right-radius:0px;border-bottom-right-radius:0px;}.CSSTableOrange table tr:first-child td:first-child {"
                                            + "-webkit-border-top-left-radius:0px;border-top-left-radius:0px;}.CSSTableOrange table tr:first-child td:last-child {"
                                            + "-webkit-border-top-right-radius:0px;border-top-right-radius:0px;}.CSSTableOrange tr:last-child td:first-child{"
                                            + "-webkit-border-bottom-left-radius:0px;border-bottom-left-radius:0px;}.CSSTableOrange tr:hover td{}.CSSTableOrange tr:nth-child(odd){ background-color:#ffaa56; }"
                                            + ".CSSTableOrange tr:nth-child(even)    { background-color:#ffffff; }"
                                            + ".CSSTableOrange td{vertical-align:middle;border:1px solid #000000;border-width:0px 1px 1px 0px;"
                                            + "text-align:left;padding:7px;font-size:"+fontSize+"px; font-family:Arial;font-weight:bold;color:#000000;}.CSSTableOrange tr:last-child td{border-width:0px 1px 0px 0px;}"
                                            + ".CSSTableOrange tr td:last-child{border-width:0px 0px 1px 0px;}"
                                            + ".CSSTableOrange tr:last-child td:last-child{border-width:0px 0px 0px 0px;}"
                                            + ".CSSTableOrange tr:first-child td{background:-o-linear-gradient(bottom, #ff7f00 5%, #bf5f00 100%);	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ff7f00), color-stop(1, #bf5f00) );	background:-moz-linear-gradient( center top, #ff7f00 5%, #bf5f00 100% );	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ff7f00\", endColorstr=\"#bf5f00\");	background: -o-linear-gradient(top,#ff7f00,bf5f00);background-color:#ff7f00;border:0px solid #000000;text-align:center;"
                                            + "border-width:0px 0px 1px 1px;font-size:"+(fontSize+4)+"px; font-family:Arial;font-weight:bold;color:#ffffff;}"
                                            + ".CSSTableOrange tr:first-child:hover td{"
                                            + "	background:-o-linear-gradient(bottom, #ff7f00 5%, #bf5f00 100%);	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ff7f00), color-stop(1, #bf5f00) );	background:-moz-linear-gradient( center top, #ff7f00 5%, #bf5f00 100% );	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ff7f00\", endColorstr=\"#bf5f00\");	background: -o-linear-gradient(top,#ff7f00,bf5f00);background-color:#ff7f00;}"
                                            + ".CSSTableOrange tr:first-child td:first-child{border-width:0px 0px 1px 0px;}"
                                            + ".CSSTableOrange tr:first-child td:last-child{border-width:0px 0px 1px 1px;}";
                    break;
                 
                 case 9:
                 css                        = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }td {	border:none;}"
                                            + " body,td,th {	color: #F79900;}" +
                                            " .beer_list_title{ font-family: 'arial'; font-size:50px; font-weight:bold; color: #FFF; word-wrap:break-word; } " +
                                            " .beer_list_product_gold { font-family: 'arial'; font-size:20px; font-weight:bold; color: #F79900; overflow:hidden;  white-space:nowrap; } " +
                                            " .percentage_gold { font-family: 'kamanssk'; font-size:24px; font-weight:bold; color: #F79900; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_list_product_white { font-family: 'arial'; font-size:34px; font-weight:bold; color: #FFF; word-wrap:break-word; } " +
                                            " .beer_price { font-family: 'arial'; font-size:20px; font-weight:bold; color: #FFF; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'kamanssk'; font-size:18px; font-weight:bold; color: #FFF; overflow:hidden;  white-space:nowrap; } "
                                          + " .no_margin{	margin:0px;}";
                 break;
        }
        return css;
    }
     
     
     private String getTileMenu1CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};                    
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:36px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:18px;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:23px; font-weight:bold;  color: #ffffff; word-wrap:break-word; text-align:center;  }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }


     private String getTileMenu2CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:36px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:18px;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:23px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }


     private String getTileMenu3CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:26px;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:25px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
     
     
     

     private void getLocationPage(Element toHandle, Element toAppend) throws HandlerException {

        int locationId                      = HandlerUtils.getRequiredInteger(toHandle, "locationId");
        PreparedStatement stmt              = null;
        ResultSet rs                        = null,mlist = null;
        int type                            = 0, template = 2;
        String html                         = null,logo = null,glass = null;
        
        String selectLocationSponsors       = "SELECT bSCC.id, bSCr.brewery, bSCr.product, bSC.customer, bSCr.file, bSCr.type ,now(),bSCr.validity FROM bevSyncCampaign bSC " +
                                            " LEFT JOIN bevSyncCampaignLocations bSCL ON bSCL.campaign = bSC.id " +
                                            " LEFT JOIN bevSyncCampaignCreatives bSCC ON bSCC.campaign = bSC.id LEFT JOIN bevSyncCreatives bSCr ON bSCr.id = bSCC.creatives " +
                                            " WHERE bSCL.location = ? AND NOW() BETWEEN bSC.start AND bSC.end AND NOW() < bSCr.validity AND bSCr.type IN (1, 2);";        
        String getTimezone                  = "SELECT easternOffset, name FROM location WHERE id = ?";
        String getMarketPeriod              = "SELECT DISTINCT lU.product, 3 FROM lineUpdates lU LEFT JOIN line l ON l.id = lU.line WHERE lU.location = ? "
                                            + " AND lU.date > SUBDATE(NOW(), INTERVAL 7 DAY) AND l.status = 'RUNNING' ORDER BY lU.date DESC, lU.id DESC LIMIT 2;";
        String getMarketList                = "SELECT p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pD.origin, pD.seasonality, sPS.name, sL.logo, " +
                                            " CONCAT(bL.logo, IF(bL.type = 0, '.png', IF(bL.type = 1, '.jpg', '.gif'))), " +
                                            " (SELECT name FROM customBeerName WHERE location =? AND product = pD.product), " +
                                            " (SELECT name FROM customStyleName WHERE location =? AND productSet = sPS.id), " +
                                            " (SELECT logo FROM customStyleName WHERE location =? AND productSet = sPS.id) " +
                                            " FROM product p LEFT JOIN  productDescription pD ON pD.product=p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = pD.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " LEFT JOIN productSetMap pSM ON pSM.product = pD.product LEFT JOIN productSet pS ON pS.id = pSM.productSet " +
                                            " LEFT JOIN breweryLogo bL ON bL.brewery = pS.name " +
                                            " WHERE pS.productSetType = 7 AND sPS.productSetType = 9 AND pD.product = ? "  ;
        
        String selectLocationPromotions     = "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
        String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(bMU.username, ' LIKES ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT(bMU.username, ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
        String selectLocationMenuLayout     = "SELECT template FROM locationBeerBoardMap WHERE location = ?;";
        String selectAutoFeed               = "SELECT newBeer, localBeer, comingSoon FROM bbtvAutoFeed WHERE location=?;";
        String selectLocalBeer              = "SELECT l.product, l.advertise FROM line l"
                                            + " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN location lo ON lo.id = b.location WHERE lo.id= ? AND l.status = 'RUNNING' AND l.local>0;";
        int newBeer                         = 1,localBeer =1 ,comingSoon=1;
        
        
        try {
            stmt                            = transconn.prepareStatement(selectLocationMenuLayout);
            stmt.setInt(1,locationId);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                template                    = rs.getInt(1);
                
            }
            
            stmt                            = transconn.prepareStatement(selectAutoFeed);
            stmt.setInt(1,locationId);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                newBeer                     = rs.getInt(1);
                localBeer                   = rs.getInt(2);
                comingSoon                  = rs.getInt(3);
            }
            
            stmt                            = transconn.prepareStatement(selectLocationSponsors);
            stmt.setInt(1,locationId);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                int creativeId              = rs.getInt(1);
                int brewery                 = rs.getInt(2);
                int product                 = rs.getInt(3);
                String customer             = rs.getString(4);
                String creative             = rs.getString(5);
                int creativeType            = rs.getInt(6);
                String startTime            = rs.getString(7);
                String endTime              = rs.getString(8);
                
                Element locationPageEl      = toAppend.addElement("locationVideoPage");
                locationPageEl.addElement("id").addText(String.valueOf(creativeId));
                locationPageEl.addElement("creativeType").addText("2");
                locationPageEl.addElement("visibleTime").addText(String.valueOf("30000"));
                if(creativeType == 2){
                    locationPageEl.addElement("creative").addText(HandlerUtils.nullToEmpty("/mnt/sdcard/Images/"+creative));
                } else {
                    locationPageEl.addElement("creative").addText(HandlerUtils.nullToEmpty(getSponsorLayout("", creative)));
                }
                locationPageEl.addElement("file").addText(HandlerUtils.nullToEmpty(creative));
                locationPageEl.addElement("sequence").addText(String.valueOf(3));
                locationPageEl.addElement("type").addText(String.valueOf(creativeType));
                locationPageEl.addElement("startTime").addText(HandlerUtils.nullToEmpty(startTime));
                locationPageEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(endTime));

                Element pageAssetEl         = locationPageEl.addElement("asset");
                pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/bevSyncCustomers/" + customer + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20")));
            }
            if(locationId!=1002){
                Element locationSponEl      = toAppend.addElement("locationVideoPage");
                locationSponEl.addElement("id").addText(String.valueOf("0"));
                locationSponEl.addElement("creativeType").addText("2");
                locationSponEl.addElement("visibleTime").addText(String.valueOf("30000"));
                locationSponEl.addElement("creative").addText(HandlerUtils.nullToEmpty("/mnt/sdcard/Images/BBMobile.mp4"));
                locationSponEl.addElement("file").addText(HandlerUtils.nullToEmpty("BBMobile.mp4"));
                locationSponEl.addElement("sequence").addText("0");
                locationSponEl.addElement("type").addText(String.valueOf(2));
                locationSponEl.addElement("startTime").addText(HandlerUtils.nullToEmpty("2013-12-13 08:00:00"));
                locationSponEl.addElement("endTime").addText(HandlerUtils.nullToEmpty("2015-12-31 24:00:00"));
                Element mobileAssetEl       = locationSponEl.addElement("asset");
                mobileAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Videos/BBMobile.mp4"));
            }
            
            stmt                            = transconn.prepareStatement(getTimezone);
            stmt.setInt(1, locationId);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                if(newBeer > 0) {
                stmt                        = transconn.prepareStatement(getMarketPeriod);
                stmt.setInt(1, locationId);
                String locName              = rs.getString(2);
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    type                    = rs.getInt(2);
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    while(mlist.next()) {
                        //html                = getMarketingTemplate(mlist.getString(1),mlist.getString(2),mlist.getString(3),mlist.getString(4),mlist.getString(5)).toString();
                        glass               = mlist.getString(6) + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = mlist.getString(7);   
                        String productName  = mlist.getString(1);        
                        String style        = mlist.getString(5); 
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        if(StyleLogo!=null && !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        
                        
                        Element locationPageEl      
                                            = toAppend.addElement("locationPage");
                        locationPageEl.addElement("creativeType").addText(String.valueOf(4));
                        locationPageEl.addElement("type").addText(String.valueOf(type));
                        locationPageEl.addElement("visibleTime").addText("10000");
                        locationPageEl.addElement("html").addText(HandlerUtils.nullToEmpty(getMarketingTemplate(type,productName,mlist.getString(2),mlist.getString(3),mlist.getString(4),style,HandlerUtils.nullToEmpty(logo),HandlerUtils.nullToEmpty(glass)).toString().trim()));                       
                        locationPageEl.addElement("css").addText(HandlerUtils.nullToEmpty(getPageCSS(type)));
                        locationPageEl.addElement("layout").addText("<table width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                            "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%' bgcolor='#000000'><table width='100%' " +
                                            "height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; border-collapse: collapse'><tr><td width='100%' " +
                                            "height='20%'><div align=\"center\" class=\"feed\">DOWNLOAD<br />BEERBOARD MOBILE</div></td></tr><tr><td align='middle' width='100%' height='50%'>" +
                                            "<img height='25%' src='/mnt/sdcard/Images/MobileApp.png' /></td></tr><tr><td width='100%' height='30%' align='middle'>" +
                                            "<img width='90%' src='/mnt/sdcard/Images/iStoreGooglePlayIcon.png' /></td></tr></table></td></tr></table>");
                        locationPageEl.addElement("layoutCss").addText(HandlerUtils.nullToEmpty(getPageCSS(7)));
                        Element pageAssetEl = locationPageEl.addElement("asset");
                        pageAssetEl.addElement("url").addText(glassUrl);
                        pageAssetEl.addElement("url").addText("http://beerboard.tv/USBN.BeerBoard.UI/Images/logo/" + HandlerUtils.nullToEmpty(logo));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));                        
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));                                                                    
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    }
                }
                }
                
                if(comingSoon > 0){
                stmt                        = transconn.prepareStatement("SELECT DISTINCT product FROM comingSoonProducts WHERE location=?");
                stmt.setInt(1, locationId);                
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    type                    = 4;
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    if(mlist.next()) {
                        //html                = getMarketingTemplate(mlist.getString(1),mlist.getString(2),mlist.getString(3),mlist.getString(4),mlist.getString(5)).toString();
                        glass               = mlist.getString(6) + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = mlist.getString(7);     
                        String productName  = mlist.getString(1);        
                        String style        = mlist.getString(5);        
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        if(StyleLogo!=null && !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        //logger.debug("ProductName"+productName +"Style: "+style);
                        Element locationPageEl      
                                            = toAppend.addElement("locationPage");
                        locationPageEl.addElement("creativeType").addText(String.valueOf(4));
                        locationPageEl.addElement("type").addText(String.valueOf(type));
                        locationPageEl.addElement("visibleTime").addText("10000");
                        locationPageEl.addElement("html").addText(HandlerUtils.nullToEmpty(getMarketingTemplate(type,productName,mlist.getString(2),mlist.getString(3),mlist.getString(4),style,HandlerUtils.nullToEmpty(logo),HandlerUtils.nullToEmpty(glass)).toString().trim()));                       
                        locationPageEl.addElement("css").addText(HandlerUtils.nullToEmpty(getPageCSS(type)));
                        locationPageEl.addElement("layout").addText("<table width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                            "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%' bgcolor='#000000'><table width='100%' " +
                                            "height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; border-collapse: collapse'><tr><td width='100%' " +
                                            "height='20%'><div align=\"center\" class=\"feed\">DOWNLOAD<br />BEERBOARD MOBILE</div></td></tr><tr><td align='middle' width='100%' height='50%'>" +
                                            "<img height='25%' src='/mnt/sdcard/Images/MobileApp.png' /></td></tr><tr><td width='100%' height='30%' align='middle'>" +
                                            "<img width='90%' src='/mnt/sdcard/Images/iStoreGooglePlayIcon.png' /></td></tr></table></td></tr></table>");
                        locationPageEl.addElement("layoutCss").addText(HandlerUtils.nullToEmpty(getPageCSS(7)));
                        Element pageAssetEl = locationPageEl.addElement("asset");
                        pageAssetEl.addElement("url").addText(glassUrl);
                        pageAssetEl.addElement("url").addText("http://beerboard.tv/USBN.BeerBoard.UI/Images/logo/" + HandlerUtils.nullToEmpty(logo));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));                        
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));                                                                    
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    }
                }
                }
                
                if(localBeer > 0){
                stmt                        = transconn.prepareStatement(selectLocalBeer);
                stmt.setInt(1, locationId);                
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    type                    = 2;
                    stmt                    = transconn.prepareStatement(getMarketList);
                   stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    if(mlist.next()) {
                        //html                = getMarketingTemplate(mlist.getString(1),mlist.getString(2),mlist.getString(3),mlist.getString(4),mlist.getString(5)).toString();
                        glass               = mlist.getString(6) + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = mlist.getString(7);    
                        String productName  = mlist.getString(1);        
                        String style        = mlist.getString(5);        
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                          String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        if(StyleLogo!=null && !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        //logger.debug(glassUrl);
                        
                        Element locationPageEl      
                                            = toAppend.addElement("locationPage");
                        locationPageEl.addElement("creativeType").addText(String.valueOf(4));
                        locationPageEl.addElement("type").addText(String.valueOf(type));
                        locationPageEl.addElement("visibleTime").addText("10000");
                        locationPageEl.addElement("html").addText(HandlerUtils.nullToEmpty(getMarketingTemplate(type,productName,mlist.getString(2),mlist.getString(3),mlist.getString(4),style,HandlerUtils.nullToEmpty(logo),HandlerUtils.nullToEmpty(glass)).toString().trim()));                       
                        locationPageEl.addElement("css").addText(HandlerUtils.nullToEmpty(getPageCSS(type)));
                        locationPageEl.addElement("layout").addText("<table width='100%' height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; " +
                                            "border-collapse: collapse'><tr><td width='35%'></td><td width='40%'></td><td width='25%' bgcolor='#000000'><table width='100%' " +
                                            "height='100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 0px; border-collapse: collapse'><tr><td width='100%' " +
                                            "height='20%'><div align=\"center\" class=\"feed\">DOWNLOAD<br />BEERBOARD MOBILE</div></td></tr><tr><td align='middle' width='100%' height='50%'>" +
                                            "<img height='25%' src='/mnt/sdcard/Images/MobileApp.png' /></td></tr><tr><td width='100%' height='30%' align='middle'>" +
                                            "<img width='90%' src='/mnt/sdcard/Images/iStoreGooglePlayIcon.png' /></td></tr></table></td></tr></table>");
                        locationPageEl.addElement("layoutCss").addText(HandlerUtils.nullToEmpty(getPageCSS(7)));
                        Element pageAssetEl = locationPageEl.addElement("asset");
                        pageAssetEl.addElement("url").addText(glassUrl);
                        pageAssetEl.addElement("url").addText("http://beerboard.tv/USBN.BeerBoard.UI/Images/logo/" + HandlerUtils.nullToEmpty(logo));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Craft-Screen.png"));                        
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Domestic-Screen.png"));                                                                    
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoard-Imported-Screen-Green.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardlogo.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/beerboardorangelogo.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Logo/Wyder.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Glass/Altbier.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/iStoreGooglePlayIcon.png"));
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BlueBorder.png"));
                    }
                }
                }
            }
            
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, locationId);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String creative             = rs.getString(4);
                String startTime            = "2013-12-13 08:00:00";
                String endTime              = "2015-12-31 11:00:00";
                switch (rs.getInt(2)) {
                    case 1:
                        Element locationPageEl
                                            = toAppend.addElement("locationVideoPage");
                        locationPageEl.addElement("id").addText(String.valueOf(rs.getInt(1)));
                        locationPageEl.addElement("creativeType").addText("3");
                        locationPageEl.addElement("type").addText(String.valueOf(rs.getInt(2)));
                        locationPageEl.addElement("visibleTime").addText(rs.getString(3));
                        locationPageEl.addElement("creative").addText(HandlerUtils.nullToEmpty(getSponsorLayout("", creative)));    
                        locationPageEl.addElement("file").addText(HandlerUtils.nullToEmpty(creative));
                        locationPageEl.addElement("sequence").addText(String.valueOf(rs.getInt(5)));
                        locationPageEl.addElement("startTime").addText(HandlerUtils.nullToEmpty(startTime));
                        locationPageEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(endTime));
                        Element pageAssetEl  = locationPageEl.addElement("asset");                        
                        pageAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20")));
                        break;
                    case 2:
                        Element locationVideoPageEl
                                            = toAppend.addElement("locationVideoPage");
                        locationVideoPageEl.addElement("id").addText(String.valueOf(rs.getInt(1)));
                        locationVideoPageEl.addElement("creativeType").addText("3");
                        locationVideoPageEl.addElement("type").addText(String.valueOf(rs.getInt(2)));
                        locationVideoPageEl.addElement("visibleTime").addText(String.valueOf(rs.getString(3)));
                        locationVideoPageEl.addElement("creative").addText(HandlerUtils.nullToEmpty(HandlerUtils.nullToEmpty("/mnt/sdcard/Images/"+creative)));
                        locationVideoPageEl.addElement("file").addText(HandlerUtils.nullToEmpty(creative));
                        locationVideoPageEl.addElement("sequence").addText(String.valueOf(rs.getInt(5)));
                        locationVideoPageEl.addElement("startTime").addText(HandlerUtils.nullToEmpty(startTime));
                        locationVideoPageEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(endTime));
                        Element pageVideoAssetEl
                                            = locationVideoPageEl.addElement("asset");
                        if(rs.getInt(1)==1193){
                            pageVideoAssetEl.addElement("url").addText("http://beerboard.tv/USBN.BeerBoard.UI/bevSyncCustomers/6/Saranac%20Commercial.mp4");
                            
                        } else {
                            pageVideoAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/" + String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20")));
                        }
                        
                        break;
                    default:
                        break;
                }
            }

            int colCount                    = 1;
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, locationId);
            stmt.setInt(2, locationId);
            rs                              = stmt.executeQuery();
            if(rs.next()) {
                String avatar               = rs.getString(1);
                String fbId                 = rs.getString(4);
                //logger.debug("FbID:"+fbId);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                        avatar              = getAvatar(fbId);
                        avatar              = avatar.replace("https", "http");
                }
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")){
                    avatarFileName          = avatarArray2[0];
                }
                
                Element locationSMEl        = toAppend.addElement("locationPage");
                Element smAssetEl           = locationSMEl.addElement("asset");
                locationSMEl.addElement("id").addText(String.valueOf(colCount));
                locationSMEl.addElement("creativeType").addText("5");
                locationSMEl.addElement("type").addText(String.valueOf(5));
                locationSMEl.addElement("visibleTime").addText("10000");
                locationSMEl.addElement("html").addText(HandlerUtils.nullToEmpty(getSocialMediaLayout(avatarFileName, rs.getString(2), rs, smAssetEl)));
                locationSMEl.addElement("css").addText(HandlerUtils.nullToEmpty(getPageCSS((template == 3 ? 8 : 6))));
                locationSMEl.addElement("sequence").addText(String.valueOf(colCount));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(avatar));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/FacebookBar.png"));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoardSocialMedia.png"));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoardSocialMediaWithAd.jpg"));
            } else {
                Element locationSMEl        = toAppend.addElement("locationPage");
                Element smAssetEl           = locationSMEl.addElement("asset");
                locationSMEl.addElement("id").addText(String.valueOf(colCount));
                locationSMEl.addElement("creativeType").addText("5");
                locationSMEl.addElement("type").addText(String.valueOf(5));
                locationSMEl.addElement("visibleTime").addText("10000");
                locationSMEl.addElement("html").addText(HandlerUtils.nullToEmpty(getEmptySocialMediaLayout(smAssetEl)));
                locationSMEl.addElement("css").addText(HandlerUtils.nullToEmpty(getPageCSS((template == 3 ? 8 : 6))));
                locationSMEl.addElement("sequence").addText(String.valueOf(1));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/FacebookBar.png"));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoardSocialMedia.png"));
                smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/BeerBoardSocialMediaWithAd.jpg"));
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
    }
     
     private String getAvatar(String fbid ){
         
        String avatar                       = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
        try {
            if(fbid!= null && fbid.length() > 4) {
                String data                 = getData(new URL("http://graph.facebook.com/"+fbid+"/picture?type=normal&redirect=false"));      
                //logger.debug("data:"+data);
               if(data!= null && data.length() >6) {
                    JSONObject jdata        = new JSONObject(data);
                    if(jdata.has("data")){
                        jdata               = (JSONObject)jdata.get("data");
                        avatar              = jdata.get("url").toString();	
	                }
               /* data                        = data.replaceAll("/", "");
                avatar                      = data.substring(data.indexOf("url")+6,data.indexOf(",")-1);
                avatar                      = avatar.replaceAll("\\\\","/");
                logger.debug("Avatar:"+avatar);*/
                    
               }
            }
        } catch(Exception e) {
            logger.dbError("Error in get Avatar: "+e.toString());
        }
        return avatar;
    }
     
     private String getFBFirstName(String fbid ){
         
        String firstName                    = "";
        try {
            if(fbid!= null && fbid.length() > 4) {
                String data                 = getData(new URL("http://graph.facebook.com/"+fbid));                
               if(data!= null && data.length() >6) {
                    JSONObject jdata        = new JSONObject(data);
                    if(jdata.has("first_name")){
                        firstName           = jdata.get("first_name").toString();
	                }
               
               /* data                        = data.replaceAll("/", "");
                avatar                      = data.substring(data.indexOf("url")+6,data.indexOf(",")-1);
                avatar                      = avatar.replaceAll("\\\\","/");
                logger.debug("Avatar:"+avatar);*/
               }
            }
        } catch(Exception e) {
            logger.dbError("Error in get Avatar: "+e.toString());
        }
        return firstName;
    }
     
      public String getData(URL urL) {
          //logger.debug("fBID"+urL);
        String graph                        = null;
        try {
            String inputLine;            
            HttpURLConnection conn         = (HttpURLConnection) urL.openConnection();            
            BufferedReader in               = new BufferedReader(new InputStreamReader(conn.getInputStream()));           
            StringBuffer  b                 = new StringBuffer();           
            while ((inputLine = in.readLine()) != null){          
                b.append(inputLine + "\n");


            }            
            in.close();           
            graph                           = b.toString();
            //logger.debug(graph);
        }catch (Exception e) {
           logger.dbError(e.getMessage());
        }
        return graph;

    }
          
     private void getLocationSchedule(Element toHandle, Element toAppend) throws HandlerException {

        int locationId                      = HandlerUtils.getRequiredInteger(toHandle, "locationId");
        PreparedStatement stmt              = null;
        ResultSet rs                        = null;        
        String selectLocationSchedule       = "SELECT sequence, type, startDate, endDate FROM bbtvSchedule WHERE location = ? ORDER BY sequence";

        try {
            String open                     = "00:00:00";
            String close                    = "00:00:00";
            
            boolean schedule                = false;
            stmt                            = transconn.prepareStatement(selectLocationSchedule);
            stmt.setInt(1, locationId);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                schedule                    = true;
                Element bbtvScheduleEl      = toAppend.addElement("locationSchedule");
                bbtvScheduleEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(rs.getString(1)));
                bbtvScheduleEl.addElement("type").addText(HandlerUtils.nullToEmpty(rs.getString(2)));
                bbtvScheduleEl.addElement("startTime").addText(HandlerUtils.nullToEmpty(open));
                bbtvScheduleEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(close));
            }
            
            if(!schedule){
                stmt                        = transconn.prepareStatement(selectLocationSchedule);
                stmt.setInt(1, 0);
                rs                          = stmt.executeQuery();
                while (rs.next()) {
                    schedule                = true;
                    Element bbtvScheduleEl  = toAppend.addElement("locationSchedule");
                    bbtvScheduleEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(rs.getString(1)));
                    bbtvScheduleEl.addElement("type").addText(HandlerUtils.nullToEmpty(rs.getString(2)));
                    bbtvScheduleEl.addElement("startTime").addText(HandlerUtils.nullToEmpty(open));
                    if(rs.getInt(2)==2){
                        bbtvScheduleEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(close));
                    } else if(rs.getInt(2)==3){
                        bbtvScheduleEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(close));
                    }       else {
                        bbtvScheduleEl.addElement("endTime").addText(HandlerUtils.nullToEmpty(close));
                    }
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
    }
     
     
     
     
     private String getBeverageSize(int location) throws HandlerException {
        PreparedStatement stmt              = null;
        ResultSet rs                        = null;        
        String selectBeverageSize           = "SELECT name FROM beverageSize WHERE location = ? AND showOnTV = 1 ORDER BY ounces; ";
        StringBuilder beerSize              = new StringBuilder("<table width=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 15px;'><tr><td colspan='6' align='left' valign='top'><span class='beer_size'>Draft Sizes:</span> ");

        try {
            stmt                            = transconn.prepareStatement(selectBeverageSize);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                beerSize.append("<span class='beer_size'>");
                beerSize.append(rs.getString(1));
                if (!rs.isLast()) {
                    beerSize.append(" | ");
                }
                beerSize.append("</span> ");
            }
            beerSize.append("</td></tr></table>");
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
        return beerSize.toString();
    }

      private String getSocialMediaLayout(String file, String message, ResultSet rs, Element smAssetEl) throws HandlerException {
           StringBuilder sb                 = new StringBuilder();
           sb.append("<table width='80%' height = '100%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 15px; padding-top: 90px;'>" +
                                            "<tr><td><div align='center' style='padding-bottom: 20px; padding-left: 20px;'><img width='180px' src =\"/mnt/sdcard/Images/beerboardlogo.png\"/></div></td><td /></tr>" +
                                            "<tr style='height: 100px;'><td align='center'><img width='80px'  src='/mnt/sdcard/Images/"+file.replaceAll("%20", " ")+"'/></td>" +
                                            "<td><p><span class='beer_title'>"+message +"</span></p></td></tr>" +
                                            "<tr><td colspan='2'><div align='left' style='padding-top: 20px; padding-left: 65px;'><img width=70%' src =\"/mnt/sdcard/Images/BlueBorder.png\"/></div></td></tr>");
           try {
               while (rs.next()) {
                   String avatar            = rs.getString(1);
                   String fbId              = rs.getString(4);
                   //logger.debug("FbID:"+fbId);
                   if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                       avatar               = getAvatar(fbId);
                       avatar               = avatar.replace("https", "http");
                   }
                   if (!httpFileExists(avatar)) {
                       avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                   }
                   String[] avatarArray     = avatar.split("/");
                   int arrayLength          = avatarArray.length;
                   String avatarFileName    = avatarArray[arrayLength - 1];

                   sb.append("<tr style='height: 150px; border-bottom: solid 1px white;'><td align='center'><img width='80px'  src='/mnt/sdcard/Images/"+avatarFileName.replaceAll("%20", " ")+"' align='middle'/></td>" +
                                            "<td><p><span class='beer_title'>"+rs.getString(2) +"</span></p></td></tr>" +
                                            "<tr><td colspan='2'><div align='left' style='padding-top: 20px; padding-left: 65px;'><img width=70%' src =\"/mnt/sdcard/Images/BlueBorder.png\"/></div></td></tr>");
                   smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(avatar));
               }
           } catch (SQLException sqle) {
               logger.dbError("Database error: "+sqle.toString());
               throw new HandlerException(sqle);
           } finally {
               close(rs);
           }
           sb.append("</table>");
           return(sb.toString());                      
       }
      
      private String getEmptySocialMediaLayout(Element smAssetEl) throws HandlerException {
           StringBuilder sb                 = new StringBuilder();
           sb.append("<table align=\"left\" style=\" margin-left:70px; margin-top:80px;  \"   width=\"75%\" border=\"0\">"
                   + " <tr> <td style=\"padding-top:50px; padding-left:20px;\" valign=\"middle\" scope=\"col\" rowspan=\"3\"><img align=\"left\"  width=\"250\" height=\"522\" src=\"/mnt/sdcard/Images/iphone menu.png\" /></td>"
                   + " <td  align=\"center\"height=\"230\" scope=\"col\"><img  src=\"/mnt/sdcard/Images/facebook_places.png\" width=\"50\" height=\"50\"  align=\"center\"/></td>"
                   + " <td align='center'> <p class=\"beer_title\">Tell your</p> <p class=\"beer_title\"> Friends</p> <p class=\"beer_title\"> You Are Here </p>   </td></tr>"
                   + "<tr> <td colspan=\"2\" height=\"96\"><img src=\"/mnt/sdcard/Images/BlueBorder.png\" width=\"500\"/></td>"
                   + " </tr>  <tr>  <td align=\"center\"><img src=\"/mnt/sdcard/Images/like.png\" align=\"center\" width=\"50\" height=\"50\" /></td>"
                   + " <td align=\"center\">   <p  class=\"beer_title\"> Like and </p> <p   class=\"beer_title\">Recommend Your  </p> <p   class=\"beer_title\">Favorite Beers  </p>  "
                   + " </td></tr></table>");
           smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://social.usbeveragenet.com:8080/fileUploader/Images/iphone%20menu.png"));
           smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/facebook_places.png"));
           smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MobileApp.png"));
           smAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png"));
           
           return(sb.toString());                      
       }

        public static boolean httpFileExists(String URLName){
            try {
              HttpURLConnection.setFollowRedirects(false);
              HttpURLConnection con         = (HttpURLConnection) new URL(URLName).openConnection();
              con.setRequestMethod("HEAD");
              return (con.getResponseCode() == HttpURLConnection.HTTP_OK);
            }
            catch (Exception e) {
               e.printStackTrace();
               return false;
            }
        }


       private String getSponsorLayout(String title, String file) throws HandlerException {
           
           StringBuilder sb                 = new StringBuilder();
           sb.append("<html>");
           sb.append("<head><style type=\"html/css\">");
           sb.append(getPageCSS(5));
           sb.append("</style></head> <body bgcolor=\"#000000\">");
           sb.append("<table border='0' cellspacing='0' cellpadding='0' align='middle' style='min-height: 100%; height: 100%; width:100%;'><tr><td align='center'>" +
                                            "<p><span class='beer_title'>"+title +"</span></td></tr><tr><td align='middle' valign='middle'>" +
                                            "<div class='bg'><img style=\" max-width:1250px;  max-height:600px; \"   src=\"/mnt/sdcard/Images/"+file.replaceAll("%20", " ")+"\"/></div></td></tr>" +
                                            "<tr><td></td></tr></table><div style=\"height:100%;width:100%;\"><img src=\"/mnt/sdcard/Images/beerboardorangelogo.png\"" +
                                            " style=\"position:absolute; float:right; right:20px; bottom:15px; z-index:2;\">");
           sb.append("</body></html>");
           return(sb.toString());
       }
       
       private String getPromotionLayout(String title, String file) throws HandlerException {
           StringBuilder sb                 = new StringBuilder();
           sb.append("<table border='0' cellspacing='0' cellpadding='0' align='middle' style='min-height: 100%; height: 100%; width:100%;'><tr><td align='center'>" +
                                            "<p><span class='beer_title'>"+title +"</span></td></tr><tr><td align='middle' valign='middle'>" +
                                            "<div class='bg'><img src=\"/mnt/sdcard/Images/"+file.replaceAll("%20", " ")+"\"/></div></td></tr>" +
                                            "<tr><td></td></tr></table><div style=\"height:100%;width:100%;\"><img src=\"/mnt/sdcard/Images/beerboardorangelogo.png\"" +
                                            " style=\"position:absolute; float:right; right:20px; bottom:20px; z-index:2;\">");
           return(sb.toString());
       }
       
       private String getMenuAnimationPage(int type) throws HandlerException {
           String typeBackground[]={"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Craft-Screen.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png"};
           String layout            = "";
           StringBuilder sb = new StringBuilder();
           sb.append(" body { background-image: url('"+typeBackground[type]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }" 
                   + "div { position:relative; animation:myfirst 10s; animation-direction:alternate;"
                   + " -webkit-animation:myfirst 5s; -webkit-animation-direction: alternate; }"
                   + "#me {  -webkit-animation: rotation 1s infinite linear; }"
                   + "@-webkit-keyframes rotation {   from {-webkit-transform: rotate(359deg);} to   {-webkit-transform: rotate(0deg); "
                   + "-webkit-animation-direction:normal !important;}}"
                   + "@keyframes myfirst { 0%   { right:0px; top:0px;} 100%  {right:600px; top:0px;} }"
                   + "@-webkit-keyframes myfirst { 0%   { right:0px; top:0px;} 100%  {right:800px; top:0px;}}");
           return(sb.toString());                     
       }
     
      private StringBuilder getMarketingTemplate(int type,String name, String abv, String origin, String seasonal, String style,String logo,String glass) throws HandlerException {
            String title[]                  = {"Top Movers","Top Movers","Local Beer", "New Brew On Tap","On Deck"};
            StringBuilder beerInfo          = new StringBuilder();

            beerInfo.append("<table width='70%'  border='0' cellspacing='0' cellpadding='0' style='padding-left: 15px;'> <tr> <td align='center'><p>" +
                                            "<span class='beer_title'> "+title[type]+"</span></p></td></tr></table>" +
                                            "<table width='70%' border='0' cellspacing='0' cellpadding='0' style='padding-left: 15px;'>" +
                                            "<tr><td width='20%'><img style='max-width: 250px' align='left' src=\""+"/mnt/sdcard/Images/"+logo.replaceAll("%20", " ") +"\" /></td>" +
                                            "<td width='40%'><table border='0' cellspacing='0' cellpadding='0' style='padding-left: 15px;'>" +
                                            "<tr><td><p style='padding-bottom:10px;'><span class='beer_list_title'> "+name+"</span></p></td></tr>" +
                                            "<tr><td><p style='padding-bottom:5px;'><span class='beer_list_abv'>Style: "+style+"</span></p></td></tr>" +
                                            "<tr><td>" + (abv.length() > 0 ? "<p style='padding-bottom:5px;'><span class='beer_list_abv'>ABV: "+abv+"</span></p>" : "") +
                                            "<p style='padding-bottom:5px;'><span class='beer_list_abv'>Origin: "+origin+"</span></p><p>&nbsp;</p></td></tr>" +
                                            "<tr><td><p class='beer_list_Season'> Availablity: "+seasonal+"</p></td> </tr></table></td>" +
                                            "<td width='10%'><img align='right' style='max-width: 120px' src=\""+"/mnt/sdcard/Images/"+glass.replaceAll("%20", " ")+"\" />" +
                                            "</td></tr></table>");
        return beerInfo;
    }
      
      private String getPageCSS(int type) throws HandlerException {

          String typeBackground[]           = {"/mnt/sdcard/Images/BeerBoard-Domestic-Screen.png","/mnt/sdcard/Images/BeerBoard-Craft-Screen.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png","/mnt/sdcard/Images/BeerBoard-Imported-Screen-Green.png", "", "/mnt/sdcard/Images/BeerBoardSocialMedia.png", "/mnt/sdcard/Images/BeerBoardSocialMediaWithAd.jpg"};

          String  css                       = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/Orange_Background_by_soxrox22.png'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }" +
                                            " .beer_list_title{ font-family: 'PPETRIAL'; font-size:30px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +                                            
                                            "  .percentage { font-family: 'PPETRIAL'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            " .beer_size { font-family: 'PPETRIAL'; font-size:30px; font-weight:bold; overflow:hidden;  white-space:nowrap; } ";
         
            switch(type) {
                case 1:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[type - 1]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }  "
                                            + ".beer_title{ font-family: 'kamanssk'; font-size:40px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; }"
                                            + ".beer_list_title{ font-family: 'kamanssk'; font-size:45px; font-weight:bold; color: #000; word-wrap:break-word;  }"
                                            + " .beer_list_abv { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap;  }"
                                            + "  .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + "  .beer_list_desc { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".beer_list_Season { font-family: 'kamanssk'; font-size:28px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } ";
                    break;
                case 2:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[type - 1]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }  "
                                            + ".beer_title{ font-family: 'kamanssk'; font-size:50px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; }"
                                            + ".beer_list_title{ font-family: 'kamanssk'; font-size:45px; font-weight:bold; color: #000; word-wrap:break-word;  }"
                                            + " .beer_list_abv { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap;  }"
                                            + "  .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + "  .beer_list_desc { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".beer_list_Season { font-family: 'kamanssk'; font-size:28px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } ";
                    break;
                case 3:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[type - 1]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }"
                                             + ".beer_title{ font-family: 'kamanssk'; font-size:50px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; }"
                                            + ".beer_list_title{ font-family: 'kamanssk'; font-size:45px; font-weight:bold; color: #000; word-wrap:break-word;  }"
                                            + " .beer_list_abv { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap;  }"
                                            + "  .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + "  .beer_list_desc { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".beer_list_Season { font-family: 'kamanssk'; font-size:28px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } ";
                    break;
                case 4:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[type - 1]+"'); background-position: left top; background-repeat: repeat; fieldset border-style:none; }"
                                            + ".beer_title{ font-family: 'kamanssk'; font-size:50px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; }"
                                            + ".beer_list_title{ font-family: 'kamanssk'; font-size:45px; font-weight:bold; color: #000; word-wrap:break-word;  }"
                                            + " .beer_list_abv { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap;  }"
                                            + "  .percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + "  .beer_list_desc { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } "
                                            + ".beer_list_Season { font-family: 'kamanssk'; font-size:28px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } ";
                    break;
                case 5:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; }  " +
                                            ".beer_title{ font-family: 'kamanssk'; font-size:50px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; }" +
                                            ".beer_list_title{ font-family: 'kamanssk'; font-size:45px; font-weight:bold; color: #000; word-wrap:break-word; }" +
                                            ".beer_list_abv { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap;  }" +
                                            ".percentage { font-family: 'kamanssk'; font-size:26px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            ".beer_list_desc { font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            ".beer_list_Season { font-family: 'kamanssk'; font-size:28px; font-weight:bold; color: #000; overflow:hidden;  white-space:nowrap; } " +
                                            "div.bg { position: fixed; top: 0; right: 0; bottom: 0; left: 0; text-align: center; } " +
                                            "div.bg img { height: 600px; max-height: 600px; }";
                    break;
                case 6:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[5]+"'); background-position: left top; background-repeat: no-repeat; background-size: cover; fieldset border-style: none;}  " +
                                            ".beer_title{ font-family: 'kamanssk'; font-size:30px; font-weight:bold; color: #000000; word-wrap:break-word; }";
                    break;
                case 7:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            ".no_margin{	margin:0px;}" +
                                            " body { border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .feed{ font-family: 'kamanssk'; font-size:25px; font-weight:bold; color: #ff9900; overflow:hidden;  white-space:nowrap; } " ;
                    break;
                case 8:
                    css                     = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'ChalkDust'; src: url('file:///android_asset/fonts/chalkdust.ttf'); } " +
                                            " @font-face { font-family: 'PPETRIAL'; src: url('file:///android_asset/fonts/PPETRIAL.otf'); } " +
                                            " @font-face { font-family: 'arial'; src: url('/mnt/sdcard/Images/arial.ttf'); } " +
                                            " @font-face { font-family: 'kamanssk'; src: url('/mnt/sdcard/Images/kamanssk.ttf'); } " +
                                            " body { background-image: url('"+typeBackground[6]+"'); background-position: left top; background-repeat: no-repeat; background-size: cover; fieldset border-style: none;}  " +
                                            ".beer_title{ font-family: 'kamanssk'; font-size:30px; font-weight:bold; color: #000000; word-wrap:break-word; }";
                    break;
                
            }
            return css;
      }

   private void addSponsorLogs(Element toHandle, Element toAppend) throws HandlerException {
       // int callerId                        = getCallerId(toHandle);
        int locationId                      = HandlerUtils.getRequiredInteger(toHandle, "locationId");
        long epoch                          = System.currentTimeMillis() / 1000;
        PreparedStatement stmt              = null;
        ResultSet rs                        = null;
        int count                           = 0, externalMedia = 0;
        String getLastId                    = "SELECT LAST_INSERT_ID()";
        try {

            String selectUserTVAccess       = "SELECT lBM.externalMedia FROM locationBeerBoardMap lBM WHERE lBM.location = ?";
            stmt                            = transconn.prepareStatement(selectUserTVAccess);
            stmt.setInt(1, locationId);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                externalMedia               = rs.getInt(1);
            }

            Iterator updateCredits          = toHandle.elementIterator("sponsorLogs");
            while (updateCredits.hasNext()) {
                Element logs                = (Element) updateCredits.next();
                int type                    = HandlerUtils.getRequiredInteger(logs, "type");
                String file                 = HandlerUtils.getRequiredString(logs, "file");
                String date                 = HandlerUtils.getRequiredString(logs, "time");

                String insertLog            = " INSERT INTO sponsorLogs (location, type, file, date) VALUES (?, ?, ?, ?) ";
                stmt                        = transconn.prepareStatement(insertLog);
                stmt.setInt(1, locationId);
                stmt.setInt(2, type);

                stmt.setString(3, file);
                stmt.setString(4, date);
                stmt.executeUpdate();

                stmt                        = transconn.prepareStatement(getLastId);
                rs                          = stmt.executeQuery();
                if (rs.next()) {
                    count++;
                } else {
                    logger.dbError("first call to LAST_INSERT_ID in addSponsorLogs failed to return a result");
                    throw new HandlerException("Database Error");
                }

                if (externalMedia > 0) {
                    SimpleDateFormat newDateFormat
                                            = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    Calendar dateCal        = Calendar.getInstance();
                    try {
                        dateCal.setTime(newDateFormat.parse(date));
                    } catch (Exception pe) { }

                    String selectLocationPOP= "SELECT id, pop FROM vistarCreatives WHERE location = ? AND file = ? AND used = 0 ORDER BY id LIMIT 1";
                    stmt                    = transconn.prepareStatement(selectLocationPOP);
                    stmt.setInt(1, locationId);
                    stmt.setString(2, file);
                    rs                      = stmt.executeQuery();
                    if (rs.next()) {
                        //sendProofOfPlay(new URL(rs.getString(2)), dateCal.getTimeInMillis() / 1000);
                        stmt                = transconn.prepareStatement("UPDATE vistarCreatives SET used = 1 WHERE id = ?;");
                        stmt.setInt(1, rs.getInt(1));
                        stmt.executeUpdate();
                    }
                }
            }
            toAppend.addElement("logId").addText("1");
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e) {
           logger.dbError("getJson error: "+e.toString());
            throw new HandlerException(e);
        } finally {
            close(stmt);
        }
    }


    /*private void sendProofOfPlay(URL url, long epoch) throws Exception {

       try {
           JSONObject obj                   = new JSONObject();
           obj.put("display_time", epoch);

           JSONStringer json                = new JSONStringer();

           if (obj!=null) {
               Iterator<String> itKeys      = obj.keys();
               if(itKeys.hasNext())
                   json.object();
               while (itKeys.hasNext()) {
                   String k                 = itKeys.next();
                   json.key(k).value(obj.get(k));
               }
           }
           json.endObject();
           String jsonValue                 = json.toString();
           logger.debug("Request Json: " + jsonValue);
           HttpURLConnection conn           = (HttpURLConnection) url.openConnection();
           conn.setRequestMethod("POST");
           conn.setDoOutput(true);
           conn.setUseCaches(false);
           conn.setRequestProperty("Content-Type", "application/json");
           conn.setRequestProperty("Accept", "application/json");
           conn.setRequestProperty("Content-Length", Integer.toString(jsonValue.length()));
           conn.getOutputStream().write(jsonValue.getBytes());
           conn.getOutputStream().flush();
           conn.connect();

           //testHttpURLConnection(conn);

           if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
               logger.debug("POST method failed: " + conn.getResponseCode() + "\t" + conn.getResponseMessage());
               logger.debug("getJson Fail");
           } else {
               InputStream responseContent  = (InputStream) conn.getContent();
               ByteArrayOutputStream buffer = new ByteArrayOutputStream();
               int nRead;
               byte[] data                  = new byte[16384];
               while ((nRead = responseContent.read(data, 0, data.length)) != -1) {
                   buffer.write(data, 0, nRead);
               }
               buffer.flush();
               byte responses[]             = buffer.toByteArray();
               String response              = new String(responses);
               logger.debug(response);
           }
       } catch (Exception e) {
           logger.dbError("getJson error: "+e.toString());
            throw new HandlerException(e);
       }
    }*/
      
      
      private void getBeerBoardTvUpdates(Element toHandle, Element toAppend) throws HandlerException {

        int location                        = HandlerUtils.getRequiredInteger(toHandle, "locationId");
        int bbtvUser                        = HandlerUtils.getOptionalInteger(toHandle, "userId");        
        String version                      = HandlerUtils.getOptionalString(toHandle, "version");
        String wmac                         = HandlerUtils.getOptionalString(toHandle, "wmac");
        String emac                         = HandlerUtils.getOptionalString(toHandle, "emac");
        PreparedStatement stmt              = null;
        ResultSet rs                        = null;
        Calendar currentDate                = Calendar.getInstance();
        if(String.valueOf(location).contains("990")) {
             String locTemp[]               = String.valueOf(location).split("990");             
             location                       = Integer.parseInt(locTemp[0]);
             //logger.debug("BBTV Updates"+location);
        }

        String selectMACUserAccess          = "SELECT COUNT(id) FROM bbtvUserMac WHERE location = ? ";
        String selectUserTVAccess           = "SELECT logo, css, schedule, specials, promotions, sponsors, count, tempCount, marketing, feed,restart FROM locationBeerBoardMap WHERE location = ? ";
        String updateUserTVAccess           = "UPDATE locationBeerBoardMap SET logo=?, css=?, schedule=?, specials=?, promotions=?, sponsors=?, tempCount = ?, marketing = ?, feed = ?, restart = ? WHERE location = ? ";
        String selectBBTVUserPing           = "SELECT lastPing FROM bbtvUserMac WHERE id = ? ;";        
        String updateBBTVUserPing           = "UPDATE bbtvUserMac SET lastPing = ?, version=? WHERE id = ?;";
        String updateBBTVPing               = "UPDATE beerboard SET lastPing = ?, version=?, wmac = ?, emac = ? WHERE location = ?;";
        String insertInterruptionLogs       = "INSERT INTO bbtvInterruptionLogs (location, startTime, endTime, totalMinutes,user) VALUES (?,?,?,?,?)";
        String selectBBTV                   = "SELECT id, lastPing FROM beerboard WHERE location = ? and (wmac=? OR emac=?);";
        String insertBBTV                   = "INSERT INTO beerboard (name, location, wmac, emac, version) (SELECT name, id, ?, ?, ? FROM location WHERE id = ?)";
        String updateBBTV                   = "UPDATE beerboard SET lastPing = ?, wmac = ?, emac =?, version = ?  WHERE id = ?";        
        String updateBBTVUserPing1          = "UPDATE bbtvUserMac SET lastPing = ? WHERE location = ?;";
        String insertInterruptionLogs1      = "INSERT INTO bbtvInterruptionLogs (location, startTime, endTime, totalMinutes,emac,wmac) VALUES (?,?,?,?,?,?)";

        try {
            stmt                            = transconn.prepareStatement(selectMACUserAccess);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            if (rs.next() && (rs.getInt(1) > 0)) {
                stmt                        = transconn.prepareStatement("UPDATE locationBeerBoardMap SET count = ? WHERE location = ?");
                stmt.setInt(1, rs.getInt(1));
                stmt.setInt(2, location);
                stmt.executeUpdate();
            }

            stmt                            = transconn.prepareStatement(selectUserTVAccess);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                int colCount                = 1;
                int updateLogo              = rs.getInt(colCount++);
                int updateCSS               = rs.getInt(colCount++);
                int updateSchedule          = rs.getInt(colCount++);
                int updateMenu              = rs.getInt(colCount++);
                int updatePromotions        = rs.getInt(colCount++);
                int updateSponsors          = rs.getInt(colCount++);
                int count                   = rs.getInt(colCount++);
                int tempCount               = rs.getInt(colCount++);
                int updateMarketing         = rs.getInt(colCount++);
                int updateFeed              = rs.getInt(colCount++);
                int restart                 = rs.getInt(colCount++);

                toAppend.addElement("updateLogo").addText(String.valueOf(updateLogo));     
                if(updateMenu>0||updateCSS>0) {
                    toAppend.addElement("updateMenu").addText(String.valueOf(1));
                } else {
                    toAppend.addElement("updateMenu").addText(String.valueOf(0));
                }
                if(updatePromotions > 0 || updateMarketing > 0 || updateFeed > 0 || updateSponsors > 0) {
                    toAppend.addElement("updatePage").addText(String.valueOf(1));
                } else {
                    toAppend.addElement("updatePage").addText(String.valueOf(0));
                }
                if(updateSchedule > 0) {
                    toAppend.addElement("updateSchedule").addText(String.valueOf(1));
                } else {
                    toAppend.addElement("updateSchedule").addText(String.valueOf(0));
                }
                
                if(restart > 0) {
                    toAppend.addElement("updateRestart").addText(String.valueOf(1));
                } else {
                    toAppend.addElement("updateRestart").addText(String.valueOf(0));
                }
                
                if (updateLogo > 0 || updateCSS > 0 || updateMenu > 0 || updatePromotions > 0 || updateSponsors > 0 || updateMarketing > 0 || updateFeed > 0 || updateSchedule > 0 || restart > 0) {
                    if ((count - tempCount) == 1) {
                        stmt                = transconn.prepareStatement(updateUserTVAccess);
                        stmt.setInt(1, 0);
                        stmt.setInt(2, 0);
                        stmt.setInt(3, 0);
                        stmt.setInt(4, 0);
                        stmt.setInt(5, 0);
                        stmt.setInt(6, 0);
                        stmt.setInt(7, 0);
                        stmt.setInt(8, 0);
                        stmt.setInt(9, 0);
                        stmt.setInt(10, 0);
                        stmt.setInt(11, location);
                        stmt.executeUpdate();
                    } else {
                        stmt                = transconn.prepareStatement(updateUserTVAccess);
                        stmt.setInt(1, updateLogo);
                        stmt.setInt(2, updateCSS);
                        stmt.setInt(3, updateSchedule);
                        stmt.setInt(4, updateMenu);
                        stmt.setInt(5, updatePromotions);
                        stmt.setInt(6, updateSponsors);
                        stmt.setInt(7, tempCount + 1);
                        stmt.setInt(8, updateMarketing);
                        stmt.setInt(9, updateFeed);
                        stmt.setInt(10, restart);
                        stmt.setInt(11, location);
                        stmt.executeUpdate();
                    }
                }
            } else {
                addErrorDetail(toAppend, "Beer Board does not have access for this location.");
            }
            
            if (bbtvUser > 0) {
                String lastPing             = dbDateFormat.format(currentDate.getTime());
                stmt                        = transconn.prepareStatement(selectBBTVUserPing);
                stmt.setInt(1, bbtvUser);                
                rs                          = stmt.executeQuery();
                if (rs.next()) {              
                    long timeDiff           = (Math.abs(currentDate.getTime().getTime() - rs.getTimestamp(1).getTime()) / 1000) / 60;
                    if (timeDiff > 15 && timeDiff < 36000)
                    {
                        //logger.debug("Data Interruption found for system Location " + String.valueOf(location) + " : Interrupted by " + String.valueOf(timeDiff) + " minutes");
                        stmt                = transconn.prepareStatement(insertInterruptionLogs);
                        stmt.setInt(1, location);               
                        stmt.setTimestamp(2, rs.getTimestamp(1));
                        stmt.setTimestamp(3, new java.sql.Timestamp(currentDate.getTime().getTime()));
                        stmt.setLong(4, timeDiff);
                        stmt.setInt(5, bbtvUser);                         
                        stmt.executeUpdate();              
                    }

                    stmt                    = transconn.prepareStatement(updateBBTVUserPing);
                    stmt.setString(1, lastPing);
                    stmt.setString(2, version);
                    stmt.setInt(3, bbtvUser);
                    stmt.executeUpdate();
                }

                stmt                        = transconn.prepareStatement(updateBBTVPing);
                stmt.setString(1, lastPing);
                stmt.setString(2, version);
                stmt.setString(3, wmac);
                stmt.setString(4, emac);
                stmt.setInt(5, location);
                stmt.executeUpdate();
            } else {
                if (wmac == null) {
                    wmac                    = "NA";
                }          
                if(emac == null) {
                    emac                        = "NA";
                }

                if (!wmac.equals("00:0a:eb:c0:9e:bf") && !wmac.equals("48:02:2a:c7:c1:96") && !wmac.equals("48:02:2a:c7:c1:80") && !wmac.equals("48:02:2a:c7:c1:7e") && !wmac.equals("48:02:2a:c7:be:5e")) {
                    stmt                        = transconn.prepareStatement(selectBBTV);
                    stmt.setInt(1, location);
                    stmt.setString(2, wmac);
                    stmt.setString(3, emac);
                    rs                          = stmt.executeQuery();
                    if (rs.next()) {              
                        String lastPing         = dbDateFormat.format(currentDate.getTime());
                        long timeDiff                   = (Math.abs(currentDate.getTime().getTime() - rs.getTimestamp(2).getTime()) / 1000) / 60;
                         if (timeDiff > 15 && timeDiff < 36000)
                         {
                            //logger.debug("Data Interruption found for system Location " + String.valueOf(location) + " : Interrupted by " + String.valueOf(timeDiff) + " minutes");
                             stmt                        = transconn.prepareStatement(insertInterruptionLogs1);
                             stmt.setInt(1, location);               
                             stmt.setTimestamp(2, rs.getTimestamp(2));
                             stmt.setTimestamp(3, new java.sql.Timestamp(currentDate.getTime().getTime()));
                             stmt.setLong(4, timeDiff);
                             stmt.setString(5, emac);
                             stmt.setString(6, wmac);
                             stmt.executeUpdate();              
                         }

                         stmt                    = transconn.prepareStatement(updateBBTV);  
                         stmt.setString(1, lastPing);
                         stmt.setString(2, wmac);
                         stmt.setString(3, emac);
                         stmt.setString(4, version);
                         stmt.setInt(5, rs.getInt(1));
                         stmt.executeUpdate();

                         stmt                    = transconn.prepareStatement(updateBBTVUserPing1);
                         stmt.setString(1, lastPing);
                         stmt.setInt(2, location);
                         stmt.executeUpdate();
                    } else {
                        stmt                    = transconn.prepareStatement(insertBBTV);
                        stmt.setString(1, wmac);
                        stmt.setString(2, emac);
                        stmt.setString(3, version);
                        stmt.setInt(4, location);
                        stmt.executeUpdate();
                    }
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
    }
      
      
      private ArrayList<String> getBeerBoardMenuStyleTemplate(int location, int maxRow) throws HandlerException {

        ArrayList<String> beerBoardMenus    = new ArrayList<String>();
        PreparedStatement stmt              = null;
        ResultSet rs                        = null, innerRS = null;

        try {
            //logger.debug("Loading Auto-Adjustment Style Template");

            String selectBeverageSize       = "SELECT name FROM beverageSize WHERE location = ? AND showOnTV = 1 ORDER BY ounces; ";
            String selectBeverageDescription= "SELECT DISTINCT pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, ( SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName WHERE location =b.location AND productSet = sPS.id)  FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName";

            StringBuilder beerMenuSize      = new StringBuilder("<table width='100%' height='500' border='0' cellspacing='0' cellpadding='0'>");
            StringBuilder beerSize          = new StringBuilder("<tr><td colspan='3' align='left' valign='top'><span class='beer_size'>Draft Sizes:</span> ");
            stmt                            = transconn.prepareStatement(selectBeverageSize);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                beerSize.append("<span class='beer_size'>");
                beerSize.append(rs.getString(1));
                if (!rs.isLast()) {
                    beerSize.append(" | ");
                }
                beerSize.append("</span> ");
            }
            beerSize.append("</td></tr>");
            beerMenuSize.append(beerSize);

            StringBuilder prodDesc          = new StringBuilder();
            StringBuilder beerMenu          = new StringBuilder("<table height='100%' width='100%' valign='top'>");          
            int colCount                    = 0, rowCount = 0;
            String preStyle                 = null, currStyle = null;
            stmt                            = transconn.prepareStatement(selectBeverageDescription);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                String productName          = rs.getString(2);
                String abv                  = rs.getString(3);
                currStyle                   = rs.getString(4);
                 String customName          = HandlerUtils.nullToString(rs.getString(5),productName); 
                 currStyle                      = HandlerUtils.nullToString(rs.getString(6),currStyle);
                 if(customName!=null && !customName.equals("")){
                     productName            = customName;
                 }
                if(preStyle==null) {
                    preStyle                = currStyle;
                    beerMenu.append("<tr valign='top'><td colspan='3' align='center'><span class='beer_category'>"+ currStyle +"</span></td></tr>");
                }
                if(!currStyle.equals(preStyle) || rowCount == maxRow) {
                    if(colCount==1) {
                        beerMenu.append("<td width='2%' align='left' valign='bottom'></td><td height='45' width='32%' align='left' valign='bottom'></td></tr>");
                        beerMenu.append(prodDesc);
                        prodDesc            = new StringBuilder();
                        beerMenu.append("<tr><td height='20px' colspan='6'></td></tr>");
                        rowCount++;
                        colCount            = 0;
                    }
                    if (rowCount == (maxRow - 2)) {
                        preStyle            = currStyle;
                        beerMenu.append("<tr valign='top'><td colspan='3' align='center'><span class='beer_category'>"+ currStyle +"</span></td></tr>");
                        colCount            = 0;
                        rowCount++;
                    } else {
                        if (rowCount == (maxRow - 1)) {
                            beerMenu.append("<tr valign='top'><td height='80' colspan='3' align='center'>&nbsp;</td></tr>");
                        }
                        beerMenu.append("</table>");
                        StringBuilder beerMenuList
                                            = new StringBuilder();
                        beerMenuList.append(beerMenuSize);
                        beerMenuList.append("<tr><td colspan='2' height='5px'></td></tr>");
                        beerMenuList.append("<tr><td colspan='2'>");
                        beerMenuList.append(beerMenu);
                        beerMenuList.append("</td></tr></table>");
                        beerBoardMenus      = loadBeerBoardMenu(beerBoardMenus, beerMenuSize, beerMenu);
                        beerMenu            = new StringBuilder("<table height='100%' width='100%' valign='top'>");
                        beerMenu.append("<tr valign='top'><td colspan='3' align='center'><span class='beer_category'>"+ currStyle +"</span></td></tr>");
                        rowCount            = 0;
                    }
                }
                if(colCount == 0) {
                    beerMenu.append("<tr><td height='45' width='32%' align='left' valign='bottom'><span class='beer_big_name'>");
                    beerMenu.append(productName);
                    beerMenu.append("</span></td>");
                    prodDesc.append("<tr><td height='30' align='left' valign='bottom'><span class='beer_description'>");
                    prodDesc.append("ABV: "+ abv);                 
                    prodDesc.append("</span></td>");
                    colCount++;
                } else {
                    beerMenu.append("<td width='2%' align='left' valign='bottom'></td><td height='45' width='32%' align='left' valign='bottom'><span class='beer_big_name'>");
                    beerMenu.append(productName);
                    beerMenu.append("</span></td></tr>");
                    beerMenu.append(prodDesc);
                    beerMenu.append("<td align='left' valign='bottom'></td><td height='30' align='left' valign='bottom'><span class='beer_description'>");
                    beerMenu.append("ABV: "+ abv);                
                    beerMenu.append("</span></td></tr>");
                    prodDesc        = new StringBuilder();
                    beerMenu.append("<tr><td height='20px' colspan='6'></td></tr>");
                    rowCount++;
                    colCount                = 0;
                }
                preStyle                    = currStyle;
            }

            int size                        = beerBoardMenus.size();
            for (int i = 0; i < size; i++) {
                beerBoardMenus.add(beerBoardMenus.get(i));
            }
            
            size                            = beerBoardMenus.size();
            for (int i = 0; i < size; i++) {
                beerBoardMenus.add(beerBoardMenus.get(i));
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return beerBoardMenus;
    }
      
       private ArrayList<String> loadBeerBoardMenu(ArrayList<String> beerBoardMenus, StringBuilder beerMenuSize, StringBuilder beerMenu) {
        StringBuilder beerMenuList          = new StringBuilder();

        beerMenuList.append(beerMenuSize);
        beerMenuList.append("<tr><td colspan='2' height='5px'></td></tr>");
        beerMenuList.append("<tr><td colspan='2'>");
        beerMenuList.append(beerMenu);
        beerMenuList.append("</td></tr></table>");
        beerBoardMenus.add(beerMenuList.toString());

        //logger.debug("Beer Menu: " + beerMenuList.toString());
        return beerBoardMenus;
    }
       
       
       private void addBBTVErrorLogs(Element toHandle, Element toAppend) throws HandlerException {

        int userId                          = HandlerUtils.getOptionalInteger(toHandle, "userId");
        String message                      = HandlerUtils.getRequiredString(toHandle, "message");

        String insertErrorLog               = " INSERT INTO bbtvErrorLogs (userId, timestamp, message ) VALUES (?, now(), ?); ";
        String selectBoxName                = "SELECT m.name, concat(l.boardname,'-',l.name),now() FROM bbtvUserMac m"
                                            + " LEFT JOIN location l ON l.id=m.location WHERE m.id=? ;";

        PreparedStatement stmt              = null;
        ResultSet rs                        = null;
        try {
            stmt                            = transconn.prepareStatement(insertErrorLog);
            stmt.setInt(1,userId);            
            stmt.setString(2,message);
            stmt.executeUpdate();
            
            SQLGetHandler get               = new SQLGetHandler();
            
            stmt = transconn.prepareStatement(selectBoxName);
             stmt.setInt(1, userId);
            rs = stmt.executeQuery();
            while(rs.next()) {
                get.sendMail("BBTV Error Logs - "+rs.getString(1), "Pradeep", "android@usbeveragenet.com", "support@usbeveragenet.com", "BBTV Error", "sendMail", getBBTVErrorEmail(rs.getString(1),rs.getString(2), message,rs.getString(3)), false);
                //get.sendMail("BBTV Error Logs - "+rs.getString(1), "suba", "javadeveloper@usbeveragenet.com", "support@usbeveragenet.com", "BBTV Error", "sendMail", getBBTVErrorEmail(rs.getString(1),rs.getString(2), message,rs.getString(3)), false);
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error in addBBTVErrorLogs: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(stmt);
        }
    }
       
       
       private StringBuilder getBBTVErrorEmail(String userName,String locationName,String error, String lastBBTVTime) throws HandlerException {

        
        StringBuilder noBBTVList            = new StringBuilder();

        noBBTVList.append("<tr align=justify><td colspan=4>"+userName+"  at ");
        noBBTVList.append(HandlerUtils.nullToEmpty(locationName));
        noBBTVList.append(" has <strong>send ErrorLogs :</strong>"+error+" </td></tr>");
         noBBTVList.append("<tr align=center valign=middle><td height=20 colspan=4>&nbsp;</td></tr>");
        noBBTVList.append("<tr align=justify><td colspan=4>Last report time was:"+lastBBTVTime+"</td></tr>");
        noBBTVList.append("<tr align=justify><td colspan=4> </td></tr>");
        noBBTVList.append("<tr align=center valign=middle><td height=20 colspan=4>&nbsp;</td></tr>");
        noBBTVList.append("<tr align=justify><td colspan=4>Thank You,</td></tr>");
        noBBTVList.append("<tr align=justify><td colspan=4>US Beverage Net Support</td></tr>");
        noBBTVList.append("<tr align=center valign=middle><td height=35 colspan=4>&nbsp;</td></tr>");
        noBBTVList.append("<tr align=justify><td colspan=4><strong>This email was automatically generated; please do not reply.</strong></td></tr><tr><td colspan=4>&nbsp;</td></tr>");

        return noBBTVList;
    }
       
       
       private ArrayList<String> getBeerBoardMenuStyleTemplate1(int location, int maxRow) throws HandlerException {

        ArrayList<String> beerBoardMenus    = new ArrayList<String>();
        PreparedStatement stmt              = null;
        ResultSet rs                        = null, innerRS = null;
        String selectMaxProperty            = "SELECT MAX(row) FROM bbtvMenuFormat  WHERE location=?;";
        String selectProperty               = "SELECT  row,property FROM bbtvMenuFormat  WHERE location=? ORDER BY row;";
        int maxProperty                     = 3;
        int property1                       = 1, property2 =3, property3 =  4;
        ArrayList<Double> pricesMenus      = new ArrayList<Double>();
         HashMap<Integer, ArrayList<Double>> productPrices
                                            = new HashMap<Integer, ArrayList<Double>>();
        try {
            //logger.debug("Loading Auto-Adjustment Style Template");

            String selectBeverageSize       = "SELECT name FROM beverageSize WHERE location = ? AND showOnTV = 1 ORDER BY ounces; ";
            String selectBeverageDescription= "SELECT DISTINCT pD.category, pD.boardName, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, p.id FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName";

            StringBuilder beerMenuSize      = new StringBuilder("<table width='100%' height='500' border='0' cellspacing='0' cellpadding='0'>");
            StringBuilder beerSize          = new StringBuilder("<tr><td colspan='3' align='left' valign='top'><span class='beer_size'>Draft Sizes:</span> ");
            
            stmt                            = transconn.prepareStatement(selectMaxProperty);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            if (rs.next()) {
                maxProperty                 = rs.getInt(1);                 
            }
            
            stmt                            = transconn.prepareStatement(selectProperty);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
               int row                      = rs.getInt(1);                 
               switch(row){
                   case 1:
                       property1            = rs.getInt(2);
                       break;
                   case 2:
                       property2            = rs.getInt(2);
                       break;
                   case 3:
                       property3            = rs.getInt(2);
                       break;
               }
               
            }
            
             String selectBeveragePrices    = "SELECT i.product, iP.value FROM inventoryPrices iP LEFT JOIN inventory i ON i.id = iP.inventory WHERE i.location = ?" +
                                            " ORDER BY i.product, iP.value";
             
             int product                    = -1;
             stmt                           = transconn.prepareStatement(selectBeveragePrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 if (product == rs.getInt(1)) {
                        pricesMenus.add(rs.getDouble(2));
                 } else {
                     if (product < 0) {
                         product            = rs.getInt(1);
                         pricesMenus        = new ArrayList<Double>();
                         pricesMenus.add(rs.getDouble(2));
                     } else {
                         productPrices.put(product, pricesMenus);
                         product            = rs.getInt(1);
                         pricesMenus        = new ArrayList<Double>();
                         pricesMenus.add(rs.getDouble(2));
                     }
                 }
                 if (rs.isLast()) {
                     productPrices.put(product, pricesMenus);
                 }
             }
            
            stmt                            = transconn.prepareStatement(selectBeverageSize);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                beerSize.append("<span class='beer_size'>");
                beerSize.append(rs.getString(1));
                if (!rs.isLast()) {
                    beerSize.append(" | ");
                }
                beerSize.append("</span> ");
            }
            beerSize.append("</td></tr>");
            beerMenuSize.append(beerSize);

            StringBuilder prodDesc          = new StringBuilder();
            StringBuilder beerMenu          = new StringBuilder("<table height='100%' width='100%' valign='top'>");          
            int colCount                    = 0, rowCount = 0;
            String preStyle                 = null, currStyle = null;
            stmt                            = transconn.prepareStatement(selectBeverageDescription);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while (rs.next()) {
                String productName          = rs.getString(2);
                String abv                  = rs.getString(3);
                currStyle                   = rs.getString(4);
                int productId               = rs.getInt(5);
                if(preStyle==null) {
                    preStyle                = currStyle;
                    beerMenu.append("<tr valign='top'><td colspan='3' align='center'><span class='beer_category'>"+ currStyle +"</span></td></tr>");
                }
                if(!currStyle.equals(preStyle) || rowCount == maxRow) {
                    if(colCount==1) {
                        beerMenu.append("<td width='2%' align='left' valign='bottom'></td><td height='45' width='32%' align='left' valign='bottom'></td></tr>");
                        beerMenu.append(prodDesc);
                        prodDesc            = new StringBuilder();
                        beerMenu.append("<tr><td height='20px' colspan='6'></td></tr>");
                        rowCount++;
                        colCount            = 0;
                    }
                    if (rowCount == (maxRow - 2)) {
                        preStyle            = currStyle;
                        beerMenu.append("<tr valign='top'><td colspan='3' align='center'><span class='beer_category'>"+ currStyle +"</span></td></tr>");
                        colCount            = 0;
                        rowCount++;
                    } else {
                        if (rowCount == (maxRow - 1)) {
                            beerMenu.append("<tr valign='top'><td height='80' colspan='3' align='center'>&nbsp;</td></tr>");
                        }
                        beerMenu.append("</table>");
                        StringBuilder beerMenuList
                                            = new StringBuilder();
                        beerMenuList.append(beerMenuSize);
                        beerMenuList.append("<tr><td colspan='2' height='5px'></td></tr>");
                        beerMenuList.append("<tr><td colspan='2'>");
                        beerMenuList.append(beerMenu);
                        beerMenuList.append("</td></tr></table>");
                        beerBoardMenus      = loadBeerBoardMenu(beerBoardMenus, beerMenuSize, beerMenu);
                        beerMenu            = new StringBuilder("<table height='100%' width='100%' valign='top'>");
                        beerMenu.append("<tr valign='top'><td colspan='3' align='center'><span class='beer_category'>"+ currStyle +"</span></td></tr>");
                        rowCount            = 0;
                    }
                }
                if(colCount == 0) {
                    beerMenu.append("<tr><td height='45' width='32%' align='left' valign='bottom'><span class='beer_big_name'>");
                    beerMenu.append(productName);
                    beerMenu.append("</span></td>");
                    prodDesc.append("<tr><td height='30' align='left' valign='bottom'><span class='beer_description'>");
                    prodDesc.append("ABV: "+ abv); 
                    if (productPrices.containsKey(productId)) {
                     NumberFormat formatter = NumberFormat.getCurrencyInstance();
                     prodDesc.append("<p class='no_margin' style='padding-bottom:20px;'><span class='beer_description'>");
                     ArrayList<Double> invoiceArray
                                            = productPrices.get(productId);
                     for (Double price : invoiceArray) {
                         prodDesc.append(" " + formatter.format(price) + " &nbsp;");
                     }
                     prodDesc.append("</span></p>");
                    }
                    prodDesc.append("</span></td>");
                    colCount++;
                } else {
                    beerMenu.append("<td width='2%' align='left' valign='bottom'></td><td height='45' width='32%' align='left' valign='bottom'><span class='beer_big_name'>");
                    beerMenu.append(productName);
                    beerMenu.append("</span></td></tr>");
                    beerMenu.append(prodDesc);
                    beerMenu.append("<td align='left' valign='bottom'></td><td height='30' align='left' valign='bottom'><span class='beer_description'>");
                    beerMenu.append("ABV: "+ abv);
                    if (productPrices.containsKey(productId)) {
                     NumberFormat formatter = NumberFormat.getCurrencyInstance();
                     prodDesc.append("<p class='no_margin' style='padding-bottom:20px;'><span class='beer_description'>");
                     ArrayList<Double> invoiceArray
                                            = productPrices.get(productId);
                     for (Double price : invoiceArray) {
                         prodDesc.append(" " + formatter.format(price) + " &nbsp;");
                     }
                     prodDesc.append("</span></p>");
                    }
                    beerMenu.append("</span></td></tr>");
                    prodDesc        = new StringBuilder();
                    beerMenu.append("<tr><td height='20px' colspan='6'></td></tr>");
                    rowCount++;
                    colCount                = 0;
                }
                preStyle                    = currStyle;
            }

            int size                        = beerBoardMenus.size();
            for (int i = 0; i < size; i++) {
                beerBoardMenus.add(beerBoardMenus.get(i));
            }
            
            size                            = beerBoardMenus.size();
            for (int i = 0; i < size; i++) {
                beerBoardMenus.add(beerBoardMenus.get(i));
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return beerBoardMenus;
    }
       
       
       
       private ArrayList<String> getBeerBoardMenuTemplate5(int location, int type) throws HandlerException {

         ArrayList<String> beerBoardMenus   = new ArrayList<String>();
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null, innerRS = null;
         int maxColumn                      = 1, maxRow = 5;
         ArrayList<String> products         = new ArrayList<String>();
         HashMap<String, ArrayList<String>> productStyle
                                            = new HashMap<String, ArrayList<String>>();
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, ( SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName WHERE location =b.location AND productSet = sPS.id)  FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND pD.category = ? AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName";

             StringBuilder prodDesc         = new StringBuilder();


             int productCount               = 0;
             String preStyle                = null, currStyle = null;
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             stmt.setInt(2, type);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodCategory           = rs.getInt(1);
                 String productName         = rs.getString(2);
                 currStyle                  = rs.getString(4);
                 String customName          = HandlerUtils.nullToString(rs.getString(5),productName); 
                 currStyle                      = HandlerUtils.nullToString(rs.getString(6),currStyle);
                 if(customName!=null && !customName.equals("")){
                     productName            = customName;
                 }
                 if(preStyle == null ){
                     preStyle               = currStyle;
                 }
                 productCount++;
                 //logger.debug("Beer Menu for Type: " + type + ", Beer: " + productName);
                 switch(prodCategory) {
                     case 1:
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(rs.getString(4));
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                         break;
                     case 2:                         
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         //prodDesc.append(rs.getString(4));
                         prodDesc.append("Abv: "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                         if(!currStyle.equals(preStyle)) {
                             productStyle.put(preStyle,products);
                             products         = new ArrayList<String>();
                             preStyle         = currStyle;
                             products.add(prodDesc.toString());
                         } else {
                             products.add(prodDesc.toString());
                         }
                         break;
                     case 3:
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p  class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(rs.getString(4));
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                        break;
                    case 4:
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<tr><td><p class='no_margin'><span class='beer_list_product' style='padding-bottom:10px;'>");
                         prodDesc.append(productName);
                         prodDesc.append("</span></p><p class='no_margin' style='padding-bottom:20px;'><span class='percentage'>");
                         prodDesc.append(rs.getString(4));
                         prodDesc.append(" "+rs.getString(3));
                         prodDesc.append("</span></p></td></tr>");
                         beerBoardMenus.add(prodDesc.toString());
                        break;
                 }
             }
             //logger.debug("Type"+type);
             //logger.debug("product"+beerBoardMenus.size());
             
             if(type ==2){
                 animationVisibility         = false;
                 loadTwoColumnBeerBoardStyleMenu(productStyle, htmlMenus, maxRow);
             } else {

             if (productCount > 10) {
                maxColumn                   = 2;
                maxRow                      = 4;
                animationVisibility         = false;
             } else {
                maxColumn                   = 1;
                maxRow                      = 5;
                animationVisibility         = true;
             }
             
             switch (maxColumn) {
                 case 1:
                     loadOneColumnBeerBoardMenu(beerBoardMenus, htmlMenus, maxRow);
                     break;
                 case 2:
                     loadTwoColumnBeerBoardMenu(beerBoardMenus, type, htmlMenus, maxRow);
                     break;
                 default:
                     loadOneColumnBeerBoardMenu(beerBoardMenus, htmlMenus, maxRow);
                     break;
             }
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return htmlMenus;
     }
       
       
        private ArrayList<String> loadTwoColumnBeerBoardStyleMenu(HashMap<String, ArrayList<String>> productStyle , ArrayList<String> htmlMenus, int maxrow) {
        StringBuilder beerMenuList          = null;
        StringBuilder beerMenuTitle         = null;
        int rowCount                        = 0, colCount = 0;
        
         for (String key : productStyle.keySet()) {             
             ArrayList<String> beerBoardMenus         = productStyle.get(key);
             //logger.debug("Size:"+beerBoardMenus.size());             
             beerMenuTitle         = new StringBuilder();
             if(rowCount == 0){
                 beerMenuList          = new StringBuilder();
                 beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 10px; border-collapse: collapse'>");
             }
             beerMenuTitle.append("<tr><td><span class='beer_list_title' style='padding-left: 20px; padding-bottom:20px;'>"+key+"</span><td><td><td><td><td></tr>");
              beerMenuList.append(beerMenuTitle); 
              if(rowCount >0 ) {
                  rowCount++;
              }
              for(int i = 0; i<beerBoardMenus.size(); i++) {
                  
            if (colCount == 0) {
                beerMenuList.append("<tr><td width='30%'><table>");
                //logger.debug("I:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td>");
                colCount++;
            } else {
                beerMenuList.append("<td width='30%'><table>");
                //logger.debug("I1:"+i);
                beerMenuList.append(beerBoardMenus.get(i));
                beerMenuList.append("</table></td><td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
                colCount                    = 0;
                rowCount++;
            }
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                //logger.debug("Beer Menu: " + beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                beerMenuList.append("<table width=\"100%\" height=\"100%\" border='0' cellspacing='0' cellpadding='0' style='padding-left: 10px; border-collapse: collapse'>");
                beerMenuList.append(beerMenuTitle);
                rowCount                    = 0;
                colCount                    = 0;
            }
            
            
        }
               if (colCount > 0) {
            beerMenuList.append("<td width='30%'>&nbsp;</td><td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
            rowCount++;
            colCount                        = 0;
            if(rowCount == maxrow) {
                beerMenuList.append("</table>");
                htmlMenus.add(beerMenuList.toString());
                beerMenuList                = new StringBuilder();
                rowCount                    = 0;
            }
        }
             
              if(rowCount >3){
             

        if (rowCount > 0) {
            for (int j = 0; j < (maxrow - rowCount); j++) {
                beerMenuList.append("<tr><td width='30%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='30%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
            }
            beerMenuList.append("</table>");
            htmlMenus.add(beerMenuList.toString());
            //logger.debug("Beer Menu: " + beerMenuList.toString());
            beerMenuList                    = new StringBuilder();
            rowCount                        = 0;
        }
              }

        
             
         }
          if (rowCount > 0) {
            for (int j = 0; j < (maxrow - rowCount); j++) {
                beerMenuList.append("<tr><td width='30%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='30%'><p><span class='beer_list_title'>&nbsp;</span></p><p><span class='percentage'>&nbsp;</span></p></td>");
                beerMenuList.append("<td width='20%' bgcolor='#000000'>&nbsp;</td></tr>");
            }
            beerMenuList.append("</table>");
            htmlMenus.add(beerMenuList.toString());
            //logger.debug("Beer Menu: " + beerMenuList.toString());
            beerMenuList                    = new StringBuilder();
            rowCount                        = 0;
        }
         
        
        
       
        return htmlMenus;
     }
        
        
        private ArrayList<String> getBeerBoardMenuTemplate6(int location) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null, innerRS = null;
         HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
         HashMap<Integer, String> productSize
                                            = new HashMap<Integer, String>();
         
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT pD.category, pD.boardName, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, ( SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName WHERE location =b.location AND productSet = sPS.id) FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName, pD.category ";
             
             String selectProductDescription    
                                            = "SELECT DISTINCT p.id,pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pD.origin, pD.seasonality, " +
                                            " (SELECT name FROM customBeerName WHERE location = b.location AND product = p.id),l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100) BETWEEN start AND end) FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id"                                            
                                            + " WHERE l.status = 'RUNNING' AND p.id != 4311 AND l.system != 2251 AND b.location = ?  GROUP BY p.id ORDER BY p.name;";
             String selectProductStyle      = "SELECT sPS.name, (SELECT name FROM customStyleName WHERE location = ? AND productSet = sPS.id) " +
                                            " FROM productSetMap sPSM LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet WHERE sPSM.product = ? AND sPS.productSetType = 9;";
             /*String selectPrices            = "SELECT i.product, SUBSTRING_INDEX(GROUP_CONCAT('$', iP.value), ',',2) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";*/
             String selectSize             = "SELECT i.product, s.name  FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";
             StringBuilder prodDesc         = new StringBuilder();


             int productCount               = 0;
             
           /*  stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2));
                 productPrices.put(productId, price);
             }
             */
             stmt                           = transconn.prepareStatement(selectSize);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String size                = HandlerUtils.nullToEmpty(rs.getString(2));
                 productSize.put(productId, size);
             }
             stmt                           = transconn.prepareStatement(selectProductDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 //String brewery             = rs.getString(5);
                 String origin              = rs.getString(5);
                 String seasonality         = rs.getString(6);
                 String customName          = HandlerUtils.nullToString(rs.getString(7),productName);
                 int advertise              = rs.getInt(8);
                
                 int kegLevel               = rs.getInt(9);
                 String kegname             = HandlerUtils.nullToString(rs.getString(10),"keg.png");
                 int keg                    = -1;
                 if(kegLevel >0&&advertise >0){ 
                     //logger.debug(productName+":"+kegLevel);
                     if(kegLevel >0 && kegLevel<11){
                         keg                = 2;
                     } else if(kegLevel >10 && kegLevel<31){
                         keg                = 3;
                     } else if(kegLevel >30 && kegLevel<51){
                         keg                = 4;
                     } else if(kegLevel >50 && kegLevel<81){
                         keg                = 5;
                     }else if(kegLevel >80){
                         keg                = 6;
                     } else {
                         keg                = 0;
                     }
                 } else {
                     keg                    = 0;
                     kegname                ="keg.png";
                 }
                
                 if(customName!=null && !customName.equals("")){
                     productName            = customName;
                 }
                 String size               = HandlerUtils.nullToEmpty(productSize.get(prodId));
                 if(abv!=null &&!abv.equals("")){
                     abv= "ABV: "+abv;
                 }

                 String style               = "";
                 stmt                       = transconn.prepareStatement(selectProductStyle);
                 stmt.setInt(1, location);
                 stmt.setInt(2, prodId);
                 innerRS                    = stmt.executeQuery();
                 if (innerRS.next()) {
                    style                   = HandlerUtils.nullToString(innerRS.getString(2), innerRS.getString(1));
                 }
                 
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table height = \"100%\" width=\"100%\" border=\"1\">"
                                             + " <tr><td style=\"border:none;height:60%;\" class=\"beer_list_product_white\" width=\"70%\">"+productName+"</td>"
                                             + " <td width=\"20%\" class=\"beer_price\">"+size+"<div style=\"padding-top: 10px;\">"+abv+"<div></td>"
                                             + " <td width=\"10%\"><img height=\"60%\" src=\"/mnt/sdcard/Images/"+kegname+"\">"
                                             + " <tr><td class=\"beer_size\"></td></tr>"
                                             + " <tr><td style=\"height:30%;\" class=\"beer_list_product_gold\">"+style+"</td>"
                                             + " <td colspan=\"2\">Origin: <span class=\"beer_list_product_gold\">"+ (origin.length() > 10 ? origin.substring(0, 9) : origin)
                                             + "</span></td></tr></table>");
                 htmlMenus.add(prodDesc.toString());                
             }
             productCount                   = 0;
             
             //logger.debug("Size"+htmlMenus.size());
             for(int i=0;i<htmlMenus.size();i++){                 
                 String col1                = htmlMenus.get(i);
                 String col2                ="";
                 if(i+1 == htmlMenus.size()){
                      col2                = "";
                 } else {
                     col2                = htmlMenus.get(i+1);
                 }
                 if(productCount== 0){
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table height = \"100%\" width=\"100%\" border=\"1\">" );
                 }
                  prodDesc.append(" <tr><td  width=\"50%\" height=\"20%\">"+col1+"</td><td width=\"10px\">"
                          + "   <td  width=\"50%\" height=\"20%\">"+col2 +"</td> </tr>");   
                  productCount++;
                  i++;
                  if(productCount==5){
                      prodDesc.append("</table>");
                      //logger.debug("1"+prodDesc.toString());
                      menus.add(prodDesc.toString());   
                      productCount = 0;
                 }
             }
             if(productCount > 0){
                  prodDesc.append("</table>");
                  //logger.debug("2"+prodDesc.toString());
                  menus.add(prodDesc.toString());                
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return menus;
     }

        private ArrayList<String> getBeerBoardMenuTemplate7(int location) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null, innerRS = null;
         HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
         
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT pD.category, pD.boardName, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, ( SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName WHERE location =b.location AND productSet = sPS.id) FROM line l LEFT JOIN bar b ON b.id = l.bar " +
                                            " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName, pD.category ";
             
             String selectProductDescription    
                                            = "SELECT DISTINCT p.id,pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pD.origin, pD.seasonality, " +
                                            " (SELECT name FROM customBeerName WHERE location = b.location AND product = p.id),l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100) BETWEEN start AND end) FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id"                                            
                                            + " WHERE l.status = 'RUNNING' AND p.id != 4311 AND l.system != 2251 AND b.location = ?  GROUP BY p.id ORDER BY p.name;";
             String selectProductStyle      = "SELECT sPS.name, (SELECT name FROM customStyleName WHERE location = ? AND productSet = sPS.id) " +
                                            " FROM productSetMap sPSM LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet WHERE sPSM.product = ? AND sPS.productSetType = 9;";
             String selectPrices            = "SELECT i.product, SUBSTRING_INDEX(GROUP_CONCAT('$', iP.value), ',',2) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             StringBuilder prodDesc         = new StringBuilder();


             int productCount               = 0;
             
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2));
                 productPrices.put(productId, price);
             }
             
             stmt                           = transconn.prepareStatement(selectProductDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 //String brewery             = rs.getString(5);
                 String origin              = rs.getString(5);
                 String seasonality         = rs.getString(6);
                 String customName          = HandlerUtils.nullToString(rs.getString(7),productName);
                 int advertise              = rs.getInt(8);
                 int kegLevel               = rs.getInt(9);
                 String kegname             = HandlerUtils.nullToString(rs.getString(10),"keg.png");
                 int keg                    = -1;
                 if(kegLevel >0&&advertise >0){ 
                     //logger.debug(productName+":"+kegLevel);
                     if(kegLevel >0 && kegLevel<11){
                         keg                = 2;
                     } else if(kegLevel >10 && kegLevel<31){
                         keg                = 3;
                     } else if(kegLevel >30 && kegLevel<51){
                         keg                = 4;
                     } else if(kegLevel >50 && kegLevel<81){
                         keg                = 5;
                     }else if(kegLevel >80){
                         keg                = 6;
                     } else {
                         keg                = 0;
                     }
                 } else {
                     keg                    = 0;
                     kegname                ="keg.png";
                 }
                
                 if(customName!=null && !customName.equals("")){
                     productName            = customName;
                 }
                 String price               = HandlerUtils.nullToEmpty(productPrices.get(prodId));
                 if(abv!=null &&!abv.equals("")){
                     abv= "ABV: "+abv;
                 }

                 String style               = "";
                 stmt                       = transconn.prepareStatement(selectProductStyle);
                 stmt.setInt(1, location);
                 stmt.setInt(2, prodId);
                 innerRS                    = stmt.executeQuery();
                 if (innerRS.next()) {
                    style                   = HandlerUtils.nullToString(innerRS.getString(2), innerRS.getString(1));
                 }
                 
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table width=\"100%\" border=\"1\">"
                                             + " <tr><td style=\"border:none;height:60%;\" class=\"beer_list_product_white\" width=\"70%\">"+productName+"</td>"
                                             + " <td width=\"20%\" class=\"beer_price\">"+price+"<div style=\"padding-top: 10px;\">"+abv+"<div></td>"
                                             + " <td width=\"10%\"><img height=\"60%\" src=\"/mnt/sdcard/Images/"+kegname+"\">"
                                             + " <tr><td class=\"beer_size\"></td></tr>"
                                             + " <tr><td style=\"height:30%;\" class=\"beer_list_product_gold\">"+style+"</td>"
                                             + " <td colspan=\"2\">Origin: <span class=\"beer_list_product_gold\">"+ (origin.length() > 10 ? origin.substring(0, 9) : origin)
                                             + "</span></td></tr></table>");
                 htmlMenus.add(prodDesc.toString());                
             }
             productCount                   = 0;
             
             //logger.debug("Size"+htmlMenus.size());
             for(int i=0;i<htmlMenus.size();i++){                 
                 String col1                = htmlMenus.get(i);
                 String col2                ="";
                 if(i+1 == htmlMenus.size()){
                      col2                = "";
                 } else {
                     col2                = htmlMenus.get(i+1);
                 }
                 if(productCount== 0){
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table width=\"100%\" border=\"1\">" );
                 }
                  prodDesc.append(" <tr><td  width=\"50%\" >"+col1+"</td><td width=\"10px\">"
                          + "   <td  width=\"50%\">"+col2 +"</td> </tr>");   
                  productCount++;
                  i++;
                  if(productCount==6){
                      prodDesc.append("</table>");
                      //logger.debug("1"+prodDesc.toString());
                      menus.add(prodDesc.toString());   
                      productCount = 0;
                 }
             }
             if(productCount > 0){
                  prodDesc.append("</table>");
                  //logger.debug("2"+prodDesc.toString());
                  menus.add(prodDesc.toString());                
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(innerRS);
            close(rs);
            close(stmt);
        }
        return menus;
     }
        
    private void getTileMenuTemplate1(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id,pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  '  LIKES<br /> ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, featureCount = 0, localCount = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:200px;  max-width:300px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";
             
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table valign=\"top\" width=\"350px\" align=\"center\" border=\"0\"> "
                                             //+ "<tr><td  valign=\"top\" class=\"beer_list_header1\"  align=\"center\">Special</td></tr>"
                                             + "<tr><td  align=\"center\" class=\"special_list\" width=\"350px\" >"+rs.getString(2)+"</td></tr></table>");
                 specials.add(prodDesc.toString());
             }

             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);                 
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 
                 if(productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table width=\"380px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ style +" | "+origin+" | "+abv+" </div></td></tr>");
                     productCount++;
                     if(productName.length() >28){
                         productCount++;
                         logger.debug(productName+":"+productName.length());
                     }
                 } else {
                     prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                     prodDesc.append("<tr><td  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ style +" | "+origin+" | "+abv+"</div></td></tr>");
                     productCount++;
                     if(productName.length() >28){
                         productCount++;
                         logger.debug(productName+":"+productName.length());
                     }
                     if(productCount > 8){
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         productCount       = 0;
                     }
                 }
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         marketingDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 2) {
                         marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 2) {
                         localDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             
             if(productCount > 0) {
                  if(productCount>8) {
                      prodDesc.append("<tr><td  height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  } else {
                      for(int i=productCount;i<7;i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                          productCount++;
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  }
             }
             //logger.debug("product:"+prodDesc.toString());
             
             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                int newBeer                 = rs.getInt(1);
                int localBeer               = rs.getInt(2);
                int comingSoon              = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
            }
             
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }
                
                if(platform ==7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }
                
                if(username.length()>8) {
                    username                = username.substring(0,7);
                }
                message                     = username +message;
                
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"350px\"  valign=\"top\" align=\"center\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"top\" width=\"60px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"340px\" class=\"fb_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td valign=\"middle\" width=\"60px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"fb_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }
            
            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();
            
            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }
            
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table  width=\"350px\" align=\"center\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td  width=\"340px\" class=\"social_list\" valign=\"middle\">Check-in and <br>update your Friends</td></tr>");
            prodDesc.append("<tr><td  height=\"15px\"></td></tr><tr><td valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend <br>Your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);
            
            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"350px\" align=\"center\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td style=\"padding-top: 10px;\" valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/downloadApp.png\"/></td>"
                                            + "<td width=\"340px\" class=\"social_list\" valign=\"middle\"> Download <br>\"BeerBoard Mobile\""
                                            //+ "<br /><br /><img src=\"/mnt/sdcard/Images/iStoreGooglePlayIcon125x50.png\"/>"
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);
            
            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);

            //logger.debug("Specials Count:" + specials.size());
            if(specials.size() > 0) {
                int j                       = 0;
                for(int i = 0; i < specials.size(); i++) {
                    //logger.debug("Special: " + specials.get(i));
                    if(i==0) {
                        if(socialMediaAvail) {
                            prodDesc        = new StringBuilder();
                            prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td  height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialArray.get(j++)+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td   align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x150-2.png\">"
                                            + specials.get(i)+"</td></tr></table>");
                            social.add(prodDesc.toString());
                            i++;
                            if (i == specials.size()) {
                                i           = 0;
                            }
                            prodDesc        = new StringBuilder();
                            prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td  height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialArray.get(j++)+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td   align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x150-2.png\">"
                                            + specials.get(i)+"</td></tr></table>");
                           social.add(prodDesc.toString());
                           i++;
                           if (i == specials.size()) {
                               i            = 0;
                           }
                       } else {
                            prodDesc        = new StringBuilder();
                            prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td  height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialArray.get(j++)+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td   align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x150-2.png\">"
                                            + specials.get(i)+"</td></tr></table>");
                            social.add(prodDesc.toString());
                            i++;
                            if (i == specials.size()) {
                                i           = 0;
                            }
                       }                   
                   }
                   if (i <= specials.size()) {
                       prodDesc             = new StringBuilder();
                       prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialArray.get(j++)+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x150-2.png\">"
                                            + specials.get(i)+"</td></tr></table>");
                       social.add(prodDesc.toString());
                   }
                   if (j == socialArray.size()) {
                        j                   = 0;
                   }
               }
           } else {
               if(socialMediaAvail) {
                   prodDesc                 = new StringBuilder();
                   prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td  height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialMediaStatic2+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td   align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\">"
                                            +"</td></tr></table>");
                   social.add(prodDesc.toString());
                   prodDesc                 = new StringBuilder();
                   prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td  height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialMediaStatic+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td   align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\">"
                                            +"</td></tr></table>");
                   social.add(prodDesc.toString());
               }
               prodDesc                     = new StringBuilder();
                   prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td height=\"10px\"> </td> </tr><tr>"
                                            + "<td  height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder400x300-2.png\">"+socialMedia+"</td></tr>"
                                            + "<tr><td height=\"20px\"> </td> </tr><tr>"
                                            + "<td   align=\"center\" height=\"150px\" style=\"background-repeat:no-repeat;\">"
                                            +"</td></tr></table>");
               social.add(prodDesc.toString());
           }

           assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/bevSyncCustomers/2/Pyramid_Reward1.jpg");
           stmt                             = transconn.prepareStatement(selectLocationPromotions);
           stmt.setInt(1, location);
           rs                               = stmt.executeQuery();
           int marketingIndex               = 0;
           ArrayList<String> creativeList   = new ArrayList<String>();
           while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                       /* prodDesc            = new StringBuilder();
                        prodDesc.append("<table width=\"350px\" border=\"0\"><tr><td height=\"200px\">"+marketing.get(marketingIndex)+"</td></tr><tr>"
                                + "<td width=\"350px\" height=\"350px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder350x350-1.png\" align=\"center\">"
                                + "<img align=\"center\" width=\"300px\" height=\"300px\" src=\"/mnt/sdcard/Images/"+creative+"\"/></td></tr>"
                                + "</table>");*/
                        creativeList.add(creative);
                        //promotion.add(prodDesc.toString());
                        productCount++;
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
                marketingIndex++;
                if(marketingIndex >= marketing.size()){
                    marketingIndex          = 0;
                }
            }
            
            int creativeIndex               = 0;
            if(productCount > 0 && productCount > marketing.size()) {
                for(int i=0; i<creativeList.size(); i++){
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"350px\" height =\"620px\" border=\"0\"> <tr><td height =\"5px\"></td></tr>" 
                                            + (marketing.size() > 0 ?  " <tr><td align=\"center\" valign=\"top\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder350x230.png\" height=\"230px\">" + marketing.get(marketingIndex) : "<tr><td align=\"center\" valign=\"top\" height=\"230px\">" ) + "</td></tr>"
                                            + " <tr><td width=\"50px\"></td></tr> <tr><td width=\"350px\" height=\"350px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder350x350-2.png\" align=\"center\">"
                                            + "<img align=\"center\" width=\"300px\" height=\"300px\" src=\"/mnt/sdcard/Images/"+creativeList.get(i)+"\"/></td></tr>"
                                            + "</table>");
                    promotion.add(prodDesc.toString());
                    marketingIndex++;
                    if(marketingIndex >= marketing.size()){
                        marketingIndex      = 0;
                    }
                }
            } else {
                for(int i=0; i < marketing.size(); i++){
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"350px\" height=\"620px\" border=\"0\"><tr><td height =\"5px\"></td></tr><tr><td valign=\"top\"  align=\"center\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder350x230.png\" height=\"230px\">"+marketing.get(i)+"</td></tr>"
                                + "<tr><td width=\"50px\"></td></tr><tr><td width=\"350px\" height=\"350px\" style=\"background-repeat:no-repeat;\" background=\"/mnt/sdcard/Images/boarder350x350-2.png\" align=\"center\">"
                                + "<img align=\"center\" width=\"300px\" height=\"300px\" src=\"/mnt/sdcard/Images/"+creativeList.get(creativeIndex)+"\"/></td></tr>"
                                + "</table>");
                    promotion.add(prodDesc.toString());
                    creativeIndex++;
                    if(creativeIndex >= creativeList.size()){
                        creativeIndex       = 0;
                    }
                }
            }
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int promotionCount              = promotion.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:"+menuCount +" promotionCount: "+ promotionCount );
            if(menuCount > promotionCount && menuCount > socialCount){
                int promoindex              = 0;
                int socialindex             = 0;
                for(int i=0; i<menuCount;i++){
                    String menuList         = menus.get(i);         
                    if(socialindex>socialCount-1){
                        socialindex          = 0;
                    }
                    String socialList       = social.get(socialindex);
                    if(promoindex>promotionCount-1){
                        promoindex          = 0;
                    }
                    String promoList        = promotion.get(promoindex);
                    promoindex++;
                    socialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" background=\"/mnt/sdcard/Images/boarder410x690-2.png\" style=\"background-repeat:no-repeat; \" >"+menuList+"</td>"
                                            + " <td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">"+socialList+"</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\">"+promoList+"</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:20px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } else if (promotionCount > menuCount && promotionCount > socialCount){
                 int menuindex              = 0;
                 int socialindex            = 0;
                 for(int i = 0; i < promotionCount; i++) {
                   
                    if(socialindex>socialCount-1) {
                        socialindex         = 0;
                    }
                    String socialList       = social.get(socialindex);
                    if(menuindex>menuCount-1) {
                        menuindex           = 0;
                    }
                    //logger.debug("menuList Index"+menuindex);
                    String menuList         = menus.get(menuindex);
                    //logger.debug("menuList");
                    String promoList        = promotion.get(i);
                    //logger.debug("promotion list"+promoList);
                    menuindex++;
                    socialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" background=\"/mnt/sdcard/Images/boarder410x690-2.png\" style=\"background-repeat:no-repeat; \" >"+menuList+"</td>"
                                            + " <td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">"+socialList+"</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\">"+promoList+"</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:20px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } else {
                int menuindex              = 0;
                int promoindex             = 0;
                for(int i = 0; i < socialCount; i++) {
                     if(promoindex > promotionCount-1) {
                        promoindex          = 0;
                    }
                     String socialList       = social.get(i);
                    if(menuindex>menuCount-1) {
                        menuindex          = 0;
                    }
                    //logger.debug("menuList Index"+menuindex);
                    String menuList         = menus.get(menuindex);
                    //logger.debug("menuList");
                    String promoList        = promotion.get(promoindex);
                    //logger.debug("promotion list"+promoList);
                    menuindex++;
                    promoindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" background=\"/mnt/sdcard/Images/boarder410x690-2.png\" style=\"background-repeat:no-repeat; \" >"+menuList+"</td>"
                                            + "<td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">" + socialList + "</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\">" + promoList + "</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:20px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu1CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }

    private void getTileMenuTemplate2(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, pD.category, pD.boardName, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 ORDER BY sPS.name, pD.boardName, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  '  LIKES ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";

             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, featureCount = 0, localCount = 0;

             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if(productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table width=\"380px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ style +" | "+origin+" | "+abv+" </div></td></tr>");
                     productCount++;
                 } else {
                     prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                     prodDesc.append("<tr><td  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ style +" | "+origin+" | "+abv+"</div></td></tr>");
                     productCount++;
                     if(productCount > 7){
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         productCount       = 0;
                     }
                 }

                 if(advertise > 0) {
                     if (featureCount == 0) {
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         marketingDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 2) {
                         marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"

                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 2) {
                         localDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());

             if(productCount > 0) {
                  if(productCount>7) {
                      prodDesc.append("<tr><td  height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  } else {
                      for(int i=productCount;i<6;i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                          productCount++;
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  }
             }
             //logger.debug("product:"+prodDesc.toString());

             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table valign=\"top border=\"0\"> "
                                             + "<tr><td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+rs.getString(2)+"</td>"
                                             + "<td align=\"right\"\" valign=\"bottom\" width=\"200px\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td></tr></table>");
                 specials.add(prodDesc.toString());
             }

             if (specials.isEmpty()) {
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table valign=\"top border=\"0\"> "
                                             + "<tr><td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td>"
                                             + "<td align=\"right\"\" valign=\"bottom\" width=\"200px\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td></tr></table>");
                 specials.add(prodDesc.toString());
             }

             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                int newBeer                 = rs.getInt(1);
                int localBeer               = rs.getInt(2);
                int comingSoon              = rs.getInt(3);
                generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
            }
             boolean emptyMarketing         = false;
             if(marketing.isEmpty()){
                 marketingDesc      = new StringBuilder();
                 marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\"></td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\"><br>"
                                            + "<div class=\"beer_list2\"></div></td>"
                                            + "<td align=\"right\" ></td></tr>");                
                 marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                 marketing.add(marketingDesc.toString());
                 emptyMarketing             = true;
             }

            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }

                if(platform ==7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }

                if(username.length()>8) {
                    username                = username.substring(0,7);
                }
                message                     = username +message;

                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"800px\" valign=\"top\" align=\"left\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"top\" align=\"center\" width=\"200px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td valign=\"middle\" align=\"center\" width=\"200px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"social_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }

            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();
            ArrayList<String> socialArray2  = new ArrayList<String>();

            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }

            prodDesc                        = new StringBuilder();
            prodDesc.append("<table width=\"800px\" align=\"left\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\">Check-in and update your Friends</td></tr>");
            prodDesc.append("<tr><td height=\"15px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);

            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"800px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/downloadApp.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> Download \"BeerBoard Mobile\""
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);

            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);

            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"800px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"800px\"><img align=\"center\" height=\"250px\" src=\"/mnt/sdcard/Images/"+creative+"\"/></td>"
                                            + "</tr></table>");
                        for (String str : socialArray) {
                            socialArray2.add(str);
                        }
                        socialArray2.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
            socialArray                     = socialArray2;
            
            String marketingBorder          = "style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\"";
            if(emptyMarketing){
                marketingBorder             ="";
                
            }
            //logger.debug("Social Size: " + socialArray.size());
            //logger.debug("Marketing Size: " + marketing.size());
            if (socialArray.size() > marketing.size()) {
            int k                       = 0;
            int j                           = 0;
            for(int i = 0; i < socialArray.size(); i++) {
                if(i==0) {
                    if(socialMediaAvail) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td>"
                                            + "<td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" height=\"300px\" valign=\"top\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(i)+"</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" height=\"100px\">"
                                            + specials.get(j++)+"</td></tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td>"
                                            + "<td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(i)+"</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\"  align=\"center\" height=\"100px\">"
                                            + specials.get(j++)+"</td></tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td  valign=\"middle\" align=\"center\">"+locationLogo+"</td>"
                                            + "<td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(i)+"</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" height=\"100px\">"
                                            + specials.get(j++)+"</td></tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td>"
                                        + "<td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                        + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                        + "<td colspan=\"2\" height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(i)+"</td></tr>"
                                        + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                        + "<td colspan=\"2\" align=\"center\" height=\"100px\">"
                                        + specials.get(j++)+"</td></tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == marketing.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j               = 0;
                }
            }
            } else {
            int k                           = 0;
            int j                           = 0;
            for(int i = 0; i < socialArray.size(); i++) {
                //logger.debug("Special: " + specials.get(i));
                if(i==0) {
                    if(socialMediaAvail) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td><td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" height=\"300px\" valign=\"top\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(k++)+"</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" height=\"100px\">"
                                            + specials.get(j++)+"</td></tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td><td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(k++)+"</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\"  align=\"center\" height=\"100px\">"
                                            + specials.get(j++)+"</td></tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td><td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(k++)+"</td></tr>"
                                            + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" height=\"100px\">"
                                            + specials.get(j++)+"</td></tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" height =\"670px\" border=\"0\"> <tr><td colspan=\"2\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td valign=\"middle\" align=\"center\">"+locationLogo+"</td><td valign=\"middle\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                        + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                        + "<td colspan=\"2\" height=\"300px\" valign=\"top\"  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"+socialArray.get(k++)+"</td></tr>"
                                        + "<tr><td colspan=\"2\" height=\"20px\"> </td> </tr><tr>"
                                        + "<td colspan=\"2\" align=\"center\" height=\"100px\">"
                                        + specials.get(j++)+"</td></tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == socialArray.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j                   = 0;
                }
            }
            }

            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png"));
            int menuCount                   = menus.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:"+menuCount +" socialCount: "+ socialCount );
            if(menuCount > socialCount){
                int socialindex             = 0;
                for(int i=0; i<menuCount;i++){
                    String menuList         = menus.get(i);
                    if(socialindex > socialCount - 1){
                        socialindex          = 0;
                    }
                    String socialList       = social.get(socialindex);
                    socialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"450px\" style=\"left:20px; top:20px; z-index:2; border: 5px solid #F2EF9B;\" >"+menuList+"</td>"
                                            + "<td height\"670px\" valign=\"bottom\" align=\"left\" style=\"padding-left: 15px;\">" + socialList + "</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } else {
                int menuindex              = 0;
                for(int i = 0; i < socialCount; i++) {
                    String socialList       = social.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex          = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"450px\" style=\"left:20px; top:20px; z-index:2; border: 5px solid #F2EF9B;\" >"+menuList+"</td>"
                                            + "<td height\"670px\" valign=\"bottom\" align=\"left\" style=\"padding-left: 15px;\">" + socialList + "</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu2CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
        
    private void getTileMenuTemplate3(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, pD.category, pD.boardName, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY sPS.name, pD.boardName, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  '  LIKES<br /> ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

             prodDesc                       = new StringBuilder();
             prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");

             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if(productCount == 0) {
                     prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");
                     productCount++;
                 } else {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");
                     productCount           = 0;
                     rowCount++;
                     if(rowCount > 4){
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                         rowCount           = 0;
                     }
                 }
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("<tr><td height=\"20px\"></td> </tr></table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         localDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("<tr><td height=\"20px\"></td> </tr></table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br><div class=\"feature_list2\"></div></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                      prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 4; i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             productCount                   = 0;
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());
             }

             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                int newBeer                 = rs.getInt(1);
                int localBeer               = rs.getInt(2);
                int comingSoon              = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
            }
             
             
            boolean emptyMarketing          = false;
            if(marketing.size() ==0){
                marketingDesc      = new StringBuilder();
                marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                        + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\"></td></tr>"
                        + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\"><br>"
                        + "<div class=\"feature_list2\"></div></td>"
                        + "<td align=\"right\" ></td></tr></table>");
                marketing.add(marketingDesc.toString());
                emptyMarketing          = true;
                
            }

            productCount                    = 0;
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }
                
                if(platform == 7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }
                
                /*if(username.length() > 8) {
                    username                = username.substring(0,7);
                }*/
                message                     = username +message;
                
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"700px\" valign=\"top\" align=\"left\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td valign=\"top\" align=\"center\" width=\"150px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td valign=\"middle\" align=\"center\" width=\"150px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"social_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }
            
            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();
            ArrayList<String> socialArray2  = new ArrayList<String>();
            
            if(productCount == 0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }
            
            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/downloadApp.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> Download \"BeerBoard Mobile\""
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);
            
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table width=\"700px\" align=\"left\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\">Check-in and update your Friends</td></tr>");
            prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);
            
          
            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);
            int socialInitial               = socialArray.size();
            //logger.debug("Social Array Size:"+socialArray.size());
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"800px\"><img style=\"max-width:700px;  max-height:450px;\" align=\"center\"  src=\"/mnt/sdcard/Images/"+creative+"\"/></td>"
                                            + "</tr></table>");
                        for (String str : socialArray) {
                            socialArray2.add(str);
                        }
                        socialArray2.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
            if (socialArray2.size() > 0) {
                socialArray                 = socialArray2;
            }
            
           
            
            String marketingBorder          = "style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\"";
            if(emptyMarketing){
                marketingBorder             ="";
                
            }
            
            //logger.debug("Social Size: " + socialArray.size());
            //logger.debug("Marketing Size: " + marketing.size());
            if (socialArray.size() > marketing.size()) {
            int k                           = 0;
            for(int i = 0; i < socialArray.size(); i++) {
                if(i==0) {
                    if(socialMediaAvail) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\"  height=\"300px\" valign=\"top\"  >"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                    }                   
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(i)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == marketing.size()) {
                    k                       = 0;
                }
            }
            } else {
            int k                           = 0;    
            for(int i = 0; i < socialArray.size(); i++) {
                if(i==0) {
                    if(socialMediaAvail) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\" >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+" >" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                    }                   
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\"  "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == socialArray.size()) {
                    k                   = 0;
                }
            }
            }
            int socialFinal                 = socialArray.size();
            //logger.debug("Social Array1 Size:"+socialArray.size());
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:"+menuCount +" socialCount: "+ socialCount );
            if(menuCount > specialCount){
                int specialindex            = 0;
                int menuindex               = 0;                
                //logger.debug("Formatting");
                if(socialInitial!=socialFinal){
                    socialInitial           =socialInitial+1;
                }
                int socialLimit             = 0;
                int socialIndex             = 0;
                for(int j=0;j<socialFinal/socialInitial;j++){
                    socialLimit             +=socialInitial;
                    //logger.debug("j"+socialIndex +"index:"+socialLimit);
                    for(int i=0; i<menuCount;i++){
                        String menuList     = menus.get(i);
                        if(specialindex > specialCount - 1){
                            specialindex    = 0;
                        }
                        String specialList  = (specialCount > 0 ? specials.get(specialindex) : "");
                        specialindex++;
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                                            "<tr><td colspan=\"3\" height=\"10px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                                            "</table>");
                        htmlMenus.add(prodDesc.toString());
                    }
                    for(int i = socialIndex; i < socialLimit; i++){
                        String menuList     = social.get(i);
                        if(specialindex > specialCount - 1){
                            specialindex    = 0;
                        }
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                                            "</table>");
                        htmlMenus.add(prodDesc.toString());
                    }
                }
            } else {
                int menuindex               = 0;
                int specialindex            = 0;
                if(socialInitial != socialFinal){
                    socialInitial           =socialInitial + 1;
                }
                int socialLimit             = 0;
                int socialIndex             = 0;
                for(int j=0;j<socialFinal/socialInitial;j++){
                    socialLimit             +=socialInitial;
                    for(int i = 0; i < specialCount; i++) {
                        String specialList  = specials.get(i);
                        if(menuindex > menuCount-1) {
                            menuindex       = 0;
                        }
                        String menuList     = menus.get(menuindex);
                        menuindex++;
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                                                "<tr><td colspan=\"3\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                        htmlMenus.add(prodDesc.toString());
                    }
                    for(int i = socialIndex; i < socialLimit; i++){
                        String menuList     = social.get(i);
                        if(specialindex > specialCount - 1){
                            specialindex    =  0;
                        }
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                                             "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                                             "</table>");
                        htmlMenus.add(prodDesc.toString());
                    }
                    socialIndex             = socialLimit;
                }
            }
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu3CSS(1)));
                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));
                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
    
     ArrayList<String> generateTileMarketing(int locationId,int newBeer,int comingSoon, ArrayList<String> marketingHtml, ArrayList<String> assetUrl) throws HandlerException{
        
        String getMarketPeriod              = "SELECT DISTINCT lU.product, 3 FROM lineUpdates lU LEFT JOIN line l ON l.id = lU.line WHERE lU.location = ? "
                                            + " AND lU.date > SUBDATE(NOW(), INTERVAL 7 DAY) AND l.status = 'RUNNING' ORDER BY lU.date DESC, lU.id DESC LIMIT 2;";
        String getMarketList                = "SELECT pD.boardName, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pD.origin, pD.seasonality, sPS.name, sL.logo, CONCAT(bL.logo, IF(bL.type = 0, '.png', IF(bL.type = 1, '.jpg', '.gif'))),( SELECT name FROM customBeerName WHERE location =? AND product = pD.product),( SELECT name FROM customStyleName WHERE location =? AND productSet = sPS.id),( SELECT logo FROM customStyleName WHERE location =? AND productSet = sPS.id) " +
                                            " FROM productDescription pD " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = pD.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " LEFT JOIN productSetMap pSM ON pSM.product = pD.product LEFT JOIN productSet pS ON pS.id = pSM.productSet " +
                                            " LEFT JOIN breweryLogo bL ON bL.brewery = pS.name " +
                                            " WHERE pS.productSetType = 7 AND sPS.productSetType = 9 AND pD.product = ? "  ;
        String selectAutoFeed               = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
        String selectLocalBeer              = "SELECT l.product,  l.advertise FROM line l"
                                            + " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN location lo ON lo.id = b.location WHERE lo.id= ? AND l.status = 'RUNNING' AND l.local>0;";
        PreparedStatement stmt              = null;
        ResultSet rs                        = null, mlist = null;
        String glass                        = "",logo = "";
       // ArrayList<String> marketingHtml     = new ArrayList<String>();
        StringBuilder marketingDesc         = new StringBuilder();
        int productCount                    = 0;
        try{
            if(newBeer > 0){
                stmt                        = transconn.prepareStatement(getMarketPeriod);
                stmt.setInt(1, locationId);
                String locName              = rs.getString(2);
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    int type                = rs.getInt(2);
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    while(mlist.next()) {
                        glass               = mlist.getString(6) + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = mlist.getString(7);   
                        String productName  = mlist.getString(1);        
                        String abv          = mlist.getString(2); 
                        String origin       = mlist.getString(3); 
                        String style        = mlist.getString(5); 
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        if(StyleLogo!=null & !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        assetUrl.add(glassUrl);
                         if(productCount == 0){
                            marketingDesc   = new StringBuilder();
                            marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td  height=\"5px\"></td></tr> <tr>"
                                    + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">New Beer</td></tr>"
                                    + "<tr><td align=\"center\" class=\"beer_list2\">"+productName+"<br>"
                                    + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                    + "<td width=\"45px\" align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" height=\"80px\"></td></tr>");
                            productCount++;
                        } else {
                            marketingDesc.append(" <tr><td align=\"center\" class=\"beer_list\">"+productName+"<br>"
                                    + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                    + "<td width=\"45px\" align=\"right\"><img src=\"/mnt/sdcard/Images/"+glass+"\" height=\"80px\"></td></tr>");
                            productCount++;
                        }
                        if(productCount>=2){
                             marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                             marketingHtml.add(marketingDesc.toString());
                             productCount   = 0;
                        }
                    }
                }
            }
            
            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr> </table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
            
            if(comingSoon > 0){
                stmt                        = transconn.prepareStatement("SELECT DISTINCT product FROM comingSoonProducts WHERE location=?");
                stmt.setInt(1, locationId);                
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    int type                = 4;
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    if(mlist.next()) {
                        glass               = mlist.getString(6) + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = mlist.getString(7);     
                        String productName  = mlist.getString(1); 
                         String abv          = mlist.getString(2); 
                        String origin       = mlist.getString(3); 
                        String style        = mlist.getString(5);        
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        if(StyleLogo!=null && !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        assetUrl.add(glassUrl);
                        if(productCount == 0){
                            marketingDesc   = new StringBuilder();
                            marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td  height=\"5px\"></td></tr> <tr>"
                                    + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">On Deck</td></tr>"
                                    + "<tr><td align=\"center\" class=\"beer_list2\">"+productName+"<br>"
                                    + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                    + "<td width=\"45px\" align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" height=\"80px\"></td></tr>");
                            productCount++;
                        } else {
                            marketingDesc.append(" <tr><td align=\"center\" class=\"beer_list\">"+productName+"<br>"
                                    + "<div class=\"beer_list2\">"+style+" | "+origin+" | "+abv+"</div></td>"
                                    + "<td width=\"45px\" align=\"right\"><img src=\"/mnt/sdcard/Images/"+glass+"\" height=\"80px\"></td></tr>");
                            productCount++;
                        }
                        if(productCount>=2){
                             marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                             marketingHtml.add(marketingDesc.toString());
                             productCount   = 0;
                        }
                        
                    }
                }
            }

            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
            
            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
             
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
        return marketingHtml;
    }
     
     
     private String getTileMenu4CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:26px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:25px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
     
      private void getTileMenuTemplate4(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY sPS.name, p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
            
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  '  LIKES<br /> ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo); 
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

             prodDesc                       = new StringBuilder();
             prodDesc.append("<table width=\"100%\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
             
             boolean lastRow                = false;
             boolean rowInc                 = false;
             
             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                   
                
                 if(productCount == 0) {   
                     productCount++;
                     if(productName.length()>23){                                                 
                         rowCount++;  
                         //logger.debug("Row Count"+rowCount);
                         if(rowCount>=4){                             
                              prodDesc.append("</table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                              //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                             
                         }
                         
                         rowInc             = true;
                     }
                     if(!lastRow){
                         prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                         
                     }else {
                         lastRow            = false;
                     }
                 } else {
                     //prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     productCount           = 0;
                     //rowCount++;
                     if(productName.length()>23){
                         if(!rowInc){
                             rowCount++;                               
                         }
                         if(rowCount>4){                             
                              prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"></td></tr></table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                             //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                         }                   
                     }
                    
                     
                      if(!lastRow){
                          rowCount++;                               
                          prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     }else {
                          lastRow           = false;
                      }
                      rowInc                = false;
                      
                      if(rowCount > 4){
                          prodDesc.append("</table>");
                          menus.add(prodDesc.toString());
                          prodDesc          = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                         rowCount           = 0;
                      }
                      
                 }
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         if(productName.length()>19){       
                             featureCount++;
                         }
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         if(productName.length()>19){       
                             featureCount++;
                         }
                         marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("</table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         if(productName.length()>19){       
                             localCount++;
                         }
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         if(productName.length()>19){       
                             localCount++;
                         }
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("</table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                     // prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 4; i++) {
                         // prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          //prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
              while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());
                 
             }
              productCount                  = 0;
             
             if(specials.size()<=0){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td></tr></table>");
                 specials.add(prodDesc.toString());
                 
                 
             }
             
             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                int newBeer                 = rs.getInt(1);
                int localBeer               = rs.getInt(2);
                int comingSoon              = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
            }
             
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }
                
                if(platform == 7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }
                
                /*if(username.length() > 8) {
                    username                = username.substring(0,7);
                }*/
                message                     = username +message;
                
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"700px\" valign=\"top\" align=\"left\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td valign=\"top\" align=\"center\" width=\"150px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td valign=\"middle\" align=\"center\" width=\"150px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"social_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }
            
            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();
            ArrayList<String> socialArray2  = new ArrayList<String>();
            
            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }
            
            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/downloadApp.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> Download \"BeerBoard Mobile\""
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);
            
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table width=\"700px\" align=\"left\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\">Check-in and update your Friends</td></tr>");
            prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);
            
          
            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);
            int socialInitial               = socialArray.size();
            
            //logger.debug("Social Size: " + socialArray.size());
            //logger.debug("Marketing Size: " + marketing.size());
            //logger.debug("Special Size: " + specials.size());
            boolean emptyMarketing          = false;
            if(marketing.size() ==0){
                marketingDesc      = new StringBuilder();
                marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                        + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\"></td></tr>"
                        + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\"><br>"
                        + "<div class=\"feature_list2\"></div></td>"
                        + "<td align=\"right\" ></td></tr></table>");
                marketing.add(marketingDesc.toString());
                emptyMarketing          = true;
                
            }
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"800px\"><img  style=\"max-width:700px;  max-height:450px;\" align=\"center\"  src=\"/mnt/sdcard/Images/"+creative+"\"/></td>"
                                            + "</tr></table>");
                        for (String str : socialArray) {
                            socialArray2.add(str);
                        }
                        socialArray2.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
            if(!socialArray2.isEmpty()){
                socialArray                     = socialArray2;
            }
            
            String marketingBorder          = "style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\"";
            if(emptyMarketing){
                marketingBorder             ="";
                
            }
            if (socialArray.size() > marketing.size()) {
            int k                           = 0;
            int j                           = 0;
           
            for(int i = 0; i < socialArray.size(); i++) {
                if(i==0) {
                    if(socialMediaAvail) {                        
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\"  height=\"300px\" valign=\"top\"  >"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(i)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == marketing.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j               = 0;
                }
            }
            } else {
            int k                           = 0;    
            int j                           = 0;
            for(int i = 0; i < socialArray.size(); i++) {
                //logger.debug("Special: " + specials.get(i));
                if(i==0) {
                    if(socialMediaAvail) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\" >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+" >" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == socialArray.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j                   = 0;
                }
            }
            }
            int socialFinal                 = socialArray.size();
            //logger.debug("Social Array1 Size:"+socialArray.size());
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:"+menuCount +" socialCount: "+ socialCount );
            if(menuCount > specialCount){
                int specialindex            = 0;
                int menuindex               = 0;                
                //logger.debug("Formatting");
                if(socialInitial!=socialFinal){
                    socialInitial           =socialInitial+1;
                }
                int socialLimit             = 0;
                int socialIndex             = 0;
                for(int j=0;j<socialFinal/socialInitial;j++){
                    socialLimit             +=socialInitial;
                    //logger.debug("j"+socialIndex +"index:"+socialLimit);
                for(int i=0; i<menuCount;i++){
                    String menuList         = menus.get(i);         
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                     prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = socialIndex; i < socialLimit; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                }
            } else {
                int menuindex               = 0;
                int specialindex            = 0;
                //logger.debug("Formatting");
                if(socialInitial!=socialFinal){
                    socialInitial           =socialInitial+1; 
                }
                int socialLimit             = 0;
                int socialIndex             = 0;
                for(int j=0;j<socialFinal/socialInitial;j++){
                    socialLimit             +=socialInitial;
                    //logger.debug("j"+socialIndex +"index:"+socialLimit);                    
                    
                    for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = socialIndex; i < socialLimit; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                socialIndex                 =socialLimit;
                }
                /*for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < socialCount; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }*/
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu4CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
       private String getTileMenu5CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Arial\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:26px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list{ font-family: \"Arial\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:25px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
     
      private void getTileMenuTemplate5(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location = b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY bS.style, p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             /*String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES<br />', p.name) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product LEFT JOIN product p ON p.id = pD.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 2 " +
                                            " ORDER BY date DESC LIMIT 3;";*/
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  '  LIKES<br /> ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             String selectlogo              = "SELECT logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer, localBeer, comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0, onDeckCount = 0, newBeer = 0, localBeer = 0, comingSoon = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo).replaceAll(" ", "%20");
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo); 
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";
             boolean lastRow                = false;
             boolean rowInc                 = false;
             int count                      = 0;
             String preStyle                ="";
             String glass                   = "", glassUrl = "";

             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                newBeer                     = rs.getInt(1);
                localBeer                   = rs.getInt(2);
                comingSoon                  = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
             }

             if (comingSoon > 0) {
             stmt                           = transconn.prepareStatement("SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, " +
                                            " pD.origin, (SELECT name FROM customBeerName WHERE location = l.location AND product = p.id), " +
                                            " (SELECT name FROM customStyleName WHERE location = l.location AND productSet = sPS.id), IFNULL(sL.logo, 'Rotator') " +
                                            " FROM comingSoonProducts l LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name  WHERE l.location = ? AND p.id != 4311 AND sPS.productSetType = 9 " +
                                            " GROUP BY l.product ORDER BY bS.style, p.name, pD.category;");
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while(rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);
                 String styleOriginAbv      = "";

                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;

                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;

                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         = abv;
                 }

                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(9));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if (onDeckCount == 0) {
                     if(productName.length() > 19){
                         onDeckCount++;
                     }
                     marketingDesc          = new StringBuilder();
                     marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">On Deck</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 } else {
                     if(productName.length() > 19){
                         onDeckCount++;
                     }
                     marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+StyleLogo+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 }
                 if(onDeckCount >= 3) {
                     marketingDesc.append("</table>");
                     marketing.add(marketingDesc.toString());
                     onDeckCount            = 0;
                 }
             }

             if(onDeckCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketing.add(marketingDesc.toString());
                //logger.debug(marketingDesc.toString());
                onDeckCount                 = 0;
             }
             }
             productCount                   = 0;
             
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 String pendingHtml         = "";
                 if(!preStyle.equals(beerStyle)){
                     logger.debug(preStyle +":"+beerStyle+":"+count +":"+rowCount);
                     preStyle               = beerStyle;
                     
                     if(count==0){
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         
                     } else if(rowCount<=3 && count<=2){
                         productCount       = 0;
                         pendingHtml        ="<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"></td></tr>"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>";
                         logger.debug("Row cnt:"+rowCount);
                         
                         if(count==1){
                             rowCount           =rowCount+2;
                         } else if(count==2) {
                             rowCount           =rowCount+1;
                         }                       
                         
                         
                         
                     } else {
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         productCount       = 0;
                         
                         rowCount           = 1;
                         
                         count              = 0;                         
                         
                     }
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                   
                
                 if(productCount == 0) {   
                     productCount++;
                     if(productName.length()>23){                                                 
                         rowCount++;  
                         //logger.debug("Row Count"+rowCount);
                         if(rowCount>4 ){ 
                             if(!pendingHtml.equals("")){
                                 prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"></td></tr>");
                             }
                              prodDesc.append("</table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                              //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                              count         = 1;
                             
                         }
                         
                         rowInc             = true;
                     }
                     if(!lastRow){
                         count++;
                         prodDesc.append(pendingHtml+"<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                         
                     }else {
                         lastRow            = false;
                     }
                 } else {
                     //prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     productCount           = 0;
                     //rowCount++;
                     if(productName.length()>23){
                         if(!rowInc){
                             rowCount++;                               
                         }
                         if(rowCount>4){                             
                              prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"></td></tr></table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                             //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                              count         = 1;
                         }                   
                     }
                    
                     
                      if(!lastRow){
                          rowCount++;  
                          count++;
                          prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     }else {
                          lastRow           = false;
                      }
                      rowInc                = false;
                      
                      if(rowCount > 4 ){
                          prodDesc.append("</table>");
                          count             = 0;
                          menus.add(prodDesc.toString());
                          prodDesc          = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         rowCount           = 0;
                      }
                      
                 }
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         if(productName.length() > 19){
                             featureCount++;
                         }
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         if(productName.length()>19){       
                             featureCount++;
                         }
                         marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("</table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         if(productName.length() > 19){
                             localCount++;
                         }
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         if(productName.length()>19){       
                             localCount++;
                         }
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("</table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                     // prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 4; i++) {
                         // prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          //prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             productCount                   = 0;
             //logger.debug("Marketing Count 2:" + marketing.size());
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());
                 
             }
             productCount                   = 0;
             
             if(specials.size()<=0){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td></tr></table>");
                 specials.add(prodDesc.toString());
                 
                 
             }
             
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }
                
                if(platform == 7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }
                
                /*if(username.length() > 8) {
                    username                = username.substring(0,7);
                }*/
                message                     = username +message;
                
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"700px\" valign=\"top\" align=\"left\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td valign=\"top\" align=\"center\" width=\"150px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td valign=\"middle\" align=\"center\" width=\"150px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"social_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }
            
            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();
            ArrayList<String> socialArray2  = new ArrayList<String>();
            
            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }
            
            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img height=\"250px\" src=\"/mnt/sdcard/Images/MobileApp.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\"> Download \"BeerBoard Mobile\""
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);
            
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table width=\"700px\" align=\"left\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td width=\"600px\" class=\"social_list\" valign=\"middle\">Check-in and update your Friends</td></tr>");
            prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td align=\"center\" valign=\"middle\" width=\"300px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);
            
          
            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);
            int socialInitial               = socialArray.size();
            
            //logger.debug("Social Size: " + socialArray.size());
            //logger.debug("Marketing Size: " + marketing.size());
            //logger.debug("Special Size: " + specials.size());
            boolean emptyMarketing          = false;
            if(marketing.size() ==0){
                marketingDesc      = new StringBuilder();
                marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                        + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\"></td></tr>"
                        + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\"><br>"
                        + "<div class=\"feature_list2\"></div></td>"
                        + "<td align=\"right\" ></td></tr></table>");
                marketing.add(marketingDesc.toString());
                emptyMarketing          = true;
                
            }
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"700px\"><img style=\"max-width:700px;  max-height:450px;\" align=\"center\"   src=\"/mnt/sdcard/Images/"+creative+"\"/></td>"
                                            + "</tr></table>");
                        for (String str : socialArray) {
                            socialArray2.add(str);
                        }
                        socialArray2.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
            if(!socialArray2.isEmpty()){
                socialArray                     = socialArray2;
            }
            
            String marketingBorder          = "style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\"";
            if(emptyMarketing){
                marketingBorder             ="";
                
            }

            //logger.debug("Social Count: " + socialArray.size());
            //logger.debug("Marketing Count: " + marketing.size());
            if (socialArray.size() > marketing.size()) {
            int k                           = 0;
            int j                           = 0;
            for(int i = 0; i < socialArray.size(); i++) {
                if(i==0) {
                    if(socialMediaAvail) {                        
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\"  height=\"300px\" valign=\"top\"  >"+socialArray.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= socialArray.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(i)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == marketing.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j               = 0;
                }
            }
            } else {
            int k                           = 0;    
            int j                           = 0;
            for(int i = 0; i < marketing.size(); i++) {
                //logger.debug("Special: " + specials.get(i));
                if(i==0) {
                    if(socialMediaAvail) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\" >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+" >" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == socialArray.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= marketing.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+socialArray.get(k++)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == socialArray.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j                   = 0;
                }
            }
            }
            int socialFinal                 = socialArray.size();
            //logger.debug("Social Array1 Size:"+socialArray.size());
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png");
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:" + menuCount + " socialCount: " + socialCount);
            if(menuCount > socialCount) {
                int specialindex            = 0;
                int menuindex               = 0;                
                //logger.debug("Formatting");
                if(socialInitial!=socialFinal){
                    socialInitial           =socialInitial+1;
                }
                int socialLimit             = 0;
                int socialIndex             = 0;
                for(int j = 0; j<socialFinal / socialInitial; j++){
                    socialLimit             +=socialInitial;
                    //logger.debug("j"+socialIndex +"index:"+socialLimit);
                for(int i=0; i<menuCount;i++) {
                    String menuList         = menus.get(i);         
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\" >"+locationLogo+"</td><td width=\"10px\"></td><td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"></td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = socialIndex; i < socialCount; i++){
                    String menuList         = social.get(i);  
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"250px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                }
            } else {
                int menuindex               = 0;
                int specialindex            = 0;
                //logger.debug("Formatting");
                if(socialInitial!=socialFinal){
                    socialInitial           =socialInitial+1; 
                }
                int socialLimit             = 0;
                int socialIndex             = 0;
                for(int j=0;j<socialFinal/socialInitial;j++){
                    socialLimit             +=socialInitial;
                    //logger.debug("j"+socialIndex +"index:"+socialLimit);
                    
                    for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = socialIndex; i < socialCount; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"250px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                socialIndex                 =socialLimit;
                }
                /*for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < socialCount; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }*/
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu5CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
      
       private String getTileMenu6CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:26px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list_header{ font-family:'appleberry'; font-size:76px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:65px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:45px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
      
      private void getTileMenuTemplate6(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> featuredArray    = new ArrayList<String>();
         ArrayList<String> localArray       = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +

                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES<br />', p.name) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product LEFT JOIN product p ON p.id = pD.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 2 " +
                                            " ORDER BY date DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo); 
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

             prodDesc                       = new StringBuilder();
             prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");

             boolean lastRow                = false;
             boolean rowInc                 = false;
             int count                      = 0;
             String preStyle                ="";
             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName + "-" + productName.length());
                 //logger.debug("rowCount: " + rowCount + ", rowInc: " + rowInc);
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }

                 if(productCount == 0) {
                     productCount++;
                     if(productName.length() > 23) {
                         rowCount++;  
                         //logger.debug("Row Count"+rowCount);
                         if(rowCount > 4){
                              prodDesc.append("</table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                              //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                             
                         }
                         rowInc             = true;
                     }
                     if(!lastRow){
                         prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                         
                     }else {
                         lastRow            = false;
                     }
                 } else {
                     //prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     productCount           = 0;
                     //rowCount++;
                     if(productName.length() > 23) {
                         if(!rowInc){
                             rowCount++;                               
                         }
                         if (rowCount > 4) {
                              prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"></td></tr></table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                             //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                         }                   
                     }
                     
                     if(!lastRow){
                          rowCount++;                               
                          prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     } else {
                          lastRow           = false;
                     }
                     rowInc                = false;
                      
                     if(rowCount > 4) {
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                         rowCount           = 0;
                      }
                      
                 }
                /* if(productCount == 0) {
                     prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");
                     productCount++;
                 } else {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");
                     productCount           = 0;
                     rowCount++;
                     if(rowCount > 3){
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\">"
                                            + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                         rowCount           = 0;
                     }
                 }*/
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         
                         marketingDesc      = new StringBuilder();                         
                         marketingDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Featured Keg</td></tr>");
                         marketingDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"50px\"></td></tr>");                     
                         featureCount++;
                     } else {                        
                         marketingDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"50px\"></td></tr>");                     
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("</table>");
                         featuredArray.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {                        
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Local Beer</td></tr>");
                         localDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");                     
                         localCount++;
                     } else {                       
                         localDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");                     
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("</table>");
                         localArray.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br><div class=\"feature_list2\"></div></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                      prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 4; i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                featuredArray.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                localArray.add(localDesc.toString());
                localCount                = 0;
             }

             for(int i=0; i < featuredArray.size(); i++){
                marketing.add(featuredArray.get(i));
             }

             for(int i=0; i < localArray.size(); i++){
                marketing.add(localArray.get(i));
             }

             //logger.debug("Marketing Count:" + marketing.size());
             
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());
                 
             }
             productCount                   = 0;
             
             if(specials.size()<=0){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td></tr></table>");
                 specials.add(prodDesc.toString());
             }
             
            stmt                           = transconn.prepareStatement(selectAutoFeed);
            stmt.setInt(1,location);
            rs                             = stmt.executeQuery();
            if (rs.next()) {
                int newBeer                 = rs.getInt(1);
                int localBeer               = rs.getInt(2);
                int comingSoon              = rs.getInt(3);
            }
             
            generateTile6Marketing(location, 1, 1, marketing, assetUrl);
            if(!marketing.isEmpty()){
                for (String str : marketing) {
                    menus.add(str);
                }
            }
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:" + menuCount + " specialCount: " + specialCount );
            if(menuCount > specialCount) {
                int specialindex            = 0;
                int menuindex               = 0;                
                for(int i=0; i < menuCount; i++){
                    String menuList         = menus.get(i);         
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\" >"+locationLogo+"</td><td width=\"10px\"></td><td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"></td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                
                
                }
            } else {
                int menuindex               = 0;
                int specialindex            = 0;
                    for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                String visibleTime          = "15000";
                if (beerListString.contains("New Beer")) {
                    //logger.debug("Found New Beer");
                    visibleTime             = "5000";
                }
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText(visibleTime);
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu6CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
      ArrayList<String> generateTile6Marketing(int locationId,int newBeer,int comingSoon, ArrayList<String> marketingHtml, ArrayList<String> assetUrl) throws HandlerException{
        
        String getMarketPeriod              = "SELECT DISTINCT lU.product, 3 FROM lineUpdates lU LEFT JOIN line l ON l.id = lU.line WHERE lU.location = ? "
                                            + " AND lU.date > SUBDATE(NOW(), INTERVAL 7 DAY) AND l.status = 'RUNNING' ORDER BY lU.date DESC, lU.id DESC LIMIT 2;";
        String getMarketList                = "SELECT p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pD.origin, pD.seasonality, sPS.name, sL.logo, CONCAT(bL.logo, IF(bL.type = 0, '.png', IF(bL.type = 1, '.jpg', '.gif'))),( SELECT name FROM customBeerName WHERE location =? AND product = pD.product),( SELECT name FROM customStyleName WHERE location =? AND productSet = sPS.id),( SELECT logo FROM customStyleName WHERE location =? AND productSet = sPS.id) " +
                                            " FROM product p LEFT JOIN productDescription pD ON pD.product= p.id  " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = pD.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " LEFT JOIN productSetMap pSM ON pSM.product = pD.product LEFT JOIN productSet pS ON pS.id = pSM.productSet " +
                                            " LEFT JOIN breweryLogo bL ON bL.brewery = pS.name " +
                                            " WHERE pS.productSetType = 7 AND sPS.productSetType = 9 AND pD.product = ? "  ;
        String selectAutoFeed               = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
        String selectLocalBeer              = "SELECT l.product,  l.advertise FROM line l"
                                            + " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN location lo ON lo.id = b.location WHERE lo.id= ? AND l.status = 'RUNNING' AND l.local>0;";
        PreparedStatement stmt              = null;
        ResultSet rs                        = null, mlist = null;
        String glass                        = "",logo = "";
       // ArrayList<String> marketingHtml     = new ArrayList<String>();
        StringBuilder marketingDesc         = new StringBuilder();
        int productCount                    = 0;
        try{
            if(newBeer > 0){
                //logger.debug("new Beer");
                stmt                        = transconn.prepareStatement(getMarketPeriod);
                stmt.setInt(1, locationId);              
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    int type                = rs.getInt(2);
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    while(mlist.next()) {
                        glass               = HandlerUtils.nullToString(mlist.getString(6),"Ales") + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = HandlerUtils.nullToEmpty(mlist.getString(7));   
                        String productName  = HandlerUtils.nullToEmpty(mlist.getString(1));        
                        String abv          = HandlerUtils.nullToEmpty(mlist.getString(2)); 
                        String origin       = HandlerUtils.nullToEmpty(mlist.getString(3)); 
                        String style        = HandlerUtils.nullToEmpty(mlist.getString(5)); 
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        
                        String styleOriginAbv = "";
                        if(origin!=null && origin.contains("Select")){
                            origin                 = "";
                        }
                        if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                            styleOriginAbv         =style +" | "+origin;
                        } else if(style!=null && !style.equals("")){
                            styleOriginAbv         =style;
                        }
                        if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =styleOriginAbv +" | "+abv;
                            
                        } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =abv;
                        }
                        if(StyleLogo!=null & !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        //logger.debug("new Beer:"+styleOriginAbv);
                        assetUrl.add(glassUrl);
                         if(productCount == 0){
                            marketingDesc   = new StringBuilder();                            
                            marketingDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"feature_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"feature_list_header\" height=\"20\">New Beer</td></tr>");
                            marketingDesc.append("<tr><td width=\"1100px\" class=\"feature_list\">"+productName+"<br><div class=\"feature_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");                     
                            productCount++;
                        } else {                            
                            marketingDesc.append("<tr><td width=\"1100px\" class=\"feature_list\">"+productName+"<br><div class=\"feature_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");                     
                            productCount++;
                        }
                        if(productCount>2){
                             marketingDesc.append("</table>");
                             marketingHtml.add(marketingDesc.toString());
                             productCount   = 0;
                        }
                    }
                }
            }
            
            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr> </table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
            
            if(comingSoon > 0){
                //logger.debug("coming soon Beer");
                stmt                        = transconn.prepareStatement("SELECT DISTINCT product FROM comingSoonProducts WHERE location=?");
                stmt.setInt(1, locationId);                
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    int type                = 4;
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    if(mlist.next()) {
                        glass               = HandlerUtils.nullToString(mlist.getString(6),"Ales") + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = HandlerUtils.nullToEmpty(mlist.getString(7));     
                        String productName  = HandlerUtils.nullToEmpty(mlist.getString(1)); 
                         String abv          = HandlerUtils.nullToEmpty(mlist.getString(2)); 
                        String origin       = HandlerUtils.nullToEmpty(mlist.getString(3)); 
                        String style        = HandlerUtils.nullToEmpty(mlist.getString(5));        
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        
                        String styleOriginAbv = "";
                        if(origin!=null && origin.contains("Select")){
                            origin                 = "";
                        }
                        if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                            styleOriginAbv         =style +" | "+origin;
                        } else if(style!=null && !style.equals("")){
                            styleOriginAbv         =style;
                        }
                        if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =styleOriginAbv +" | "+abv;
                            
                        } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =abv;
                        }
                        if(StyleLogo!=null && !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        assetUrl.add(glassUrl);
                        if(productCount == 0){
                            marketingDesc   = new StringBuilder();
                            marketingDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"feature_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"feature_list_header\" height=\"20\">Coming Soon</td></tr>");
                            marketingDesc.append("<tr><td width=\"1100px\" class=\"feature_list\">"+productName+"<br><div class=\"feature_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");                     
                            
                            productCount++;
                        } else {
                            marketingDesc.append("<tr><td width=\"1100px\" class=\"feature_list\">"+productName+"<br><div class=\"feature_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");                     
                            productCount++;
                        }
                        if(productCount>2){
                             marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                             marketingHtml.add(marketingDesc.toString());
                             productCount   = 0;
                        }
                    }
                }
            }

            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
            
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
             assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
        return marketingHtml;
    }
      
      
       private String getTileMenu7CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:26px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:25px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
     
      private void getTileMenuTemplate7(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location = b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY bS.style, p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES<br />', p.name) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product LEFT JOIN product p ON p.id = pD.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 2 " +
                                            " ORDER BY date DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer, localBeer, comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0, onDeckCount = 0, newBeer = 0, localBeer = 0, comingSoon = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo); 
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";
             boolean lastRow                = false;
             boolean rowInc                 = false;
             int count                      = 0;
             String preStyle                ="";
             String glass                   = "", glassUrl = "";

             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                newBeer                     = rs.getInt(1);
                localBeer                   = rs.getInt(2);
                comingSoon                  = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
             }

             if (comingSoon > 0) {
             stmt                           = transconn.prepareStatement("SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, " +
                                            " pD.origin, (SELECT name FROM customBeerName WHERE location = l.location AND product = p.id), " +
                                            " (SELECT name FROM customStyleName WHERE location = l.location AND productSet = sPS.id), IFNULL(sL.logo, 'Rotator') " +
                                            " FROM comingSoonProducts l LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name  WHERE l.location = ? AND p.id != 4311 AND sPS.productSetType = 9 " +
                                            " GROUP BY l.product ORDER BY bS.style, p.name, pD.category;");
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while(rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);
                 String styleOriginAbv      = "";

                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;

                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;

                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         = abv;
                 }

                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(9));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if (onDeckCount == 0) {
                     if(productName.length() > 19){
                         onDeckCount++;
                     }
                     marketingDesc          = new StringBuilder();
                     marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">On Deck</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 } else {
                     if(productName.length() > 19){
                         onDeckCount++;
                     }
                     marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+StyleLogo+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 }
                 if(onDeckCount >= 3) {
                     marketingDesc.append("</table>");
                     marketing.add(marketingDesc.toString());
                     onDeckCount            = 0;
                 }
             }

             if(onDeckCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketing.add(marketingDesc.toString());
                //logger.debug(marketingDesc.toString());
                onDeckCount                 = 0;
             }
             }
             productCount                   = 0;
             
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                 
                 if(origin!=null &&( origin.contains("Select") ||origin.contains("Do Not")) ){
                     origin                 = "";
                 }
                 String pendingHtml         = "";
                 if(!preStyle.equals(beerStyle)){
                     //logger.debug(preStyle +":"+beerStyle+":"+count);
                     preStyle               = beerStyle;
                     
                     if(count==0){
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         count++;
                     } else if( count<=3) {
                         productCount       = 0;
                         prodDesc.append("<tr><td   class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         //logger.debug("Row cnt:"+rowCount);
                        count++; 
                        
                         
                         
                         
                     } else {
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td  class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         productCount       = 0;
                         
                         rowCount           = 1;
                         
                         count              = 1;                         
                         
                     }
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 
                 if(count == 0) {
                     prodDesc           = new StringBuilder();
                     prodDesc.append("<table width=\"100%\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td  class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                      prodDesc.append("<tr><td width=\"100%\"   class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td></tr>");                     
                      count++;
                 } else {
                     prodDesc.append("<tr><td width=\"100%\"  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td></tr>");                     
                      count++;
                      if(count>=4){
                          menus.add(prodDesc.toString());
                          count             = 0;
                      }
                     
                 }
                   
                
               
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         if(productName.length() > 19){
                             featureCount++;
                         }
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         if(productName.length()>19){       
                             featureCount++;
                         }
                         marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("</table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         if(productName.length() > 19){
                             localCount++;
                         }
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         if(productName.length()>19){       
                             localCount++;
                         }
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("</table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

            if(count >0){
                prodDesc.append("</table>");
                menus.add(prodDesc.toString());
            }
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             productCount                   = 0;
             //logger.debug("Marketing Count 2:" + marketing.size());
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());
                 
             }
             productCount                   = 0;
             
             if(specials.size()<=0){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td></tr></table>");
                 specials.add(prodDesc.toString());
                 
                 
             }
             
           
            
            //logger.debug("Social Size: " + socialArray.size());
            //logger.debug("Marketing Size: " + marketing.size());
            //logger.debug("Special Size: " + specials.size());
            boolean emptyMarketing          = false;
            if(marketing.size() ==0){
                marketingDesc      = new StringBuilder();
                marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                        + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\"></td></tr>"
                        + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\"><br>"
                        + "<div class=\"feature_list2\"></div></td>"
                        + "<td align=\"right\" ></td></tr></table>");
                marketing.add(marketingDesc.toString());
                emptyMarketing          = true;
                
            }
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"700px\"><img style=\"max-width:700px;  max-height:450px;\" align=\"center\"   src=\"/mnt/sdcard/Images/"+creative+"\"/></td>"
                                            + "</tr></table>");
                      
                        promotion.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
           
            if(promotion.isEmpty()){
                 prodDesc            = new StringBuilder();
                 prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                         + "<tr><td align=\"center\" valign=\"middle\" width=\"700px\"></td>"
                         + "</tr></table>");
                 promotion.add(prodDesc.toString());
                
            }
            
            String marketingBorder          = "style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\"";
            if(emptyMarketing){
                marketingBorder             ="";
                
            }

            //logger.debug("Social Count: " + socialArray.size());
            //logger.debug("Marketing Count: " + marketing.size());
            if (promotion.size() > marketing.size()) {
            int k                           = 0;
            int j                           = 0;
            for(int i = 0; i < promotion.size(); i++) {
                if(i==0) {
                    if(!promotion.isEmpty()) {                        
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+promotion.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+promotion.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\"  height=\"300px\" valign=\"top\"  >"+promotion.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= promotion.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(i)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == marketing.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j               = 0;
                }
            }
            } else {
            int k                           = 0;    
            int j                           = 0;
            for(int i = 0; i < marketing.size(); i++) {
                //logger.debug("Special: " + specials.get(i));
                if(i==0) {
                    if(!promotion.isEmpty()) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\" >"+promotion.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == promotion.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+" >" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == promotion.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == promotion.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= marketing.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(k++)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == promotion.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j                   = 0;
                }
            }
            }
            
            //logger.debug("Social Array1 Size:"+socialArray.size());
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:" + menuCount + " socialCount: " + socialCount);
            if(menuCount > socialCount) {
                int specialindex            = 0;
                int menuindex               = 0;                
            
              
              
                for(int i=0; i<menuCount;i++) {
                    String menuList         = menus.get(i);         
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\" >"+locationLogo+"</td><td width=\"10px\"></td><td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"></td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < social.size(); i++){
                    String menuList         = social.get(i);  
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"250px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
               
            } else {
                int menuindex               = 0;
                int specialindex            = 0;
               
                    
                    for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < social.size(); i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"250px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                
                /*for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < socialCount; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }*/
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                if(i<3){
                    beerMenusEl.addElement("visibleTime").addText("10000");
                } else if(i>=3 && i<6){
                    beerMenusEl.addElement("visibleTime").addText("5000");
                } else if(i>=6 && i<9){
                    beerMenusEl.addElement("visibleTime").addText("2000");
                } else {
                    beerMenusEl.addElement("visibleTime").addText("15000");
                } 
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu7CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
       private String getTileMenu8CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:left;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:26px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:left;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:25px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
   
    private void getTileMenuTemplate8(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location = b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY bS.style, p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES<br />', p.name) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product LEFT JOIN product p ON p.id = pD.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 2 " +
                                            " ORDER BY date DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer, localBeer, comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0, onDeckCount = 0, newBeer = 0, localBeer = 0, comingSoon = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo); 
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";
             boolean lastRow                = false;
             boolean rowInc                 = false;
             int count                      = 0;
             String preStyle                ="";
             String glass                   = "", glassUrl = "";

             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                newBeer                     = rs.getInt(1);
                localBeer                   = rs.getInt(2);
                comingSoon                  = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
             }

             if (comingSoon > 0) {
             stmt                           = transconn.prepareStatement("SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, " +
                                            " pD.origin, (SELECT name FROM customBeerName WHERE location = l.location AND product = p.id), " +
                                            " (SELECT name FROM customStyleName WHERE location = l.location AND productSet = sPS.id), IFNULL(sL.logo, 'Rotator') " +
                                            " FROM comingSoonProducts l LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name  WHERE l.location = ? AND p.id != 4311 AND sPS.productSetType = 9 " +
                                            " GROUP BY l.product ORDER BY bS.style, p.name, pD.category;");
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while(rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);
                 String styleOriginAbv      = "";

                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;

                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;

                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         = abv;
                 }

                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(9));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if (onDeckCount == 0) {
                     if(productName.length() > 19){
                         onDeckCount++;
                     }
                     marketingDesc          = new StringBuilder();
                     marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">On Deck</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 } else {
                     if(productName.length() > 19){
                         onDeckCount++;
                     }
                     marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+StyleLogo+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 }
                 if(onDeckCount >= 3) {
                     marketingDesc.append("</table>");
                     marketing.add(marketingDesc.toString());
                     onDeckCount            = 0;
                 }
             }

             if(onDeckCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketing.add(marketingDesc.toString());
                //logger.debug(marketingDesc.toString());
                onDeckCount                 = 0;
             }
             }
             productCount                   = 0;
             
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 String pendingHtml         = "";
                /* if(!preStyle.equals(beerStyle)){
                     //logger.debug(preStyle +":"+beerStyle+":"+count);
                     preStyle               = beerStyle;
                     
                     if(count==0){
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         count++;
                     } else if( count<=4) {
                         productCount       = 0;
                         prodDesc.append("<tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         //logger.debug("Row cnt:"+rowCount);
                        count++; 
                        
                         
                         
                         
                     } else {
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         productCount       = 0;
                         
                         rowCount           = 1;
                         
                         count              = 1;                         
                         
                     }
                 }*/
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 
                 if(count == 0) {
                     prodDesc           = new StringBuilder();
                     prodDesc.append("<table width=\"100%\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td  class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  class=\"beer_list_header\" height=\"20\">Now On Tap</td></tr>");
                      prodDesc.append("<tr><td width=\"100%\"   class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td></tr>");                     
                      count++;
                 } else {
                     prodDesc.append("<tr><td width=\"100%\"  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td></tr>");                     
                      count++;
                      if(count>=4){
                          menus.add(prodDesc.toString());
                          count             = 0;
                      }
                     
                 }
                   
                
               
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         if(productName.length() > 19){
                             featureCount++;
                         }
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         if(productName.length()>19){       
                             featureCount++;
                         }
                         marketingDesc.append("<tr><td height=\"20px\"></td> </tr><tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("</table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         if(productName.length() > 19){
                             localCount++;
                         }
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         if(productName.length()>19){       
                             localCount++;
                         }
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"feature_list2\">"+styleOriginAbv+"</div></td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("</table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

            if(count >0){
                prodDesc.append("</table>");
                menus.add(prodDesc.toString());
            }
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             productCount                   = 0;
             //logger.debug("Marketing Count 2:" + marketing.size());
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());
                 
             }
             productCount                   = 0;
             
             if(specials.size()<=0){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td></tr></table>");
                 specials.add(prodDesc.toString());
                 
                 
             }
             
           
            
            //logger.debug("Social Size: " + socialArray.size());
            //logger.debug("Marketing Size: " + marketing.size());
            //logger.debug("Special Size: " + specials.size());
            boolean emptyMarketing          = false;
            if(marketing.size() ==0){
                marketingDesc      = new StringBuilder();
                marketingDesc.append("<table width=\"330px\" height=\"150px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                        + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\"></td></tr>"
                        + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\"><br>"
                        + "<div class=\"feature_list2\"></div></td>"
                        + "<td align=\"right\" ></td></tr></table>");
                marketing.add(marketingDesc.toString());
                emptyMarketing          = true;
                
            }
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"700px\"><img style=\"max-width:700px;  max-height:450px;\" align=\"center\"   src=\"/mnt/sdcard/Images/"+creative+"\"/></td>"
                                            + "</tr></table>");
                      
                        promotion.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
           
            if(promotion.isEmpty()){
                 prodDesc            = new StringBuilder();
                 prodDesc.append("<table  width=\"700px\" align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                         + "<tr><td align=\"center\" valign=\"middle\" width=\"700px\"></td>"
                         + "</tr></table>");
                 promotion.add(prodDesc.toString());
                
            }
            
            String marketingBorder          = "style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\"";
            if(emptyMarketing){
                marketingBorder             ="";
                
            }

            //logger.debug("Social Count: " + socialArray.size());
            //logger.debug("Marketing Count: " + marketing.size());
            if (promotion.size() > marketing.size()) {
            int k                           = 0;
            int j                           = 0;
            for(int i = 0; i < promotion.size(); i++) {
                if(i==0) {
                    if(!promotion.isEmpty()) {                        
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+promotion.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\">"+promotion.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\"  height=\"300px\" valign=\"top\"  >"+promotion.get(i)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == marketing.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= promotion.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(i)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(k++) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == marketing.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j               = 0;
                }
            }
            } else {
            int k                           = 0;    
            int j                           = 0;
            for(int i = 0; i < marketing.size(); i++) {
                //logger.debug("Special: " + specials.get(i));
                if(i==0) {
                    if(!promotion.isEmpty()) {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\" >"+promotion.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == promotion.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                        prodDesc        = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+" >" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == promotion.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    } else {
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                            + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(k++)+"</td>"
                                            + "<td width=\"10px\"> </td>"
                                            + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                            + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                        social.add(prodDesc.toString());
                        i++;
                        if (k == promotion.size()) {
                            k               = 0;
                        }
                        if (j == specials.size()) {
                            j               = 0;
                        }
                    }                   
                }
                if (i <= marketing.size()) {
                    prodDesc             = new StringBuilder();
                    prodDesc.append("<table align=\"left\" width=\"100%\" height =\"500px\" border=\"0\"> <tr><td colspan=\"3\" height=\"10px\"> </td> </tr>"
                                        + "<tr><td width=\"400px\" height=\"300px\" valign=\"top\"  >"+promotion.get(k++)+"</td>"
                                        + "<td width=\"10px\"> </td>"
                                        + "<td width=\"500px\" valign=\"top\" align=\"center\" "+marketingBorder+">" + marketing.get(i) + "</td></tr>"
                                        + "<tr><td colspan=\"3\" height=\"20px\"> </td> </tr></table>");
                    social.add(prodDesc.toString());
                }
                if (k == promotion.size()) {
                    k                   = 0;
                }
                if (j == specials.size()) {
                    j                   = 0;
                }
            }
            }
            
            //logger.debug("Social Array1 Size:"+socialArray.size());
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:" + menuCount + " socialCount: " + socialCount);
            if(menuCount > socialCount) {
                int specialindex            = 0;
                int menuindex               = 0;                
            
              
              
                for(int i=0; i<menuCount;i++) {
                    String menuList         = menus.get(i);         
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\" >"+locationLogo+"</td><td width=\"10px\"></td><td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"></td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < social.size(); i++){
                    String menuList         = social.get(i);  
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"250px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
               
            } else {
                int menuindex               = 0;
                int specialindex            = 0;
               
                    
                    for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\">"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < social.size(); i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"250px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td></td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"30px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\" top:100px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }
                
                /*for(int i = 0; i < specialCount; i++) {
                    String specialList      = specials.get(i);
                    if(menuindex > menuCount-1) {
                        menuindex           = 0;
                    }
                    String menuList         = menus.get(menuindex);
                    menuindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
                for(int i = 0; i < socialCount; i++){
                    String menuList         = social.get(i);  
                    if(specialindex > specialCount - 1){
                        specialindex        = 0;
                    }
                    String specialList      = specials.get(specialindex);
                    specialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td valign=\"middle\" align=\"left\">"+locationLogo+"</td><td>"+specialList+"</td><td align=\"right\"\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"social_list\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"3\" height=\"10px\"></td></tr><tr><tr><td colspan=\"3\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    htmlMenus.add(prodDesc.toString());
                }*/
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu8CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }



       private String getTileMenu9CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:40px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:40px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ height:80px; font-family: \"Chalkboard\";  font-size:37px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:left;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:24px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list_header{ font-family:'appleberry'; font-size:76px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:65px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"Chalkboard\";  font-size:45px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }

      private void getTileMenuTemplate9(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> featuredArray    = new ArrayList<String>();
         ArrayList<String> localArray       = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES<br />', p.name) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product LEFT JOIN product p ON p.id = pD.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 2 " +
                                            " ORDER BY date DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";

             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0;

             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table border=\"0\" ><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\" max-height:100px;  max-width:200px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

             prodDesc                       = new StringBuilder();
             prodDesc.append("<table width=\"100%\" valign=\"middle\" align=\"center\" border=\"0\" style=\"table-layout:fixed;\">");

             boolean lastRow                = false;
             boolean rowInc                 = false;
             int count                      = 0;
             String preStyle                ="";
             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);
                 //logger.debug(productName + "-" + productName.length());
                 //logger.debug("rowCount: " + rowCount + ", rowInc: " + rowInc);
                 String styleOriginAbv      = "";
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }

                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         = style +" | "+origin;

                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         = style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         = styleOriginAbv +" | "+abv;

                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         = abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }

                 if(productCount == 0) {
                     productCount++;
                     prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+" <span class=\"beer_list2\">" + abv + "</span>" +
                             //"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div>" +
                             "</td>");
                 } else {
                     productCount           = 0;
                     prodDesc.append("<td width=\"50px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+" <span class=\"beer_list2\">" + abv + "</span>" +
                             //"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div>" +
                             "</td></tr>");
                     rowCount++;
                     if(rowCount > 8) {
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         prodDesc          = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"middle\" align=\"center\" border=\"0\" style=\"table-layout: fixed;\">");
                         rowCount           = 0;
                      }

                 }

                 if(advertise > 0) {
                     if (featureCount == 0) {
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Featured Keg</td></tr>");
                         marketingDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"50px\"></td></tr>");
                         featureCount++;
                     } else {
                         marketingDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"50px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 3) {
                         marketingDesc.append("</table>");
                         featuredArray.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"1100px\"  height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Local Beer</td></tr>");
                         localDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");
                         localCount++;
                     } else {
                         localDesc.append("<tr><td width=\"1100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 3) {
                         localDesc.append("</table>");
                         localArray.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }
             //logger.debug("Row Count: " + rowCount);

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"50px\"></td><td width=\"400px\" class=\"beer_list\">" +
                             //"<br><div class=\"beer_list2\"></div>" +
                             "</td></tr>");
                     productCount        = 0;
                 }
                 if(rowCount > 8) {
                      prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 8; i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             //logger.debug("Menu Count:" + menus.size());

             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                featuredArray.add(marketingDesc.toString());
                featureCount                = 0;
             }
             
             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                localArray.add(localDesc.toString());
                localCount                = 0;
             }

             for(int i=0; i < featuredArray.size(); i++){
                marketing.add(featuredArray.get(i));
             }

             for(int i=0; i < localArray.size(); i++){
                marketing.add(localArray.get(i));
             }

             //logger.debug("Marketing Count:" + marketing.size());

             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\" style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\">"
                                            + rs.getString(2) + "</td></tr></table>");
                 specials.add(prodDesc.toString());

             }
             productCount                   = 0;

             if(specials.size()<=0){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table  width=\"600px\" valign=\"top border=\"0\"><tr>"
                                            + "<td align=\"left\" class=\"special_list\" height=\"100px\" width=\"600px\"></td></tr></table>");
                 specials.add(prodDesc.toString());
             }

            stmt                           = transconn.prepareStatement(selectAutoFeed);
            stmt.setInt(1,location);
            rs                             = stmt.executeQuery();
            if (rs.next()) {
                int newBeer                 = rs.getInt(1);
                int localBeer               = rs.getInt(2);
                int comingSoon              = rs.getInt(3);
            }

            generateTile6Marketing(location, 1, 1, marketing, assetUrl);
            if(!marketing.isEmpty()){
                for (String str : marketing) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td width=\"200px\" valign=\"middle\" align=\"left\">"+locationLogo+"</td><td width=\"10px\"></td> <td align=\"center\" width=\"600px\"></td><td align=\"right\"\" valign=\"middle\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr>" +
                            "<tr><td colspan=\"4\" height=\"10px\"> </td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; z-index:2;\" >"+str+"</td></tr></table>");
                    menus.add(prodDesc.toString());
                }
            }
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/socialboarder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/chalkborder.png");
            assetUrl.add("http://social.usbeveragenet.com:8080/fileUploader/Images/promoboarder.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/chalkborder2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x300-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder400x150-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x350-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder350x230.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/boarder410x690-2.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png"));
            int menuCount                   = menus.size();
            int specialCount                = specials.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:" + menuCount + " specialCount: " + specialCount );
            for(int i=0; i < menuCount; i++){
                String menuList             = menus.get(i);
                prodDesc                    = new StringBuilder();
                prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\">" +
                        "<tr><td colspan=\"4\" height=\"10px\"></td></tr><tr><tr><td colspan=\"4\" valign=\"top\" align=\"left\" style=\"left:20px; top:20px; " +
                        " z-index:2;\" >"+menuList+"</td></tr>" +
                        "</table>");
                htmlMenus.add(prodDesc.toString());
            }
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {
                String beerListString       = htmlMenus.get(i);
                String visibleTime          = "15000";
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText(visibleTime);
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu9CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
      
      
      private String getTileMenu10CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            //" @font-face { font-family: 'tradegothic'; src: url('/mnt/sdcard/Images/tradegothic.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'tradegothic'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'tradegothic'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"tradegothic\";  font-size:60px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:center;  }" +
                                            " .beer_list2{ font-family: \"tradegothic\";  font-size:32px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .special_list{ font-family: \"tradegothic\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"tradegothic\";  font-size:32px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .feature_list{ font-family: \"tradegothic\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"tradegothic\";  font-size:25px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .logo_text1{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:left; }" +
                                            " .fb_list{ font-family: \"tradegothic\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
     
      private void getTileMenuTemplate10(int location, Element toAppend) throws HandlerException {
            
         
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY p.name LIMIT 12";
             
             
             StringBuilder prodDesc         = new StringBuilder();
            

             int productCount               = 0, rowCount = 0;
             
           
             prodDesc                       = new StringBuilder();
            // prodDesc.append("<table width=\"100%\"  height=\"700px\" valign=\"top\"  align=\"center\" border=\"0\">"
              //                              + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
             
             prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"><td align=\"left\" valign=\"bottom\" width=\"200px\" style=\"padding-left: 15px;\" ><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td><td  class=\"beer_list_header\" width=\"700px\" height=\"20\">NOW ON TAP</td><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
             
             
             boolean lastRow                = false;
             boolean rowInc                 = false;
             
             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                   
                
                 if(productCount == 0) {   
                     productCount++;
                    /* if(productName.length()>23){                                                 
                         //rowCount++;  
                         //logger.debug("Row Count"+rowCount);
                         if(rowCount>=4){                             
                              prodDesc.append("</table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                              //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                             
                         }
                         
                         rowInc             = true;
                     }*/
                     if(!lastRow){
                         prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                         
                     }else {
                         lastRow            = false;
                     }
                 } else {
                     //prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     productCount           = 0;
                     //rowCount++;
                    /* if(productName.length()>23){
                         //if(!rowInc){
                           //  rowCount++;                               
                         //}
                         if(rowCount>4){                             
                              prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"></td></tr></table>");
                              //logger.debug("1"+prodDesc.toString());
                              menus.add(prodDesc.toString());
                              prodDesc      = new StringBuilder();
                              prodDesc.append("<table width=\"100%\" height=\"600px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                      + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                              prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                             //logger.debug("2"+prodDesc.toString());
                              rowCount      = 1;
                              productCount  = 1;
                              lastRow       = true;
                         }                   
                     }*/
                    
                     
                      if(!lastRow){
                          rowCount++;                               
                          prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     }else {
                          lastRow           = false;
                      }
                      rowInc                = false;
                      
                      if(rowCount >=3){
                          prodDesc.append("</table>");
                          menus.add(prodDesc.toString());
                          prodDesc          = new StringBuilder();
                          prodDesc.append("<table width=\"100%\" valign=\"top\" align=\"center\"   border=\"0\"><td align=\"left\" valign=\"bottom\" width=\"200px\" style=\"padding-left: 15px;\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td><td  class=\"beer_list_header\" width=\"700px\" height=\"20\">NOW ON TAP</td><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                        // prodDesc.append("<table width=\"100%\" height=\"700px\" valign=\"top\"  align=\"center\" border=\"0\">"
                          //                  + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
                         rowCount           = 0;
                      }
                      
                 }
             }

             logger.debug("Reached Level 1");

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                     // prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 4; i++) {
                         // prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          //prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
           
           
           
            
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < menus.size(); i++) {                    
                String beerListString       = menus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu10CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
       private String getTileMenu11CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            //" @font-face { font-family: 'tradegothic'; src: url('/mnt/sdcard/Images/tradegothic.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'tradegothic'; font-size:56px; font-weight:bold; color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'tradegothic'; font-size:56px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"tradegothic\";  font-size:46px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;  text-align:left;  }" +
                                            " .beer_list2{ font-family: \"tradegothic\";  font-size:26px;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:left;  }" +
                                            " .special_list{ font-family: \"tradegothic\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Arial\";  font-size:42px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:left; }" +
                                            " .order_online{ font-family: \"Arial\";  font-size:42px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden; word-wrap:break-word;  text-align:center; }" +
                                            " .feature_list{ font-family: \"tradegothic\";  font-size:38px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word; text-align:center;  }" +
                                            " .feature_list2{ font-family: \"tradegothic\";  font-size:25px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap;  text-align:center;  }" +
                                            " .logo_text{ font-family: \"Arial\";  font-size:23px; font-weight:bold; font-style: italic; color: #ff9900;; overflow:hidden;  white-space:nowrap;  text-align:right; }" +
                                            " .fb_list{ font-family: \"tradegothic\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
     
      private void getTileMenuTemplate11(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();       
         ArrayList<String> menus            = new ArrayList<String>();  
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();     
         ArrayList<String> localBeers       = new ArrayList<String>();     
         ArrayList<String> newBeers       = new ArrayList<String>();     
         ArrayList<String> onDek            = new ArrayList<String>();     
         ArrayList<String> featureBeer      = new ArrayList<String>();     
         
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location = b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'), " +
                                            " pD.boardName FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product " +
                                            " ORDER BY bS.style, p.name, pD.category ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             /*String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES ', p.name) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product LEFT JOIN product p ON p.id = pD.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 2 " +
                                            " ORDER BY date DESC LIMIT 2;";*/
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  ' LIKES ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 2;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer, localBeer, comingSoon from bbtvAutoFeed WHERE location=?;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();

             int productCount               = 0, rowCount = 0, featureCount = 0, localCount = 0, onDeckCount = 0, newBeer = 0, localBeer = 0, comingSoon = 0;
             
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo.replaceAll("\'", "%27").replaceAll(" ", "%20")); 
             locationLogo                   ="<table border=\"0\"><tr><td height=\"20\"></td></tr><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img height=\"250px\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";
             boolean lastRow                = false;
             boolean rowInc                 = false;
             int count                      = 0;
             String preStyle                ="";
             String glass                   = "", glassUrl = "";

             stmt                           = transconn.prepareStatement(selectAutoFeed);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if (rs.next()) {
                newBeer                     = rs.getInt(1);
                localBeer                   = rs.getInt(2);
                comingSoon                  = rs.getInt(3);
                //generateTileMarketing(location, newBeer, comingSoon, marketing, assetUrl);
             }
             newBeers                       = generateTile11Marketing(location, 1, 0, newBeers, assetUrl);
             onDek                          = generateTile11Marketing(location, 0, 1, onDek, assetUrl);

            
             productCount                   = 0;
             
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));       
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 String pendingHtml         = "";
                 
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }                   
                
                
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         
                         marketingDesc      = new StringBuilder();                         
                         marketingDesc.append("<table     height=\"380px\"  valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Featured Keg</td></tr>");
                         marketingDesc.append("<tr><td width=\"200px\" align=\"center\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"50px\"></td><td   class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                         featureCount++;
                     } else {                        
                         marketingDesc.append("<tr><td  style=\"background-repeat:no-repeat; border: 5px solid #F2EF9B;\" width=\"200px\" align=\"center\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"50px\"></td><td   class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                         featureCount++;
                     }
                     if(featureCount >= 2) {
                         marketingDesc.append("</table>");
                         featureBeer.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {                        
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"1000px\"    height=\"380px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Local Beer</td></tr>");
                         localDesc.append("<tr>td width=\"200px\" align=\"left\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td><td  width=\"600px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                         localCount++;
                     } else {                       
                         localDesc.append("<tr> <td width=\"200px\" align=\"left\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td> <td width=\"600px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                         localCount++;
                     }
                     if(localCount >= 2) {
                         localDesc.append("</table>");
                         localBeers.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }
            
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                featureBeer.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                localBeers.add(localDesc.toString());
                localCount                = 0;
             }
             //logger.debug("Marketing Count:" + marketing.size());
             productCount                   = 0;
             //logger.debug("Marketing Count 2:" + marketing.size());
            
             
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }
                
                if(platform == 7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }
                
                /*if(username.length() > 8) {
                    username                = username.substring(0,7);
                }*/
                message                     = username +message;
                
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"1000px\" height=\"380px\"  valign=\"top\" align=\"left\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td valign=\"top\" align=\"left\" ><img height=\"100px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td   class=\"social_list\"  valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td valign=\"middle\" align=\"left\" ><img height=\"100px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td   class=\"social_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }
            
            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();            
            
            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }
            
            /***** Facebook, Twitter, Instagram *****/
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table   width=\"1000px\" height=\"380px\"  align=\"left\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Follow us @ShortysNYC</td></tr>"
                                            + "<tr><td height=\"10px\"></td></tr><tr><td align=\"left\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/facebook.png\"/></td>"
                                            + "<td class=\"social_list\" valign=\"middle\">Facebook</td></tr>");
            prodDesc.append("<tr><td height=\"20px\"></td></tr><tr><td align=\"left\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/twitter.png\"/></td><td   class=\"social_list\">Twitter</td></tr>");
            prodDesc.append("<tr><td height=\"20px\"></td></tr><tr><td align=\"left\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/instagram.png\"/></td><td   class=\"social_list\">Instagram</td></tr>");
            prodDesc.append("<tr><td height=\"20px\"></td></tr><tr><td  class=\"order_online\" colspan=\"2\" >Check us out online at www.ShortysNYC.com</td></tr>");
            prodDesc.append("</table>");            
            socialArray.add(prodDesc.toString());
            
             /***** ORDER ONLINE *****/
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table   width=\"1000px\" height=\"380px\"  align=\"left\"     border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\"  align=\"center\">Order Online</td></tr>"
                                            + "<tr><td class=\"order_online\"  align=\"center\" valign=\"middle\">Order Online at www.shortysnyc.com</td></tr>");
            
            prodDesc.append("</table>");            
           // socialArray.add(prodDesc.toString());
            
            
            /***** Get Social *****/
            prodDesc                       = new StringBuilder();
            prodDesc.append("<table   width=\"1000px\" height=\"380px\"  align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"left\" valign=\"middle\" width=\"200px\"><img height=\"250px\" src=\"/mnt/sdcard/Images/MobileApp.png\"/></td>"
                                            + "<td  class=\"social_list\" valign=\"middle\"> Download \"BeerBoard Mobile\""
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);
            
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table   width=\"1000px\" height=\"380px\"  align=\"left\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td height=\"30px\"></td></tr><tr><td align=\"left\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td class=\"social_list\" valign=\"middle\">Check-in and update your Friends</td></tr>");
            prodDesc.append("<tr><td height=\"30px\"></td></tr><tr><td align=\"left\" valign=\"middle\" width=\"200px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td   class=\"social_list\">Like and Recommend your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);
            
            
            
            
          
            if(socialMediaAvail) {
                socialArray.add(socialMedia);
            }
            
            
           
            
            stmt                            = transconn.prepareStatement(selectLocationPromotions);
            stmt.setInt(1, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        prodDesc            = new StringBuilder();
                        prodDesc.append("<table width=\"100%\" height=\"100%\" valign=\"middle\" align=\"center\" border=\"0\"><tr><td height=\"10px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"middle\" width=\"100%\" height=\"100%\">" +
                                            "<img style=\"height:110%;\" align=\"center\" src=\"/mnt/sdcard/Images/"+creative+"\"/></td></tr></table>");
                        promotion.add(prodDesc.toString());
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
            
            for (String str : newBeers) {
                  marketing.add(str);
                  //logger.debug(str);
              }
            for (String str : localBeers) {
                  marketing.add(str);
              }
            for (String socialStr : socialArray) {
                  menus.add(socialStr);
              }
              for (String marketingStr : marketing) {
                  menus.add(marketingStr);
              }

             if(menus.isEmpty()){
                 prodDesc            = new StringBuilder();
                        prodDesc.append("<table  width=\"1100px\"    align=\"left\" border=\"0\"><tr><td height=\"20px\"></td></tr>"
                                            + "<tr><td align=\"center\" valign=\"top\" width=\"700px\"></td>"
                                            + "</tr></table>");   
                        menus.add(prodDesc.toString());
                        
             }

            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/facebook.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/twitter.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/instagram.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf");             
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png"); 
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");

            for (String str : promotion) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" height=\"90%\" border=\"0\"><tr><td height=\"10px\"></td></tr><tr>" +
                            "<tr><td valign=\"middle\" align=\"center\" style=\"left:20px; top:20px; z-index:2;\" >"+str+"</td></tr>" +
                            "</table>");
                    //<div style=\"height:100%;width:100%;\"><img src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\ style=\"position:absolute; float:right; right:20px; bottom:5px; z-index:2;\"> </div>
                    htmlMenus.add(prodDesc.toString());
                 }

                for(int i=0; i<menus.size();i++) {
                    String menuList         = menus.get(i);         
                    
                   
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table style=\"padding-left: 25px;\" width=\"98%\" border=\"0\"><tr><td   valign=\"middle\" align=\"center\" >"+locationLogo+"</td><td width=\"10px\"></td></tr>" +
                            "<tr><td  height=\"10px\"></td></tr><tr><tr><td valign=\"top\" align=\"center\" style=\"left:20px; top:20px; z-index:2;\" >"+menuList+"</td></tr>" +
                            "</table>");
                    //<div style=\"height:100%;width:100%;\"><img src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\ style=\"position:absolute; float:right; right:20px; bottom:5px; z-index:2;\"> </div>
                    htmlMenus.add(prodDesc.toString());
                }
                
            
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("15000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu11CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
      ArrayList<String> generateTile11Marketing(int locationId,int newBeer,int comingSoon, ArrayList<String> marketingHtml, ArrayList<String> assetUrl) throws HandlerException{
        
        String getMarketPeriod              = "SELECT DISTINCT lU.product, 3 FROM lineUpdates lU LEFT JOIN line l ON l.id = lU.line WHERE lU.location = ? "
                                            + " AND lU.date > SUBDATE(NOW(), INTERVAL 7 DAY) AND l.status = 'RUNNING' ORDER BY lU.date DESC, lU.id DESC LIMIT 2;";
        String getMarketList                = "SELECT p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pD.origin, pD.seasonality, sPS.name, sL.logo, CONCAT(bL.logo, IF(bL.type = 0, '.png', IF(bL.type = 1, '.jpg', '.gif'))),( SELECT name FROM customBeerName WHERE location =? AND product = pD.product),( SELECT name FROM customStyleName WHERE location =? AND productSet = sPS.id),( SELECT logo FROM customStyleName WHERE location =? AND productSet = sPS.id) " +
                                            " FROM product p LEFT JOIN productDescription pD ON pD.product= p.id  " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = pD.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " LEFT JOIN productSetMap pSM ON pSM.product = pD.product LEFT JOIN productSet pS ON pS.id = pSM.productSet " +
                                            " LEFT JOIN breweryLogo bL ON bL.brewery = pS.name " +
                                            " WHERE pS.productSetType = 7 AND sPS.productSetType = 9 AND pD.product = ? "  ;
        String selectAutoFeed               = "SELECT newBeer,localBeer,comingSoon from bbtvAutoFeed WHERE location=?;";
        String selectLocalBeer              = "SELECT l.product,  l.advertise FROM line l"
                                            + " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN location lo ON lo.id = b.location WHERE lo.id= ? AND l.status = 'RUNNING' AND l.local>0;";
        PreparedStatement stmt              = null;
        ResultSet rs                        = null, mlist = null;
        String glass                        = "",logo = "";
       // ArrayList<String> marketingHtml     = new ArrayList<String>();
        StringBuilder marketingDesc         = new StringBuilder();
        int productCount                    = 0;
        try{
            if(newBeer > 0){
                //logger.debug("new Beer");
                stmt                        = transconn.prepareStatement(getMarketPeriod);
                stmt.setInt(1, locationId);              
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    int type                = rs.getInt(2);
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    while(mlist.next()) {
                        glass               = HandlerUtils.nullToString(mlist.getString(6),"Ales") + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = HandlerUtils.nullToEmpty(mlist.getString(7));   
                        String productName  = HandlerUtils.nullToEmpty(mlist.getString(1));        
                        String abv          = HandlerUtils.nullToEmpty(mlist.getString(2)); 
                        String origin       = HandlerUtils.nullToEmpty(mlist.getString(3)); 
                        String style        = HandlerUtils.nullToEmpty(mlist.getString(5)); 
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        
                        String styleOriginAbv = "";
                        if(origin!=null && origin.contains("Select")){
                            origin                 = "";
                        }
                        if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                            styleOriginAbv         =style +" | "+origin;
                        } else if(style!=null && !style.equals("")){
                            styleOriginAbv         =style;
                        }
                        if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =styleOriginAbv +" | "+abv;
                            
                        } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =abv;
                        }
                        if(StyleLogo!=null & !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        //logger.debug("new Beer:"+styleOriginAbv);
                        assetUrl.add(glassUrl);
                         if(productCount == 0){
                            marketingDesc   = new StringBuilder();                            
                            marketingDesc.append("<table  width=\"1000px\"  height=\"380px\"  valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"feature_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">New Beer</td></tr>");
                            marketingDesc.append("<tr><td width=\"200px\" align=\"left\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td><td  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                            productCount++;
                        } else {                            
                            marketingDesc.append("<tr><td width=\"200px\" align=\"left\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                            productCount++;
                        }
                        if(productCount>=2){
                             marketingDesc.append("</table>");
                             marketingHtml.add(marketingDesc.toString());
                             productCount   = 0;
                        }
                    }
                }
            }
            
            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr> </table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
            
            if(comingSoon > 0){
                //logger.debug("coming soon Beer");
                stmt                        = transconn.prepareStatement("SELECT DISTINCT product FROM comingSoonProducts WHERE location=?");
                stmt.setInt(1, locationId);                
                rs                          = stmt.executeQuery();
                while(rs.next()) {
                    int pid                 = rs.getInt(1);
                    int type                = 4;
                    stmt                    = transconn.prepareStatement(getMarketList);
                    stmt.setInt(1, locationId);
                    stmt.setInt(2, locationId);
                    stmt.setInt(3, locationId);
                    stmt.setInt(4, pid);
                    mlist                   = stmt.executeQuery();
                    if(mlist.next()) {
                        glass               = HandlerUtils.nullToString(mlist.getString(6),"Ales") + ".png";
                        String glassUrl     = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                        logo                = HandlerUtils.nullToEmpty(mlist.getString(7));     
                        String productName  = HandlerUtils.nullToEmpty(mlist.getString(1)); 
                         String abv          = HandlerUtils.nullToEmpty(mlist.getString(2)); 
                        String origin       = HandlerUtils.nullToEmpty(mlist.getString(3)); 
                        String style        = HandlerUtils.nullToEmpty(mlist.getString(5));        
                        productName         = HandlerUtils.nullToString(mlist.getString(8),productName); 
                        style               = HandlerUtils.nullToString(mlist.getString(9),style);
                        String StyleLogo    = HandlerUtils.nullToEmpty(mlist.getString(10));
                        
                        String styleOriginAbv = "";
                        if(origin!=null && origin.contains("Select")){
                            origin                 = "";
                        }
                        if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                            styleOriginAbv         =style +" | "+origin;
                        } else if(style!=null && !style.equals("")){
                            styleOriginAbv         =style;
                        }
                        if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =styleOriginAbv +" | "+abv;
                            
                        } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                            styleOriginAbv         =abv;
                        }
                        if(StyleLogo!=null && !StyleLogo.equals("")){
                            glass           = StyleLogo;
                            glassUrl        = "http://beerboard.tv/USBN.BeerBoard.UI/Images/CustomStyle/"+String.valueOf(locationId)+"/"+StyleLogo;    
                        }
                        assetUrl.add(glassUrl);
                        if(productCount == 0){
                            marketingDesc   = new StringBuilder();
                            marketingDesc.append("<table   width=\"1000px\"  height=\"380px\" valign=\"top\"  align=\"center\" border=\"0\">"
                                 + " <tr><td colspan=\"3\" class=\"feature_list_header\" height=\"20\"></td></tr><tr><td colspan=\"2\" class=\"beer_list_header\" height=\"20\">Coming Soon</td></tr>");
                            marketingDesc.append("<tr><td width=\"200px\" align=\"center\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td><td   class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                            
                            productCount++;
                        } else {
                            marketingDesc.append("<tr><td width=\"200px\" align=\"center\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"50px\"></td><td  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>"
                                 + "</tr>");                     
                            productCount++;
                        }
                        if(productCount>2){
                             marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                             marketingHtml.add(marketingDesc.toString());
                             productCount   = 0;
                        }
                    }
                }
            }

            if(productCount > 0){
                marketingDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketingHtml.add(marketingDesc.toString());
                productCount   = 0;
            }
            
              
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
        return marketingHtml;
    }
      
      
     
     
      private void getTileMenuTemplate12(int location, Element toAppend) throws HandlerException {
            
         
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         
         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 GROUP BY l.product ORDER BY p.name DESC LIMIT 12 ";
             
             StringBuilder prodDesc         = new StringBuilder();
            

             int productCount               = 0, rowCount = 0;
             
            
             prodDesc                       = new StringBuilder();
             //prodDesc.append("<table width=\"100%\"  height=\"700px\" valign=\"top\"  align=\"center\" border=\"0\">"
               //                             + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td  colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td> "
                 //                           + "<td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td></tr>");
              prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"><tr><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td><td  class=\"beer_list_header\" width=\"700px\" height=\"20\">NOW ON TAP</td><td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
             
             boolean lastRow                = false;
             boolean rowInc                 = false;
             
             String glass                   = "", glassUrl = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 int prodCategory           = rs.getInt(2);
                 String productName         = rs.getString(3);
                 String abv                 = rs.getString(4);                 
                 String style               = rs.getString(5);
                 String origin              = rs.getString(6);   
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";                 
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                   
                
                 if(productCount == 0) {   
                     productCount++;                    
                     if(!lastRow){
                         prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                         
                     }else {
                         lastRow            = false;
                     }
                 } else {                     
                     productCount           = 0;
                      if(!lastRow){
                          rowCount++;                               
                          prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     }else {
                          lastRow           = false;
                      }
                      rowInc                = false;
                      
                      if(rowCount >=3){
                          prodDesc.append("</table>");
                          menus.add(prodDesc.toString());
                          prodDesc          = new StringBuilder();
                          prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"><tr><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td><td  class=\"beer_list_header\" width=\"700px\" height=\"20\">NOW ON TAP</td><td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" ><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                        // prodDesc.append("<table><td  class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td><td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 15px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"></td></table>"
                          //                  + "<table width=\"100%\" height=\"700px\" valign=\"top\"  align=\"center\" border=\"0\">");
                         //<td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td>
                         rowCount           = 0;
                      }
                      
                 }
                 
                
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                     // prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {
                      for(int i = rowCount; i < 4; i++) {
                         // prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          //prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
           
           
           
            
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < menus.size(); i++) {                    
                String beerListString       = menus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu10CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      
      private void getTileMenuTemplate13(int location, Element toAppend) throws HandlerException {
            
         
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         String limitedStyles               = "5,7,11,12,17,18";
         
         String styles[]                    = {"Ales","Lagers","Ciders & Hybrid","Pale Ales","Belgian & Hefe","European","Rotator","Stouts/Porters","Wine On Tap"};
         String styleGroup[]                = {"1,2,4,6,16","11,12","5,9","10,13","3,17","7,8","14","15","18"};
         
         try {
             for(int i=0;i<styles.length;i++){
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'),  pD.boardName FROM line l " +
                                            " LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id  LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 AND  bS.id IN ("+styleGroup[i] +") GROUP BY l.product ORDER BY bS.style;";
             
             
             StringBuilder prodDesc         = new StringBuilder();
            

             int productCount               = 0, rowCount = 0;
             
           
             prodDesc                       = new StringBuilder();
            // prodDesc.append("<table width=\"100%\"  height=\"700px\" valign=\"top\"  align=\"center\" border=\"0\">"
              //                              + " <tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\" height=\"20\">NOW ON TAP</td></tr>");
             
             prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"left\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr> <tr> "
                                            + "<td align=\"left\" valign=\"bottom\" width=\"200px\"  class=\"logo_text\" > <img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td>"
                                            + "<td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\"  height=\"20\">"+styles[i]+"</td>"
                                            + "<td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
             
            
             
             String glass                   = "", glassUrl = "", preStyle ="";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));       
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";         
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                /* if(beerStyle.contains("Wine")){
                     beerStyle              = "Wine On Tap";
                 }
                 if(!preStyle.equals(beerStyle) || rowCount==0){
                     //logger.debug(preStyle +":"+beerStyle+":"+rowCount +":"+ productCount);
                     
                     preStyle               = beerStyle;
                     
                     if(beerStyle.equals("Wine On Tap")){
                         if(productCount >0){
                             prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br><div class=\"beer_list2\"></div></td></tr>");                     
                             
                         }
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                          productCount       = 0;
                          rowCount           = 0;   
                     }

                      if(productCount >0){
                          rowCount++;
                      }
                     
                     if(rowCount==0){
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"left\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr> <tr> "
                                            + "<td align=\"left\" valign=\"bottom\" width=\"200px\"  class=\"logo_text\" > <img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td>"
                                            + "<td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\"  height=\"20\">"+beerStyle+"</td>"
                                            + "<td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                         
                         rowCount++;
                     } else if( rowCount<=2) {
                         if(productCount >0){
                             prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br><div class=\"beer_list2\"></div></td></tr>");                     
                             
                         }
                         productCount       = 0;
                         prodDesc.append("<tr><td   class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\"  valign=\"bottom\" height=\"20\">"+beerStyle+"</td></tr>");
                         //logger.debug("Row cnt:"+rowCount);
                        rowCount++; 
                        
                         
                         
                         
                     } else {
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"left\" border=\"0\"><tr> <td colspan=\"3\" > </td></tr>"
                                        + "<tr><td align=\"left\" valign=\"bottom\" width=\"200px\"  class=\"logo_text\" > <img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td>"
                                        + "<td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\" height=\"20\">"+beerStyle+"</td><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                         productCount       = 0;
                         
                         rowCount           = 1;                         
                                           
                         
                     }
                 }*/
                 
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                   
                
                 if(productCount == 0) {   
                     productCount++;                    
                     prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                     
                 } else {
                     
                     productCount           = 0;
                     rowCount++;                               
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     if(rowCount >=2){
                          prodDesc.append("</table>");
                          menus.add(prodDesc.toString());
                          prodDesc          = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"left\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr> <tr> "
                                            + "<td align=\"left\" valign=\"bottom\" width=\"200px\"  class=\"logo_text\" > <img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td>"
                                            + "<td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\"  height=\"20\">"+styles[i]+"</td>"
                                            + "<td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                         rowCount           = 0;
                      }
                      
                 }
                 
                
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                     // prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {                   
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             }
             
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");
           
           
           
            
            logger.debug("html size:" + menus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < menus.size(); i++) {                    
                String beerListString       = menus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu10CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      private void getTileMenuTemplate14(int location, Element toAppend) throws HandlerException {
            
         
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         String limitedStyles               = "5,7,11,12,17,18";
         String styles[]                    = {"Ales","Lagers","Ciders & Hybrid","Pale Ales","Belgian & Hefe","European","Rotator","Stouts/Porters","Wine On Tap"};
         String styleGroup[]                ={"1,2,4,6,16","11,12","5,9","10,13","3,17","7,8","14","15","18"};
         
         
         try {
             for(int i=0;i<styles.length;i++){
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name,pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator'), " +
                                            " pD.boardName FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ?  AND sPS.productSetType = 9 AND  bS.id IN ("+styleGroup[i] +") GROUP BY l.product " +
                                            " ORDER BY bS.style";
             
            StringBuilder prodDesc          = new StringBuilder();
            int productCount                = 0, rowCount = 0;
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr><tr><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td><td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\" height=\"20\">"+styles[i]+"</td>"
                                        + "<td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 5px;\"  class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
             
             String glass                   = "", glassUrl = "", preStyle ="";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));       
                 //logger.debug(productName +"-"+productName.length());
                 String styleOriginAbv      = "";      
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin!=null && origin.contains("Select")){
                     origin                 = "";
                 }
                 /*if(beerStyle.contains("Wine")){
                     beerStyle              = "Wine On Tap";
                 }
                 if(!preStyle.equals(beerStyle) || rowCount ==0){
                     //logger.debug(preStyle +":"+beerStyle+":"+count); 
                     
                     preStyle               = beerStyle;
                     
                     if(beerStyle.equals("Wine On Tap") && menus.size() > 0){
                         if(productCount >0){
                             prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br><div class=\"beer_list2\"></div></td></tr>");                     
                             
                         }
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                          productCount       = 0;
                          rowCount           = 0;   
                     }
                      if(productCount >0){
                          rowCount++;
                      }
                     
                     if(rowCount==0){
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr> <tr>"
                                 + "<td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td><td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\" height=\"20\">"+beerStyle+"</td>"
                                 + "<td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 5px;\" class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                         
                         rowCount++;
                     } else if( rowCount<=2) {
                         if(productCount >0){
                             prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br><div class=\"beer_list2\"></div></td></tr>");                     
                             
                         }
                         productCount       = 0;
                         prodDesc.append("<tr><td   class=\"beer_list_header\" height=\"20\"></td></tr><tr><td colspan=\"3\" class=\"beer_list_header\"  valign=\"bottom\" height=\"20\">"+beerStyle+"</td></tr>");
                         //logger.debug("Row cnt:"+rowCount);
                        rowCount++; 
                        
                         
                         
                         
                     } else {
                         prodDesc.append("</table>");
                         //logger.debug("1"+prodDesc.toString());
                         menus.add(prodDesc.toString());
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr><tr><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td><td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\" height=\"20\">"+beerStyle+"</td>"
                                        + "<td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 5px;\"  class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                         productCount       = 0;
                         
                         rowCount           = 1;                         
                                           
                         
                     }
                 }
                 */
                 
                 if(style!=null && !style.equals("") &&origin!=null && !origin.equals("")){
                     styleOriginAbv         =style +" | "+origin;
                     
                 } else if(style!=null && !style.equals("")){
                     styleOriginAbv         =style;
                 }
                  if(styleOriginAbv!=null && !styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =styleOriginAbv +" | "+abv;
                     
                 } else if(styleOriginAbv.equals("") &&abv!=null && !abv.equals("")){
                     styleOriginAbv         =abv;
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 String boardName           = HandlerUtils.nullToEmpty(rs.getString(14));
                 if(StyleLogo!=null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                   
                
                 if(productCount == 0) {   
                     productCount++;
                     prodDesc.append("<tr><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td>");                     
                     
                 } else {
                     productCount           = 0;
                     rowCount++;                               
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div></td></tr>");                     
                     
                     if(rowCount >=2){
                          prodDesc.append("</table>");
                          menus.add(prodDesc.toString());
                          prodDesc          = new StringBuilder();
                          prodDesc.append("<table width=\"100%\" valign=\"top\"  align=\"center\" border=\"0\"> <tr> <td colspan=\"3\" > </td></tr><tr><td  class=\"beer_list_header\" width=\"200px\" height=\"20\"></td><td  class=\"beer_list_header\" width=\"700px\"  valign=\"bottom\" height=\"20\">"+styles[i]+"</td>"
                                        + "<td align=\"right\" valign=\"bottom\" width=\"200px\" style=\"padding-right: 5px;\"  class=\"logo_text\"><img width=\"200px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\"><br />mobile app</td></tr></table>"
                                            + "<table width=\"100%\" height=\"650px\" valign=\"top\"  align=\"center\" border=\"0\">");
                          productCount      = 0;
                         rowCount           = 0;
                      }
                      
                 }
                 
                
             }

             if(rowCount > 0) {
                 if(productCount > 0) {
                     prodDesc.append("<td width=\"100px\"></td><td width=\"400px\" class=\"beer_list\"><br></td></tr>");
                     productCount        = 0;
                 }
                  if(rowCount > 4) {
                     // prodDesc.append("<tr><td colspan=\"3\" height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount          = 0;
                  } else {                     
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      rowCount = 0;
                  }
             }
             }
             
            
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");
           
           
           
            
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < menus.size(); i++) {                    
                String beerListString       = menus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("10000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(menus.size() - i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu10CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }
      
      private String getTileMenu15CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};                    
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-image: url('/mnt/sdcard/Images/ChalkboardNew.jpg'); background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:36px; font-weight:bold; color: #F2EF9B; word-wrap:break-word; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:18px;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .price_list{ font-family: \"Chalkboard\";  font-size:22px;  color: #F2EF9B; word-wrap:break-word;   text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:23px; font-weight:bold;  color: #ffffff; word-wrap:break-word; text-align:center;  }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }
      
      private void getTileMenuTemplate15(int location, Element toAppend) throws HandlerException {
            
         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, IFNULL(bS.style, 'Cask'), p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') " +
                                            " FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 " +
                                            " ORDER BY bS.style, p.name; ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
             /*String selectLocationSocialMedia
                                            = "SELECT bMU.avatar, CONCAT( ' LIKES ', pD.boardName) msg, bMUR.date,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 1 " +
                                            " UNION " +
                                            " SELECT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, bMUC.date, bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 1 " +
                                            " ORDER BY date DESC LIMIT 3;";*/
              String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  ' LIKES ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             String selectlogo              = "SELECT logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer, localBeer, comingSoon FROM bbtvAutoFeed WHERE location=?; ";
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";
            
             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();
             StringBuilder onDeckDesc       = new StringBuilder();

             int productCount               = 0, featureCount = 0, localCount = 0, onDeckCount = 0;
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo).replaceAll(" ", "%20");
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:200px;  max-width:300px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";
             
             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);             
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table valign=\"top\" width=\"350px\" align=\"center\" border=\"0\"> "
                                             //+ "<tr><td  valign=\"top\" class=\"beer_list_header1\"  align=\"center\">Special</td></tr>"
                                             + "<tr><td  align=\"center\" class=\"special_list\" width=\"350px\" >"+rs.getString(2).replace("|", "<br/>")+"</td></tr></table>");
                 specials.add(prodDesc.toString());
             }
             
             if(specials.size()==0){
                 specials.add("");
             }
             
             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }

             String glass                   = "", glassUrl = "", preStyle = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);             
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));           
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName); 
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }

                 String price               = productPrices.get(prodId);
                 if (price != null && !price.equals("")){
                     price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 //logger.debug(productName +  " : " + price);
                 
                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table width=\"380px\" height=\"650px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div>"+price+" </td></tr>");
                     productCount++;
                     if (productName.length() > 28) {
                         productCount++;
                     }
                     if (style.length() > 15) {
                         productCount++;
                     }
                 } else {
                    /* if (!preStyle.equals(beerStyle)) {
                         productCount++;
                         if (productCount > 6){
                             prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                             prodDesc       = new StringBuilder();
                             prodDesc.append("<table width=\"380px\" height=\"600px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                             productCount++;
                         } else {
                             prodDesc.append("<tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                             //productCount ++;
                         }
                     }*/
                     if (productCount > 6 && productName.length() > 28) {
                         prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         productCount       = 0;
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"380px\" height=\"650px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div>"+price+"</td></tr>");
                         productCount++;
                         productCount++;
                          if(productName.length() >28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                     } else {
                         prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                         if (!preStyle.equals(beerStyle)) {   
                            //logger.debug("Style" + style + "cnt: " + productCount);
                            productCount++;
                            prodDesc.append("<tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         }
                         prodDesc.append("<tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div>"+price+"</td></tr>");
                         productCount++;
                         if(productName.length() > 28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                         if(productCount >= 6){
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 }
                 //logger.debug(productName + " : " + productCount);
                 preStyle                   = beerStyle;
                 
                 if(advertise > 0) {
                     if (featureCount == 0) {
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"350px\" height=\"200px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         marketingDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 2) {
                         marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"350px\" height=\"200px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 2) {
                         localDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }
             
             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }
             
             stmt                           = transconn.prepareStatement("SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, " +
                                            " pD.origin, (SELECT name FROM customBeerName WHERE location = l.location AND product = p.id), " +
                                            " (SELECT name FROM customStyleName WHERE location = l.location AND productSet = sPS.id), IFNULL(sL.logo, 'Rotator') " +
                                            " FROM comingSoonProducts l LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name  WHERE l.location = ? AND p.id != 4311 AND sPS.productSetType = 9 " +
                                            " GROUP BY l.product ORDER BY bS.style, p.name, pD.category;");
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while(rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(9));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 String price               = productPrices.get(prodId);
                 if (price != null && !price.equals("")){
                     price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 //logger.debug(productName + " : " + productCount);

                 if (onDeckCount == 0) {
                     onDeckDesc             = new StringBuilder();
                     onDeckDesc.append("<table width=\"350px\" height=\"200px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Beer On-Deck</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 } else {
                     onDeckDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 }
                 if(onDeckCount >= 2) {
                     onDeckDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                     marketing.add(onDeckDesc.toString());
                     //logger.debug(onDeckDesc.toString());
                     onDeckCount       = 0;
                 }
             }

             if(onDeckCount > 0) {
                onDeckDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketing.add(onDeckDesc.toString());
                //logger.debug(onDeckDesc.toString());
                onDeckCount                 = 0;
             }
             
             //logger.debug("Marketing Count:" + marketing.size());
             
             if(productCount > 0) {
                  if(productCount>8) {
                      prodDesc.append("<tr><td  height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  } else {
                      for(int i=productCount;i<7;i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                          productCount++;
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  }
             }
             //logger.debug("product:"+prodDesc.toString());
             
            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(4);
                String username             = rs.getString(5);
                int platform                = rs.getInt(6);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }
                
                if(platform ==7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }
                
                if(username.length() > 8) {
                    username                = username.substring(0,7);
                }
                message                     = username + message;
                
                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"350px\"  valign=\"top\" align=\"center\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"top\" width=\"60px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"340px\" class=\"fb_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td valign=\"middle\" width=\"60px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"fb_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }
            
            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();
            
            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }
            
            prodDesc                        = new StringBuilder();
            prodDesc.append("<table  width=\"350px\" align=\"center\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td  width=\"340px\" class=\"social_list\" valign=\"middle\">Check-in and <br>update your Friends</td></tr>");
            prodDesc.append("<tr><td  height=\"15px\"></td></tr><tr><td valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend <br>Your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);
            
            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"350px\" align=\"center\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td style=\"padding-top: 10px;\" valign=\"middle\" width=\"100px\"><img height=\"120px\" src=\"/mnt/sdcard/Images/MobileApp.png\"/></td>"
                                            + "<td width=\"340px\" class=\"social_list\" valign=\"middle\"> Download <br>\"BeerBoard Mobile\""
                                            //+ "<br /><br /><img src=\"/mnt/sdcard/Images/iStoreGooglePlayIcon125x50.png\"/>"
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);
            
            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);
            
            
            //addLocal & feature beer to social list
            for (String marketingStr : marketing) {
                  socialArray.add(marketingStr);
              }
            
           stmt                             = transconn.prepareStatement(selectLocationPromotions);
           stmt.setInt(1, location);
           rs                               = stmt.executeQuery();           
           while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);                
                switch (rs.getInt(2)) {
                    case 1:
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        prodDesc                = new StringBuilder();
                        prodDesc.append("<table width=\"350px\" border=\"0\"> <tr><td height =\"5px\"></td></tr>"                                             
                                + "  <tr><td width=\"350px\" valign=\"middle\" align=\"center\">"
                                + "<img align=\"center\"  style=\"  max-height:250px;  max-width:350px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+creative+"\"/></td></tr>"
                                + "</table>");
                        promotion.add(prodDesc.toString());
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
           for (String promoStr : promotion) {
               socialArray.add(promoStr);
           }
           //logger.debug("promotion size:"+promotion.size() +" specialsCount: "+ specials.size()  +" SocialCount: "+socialArray.size() );
           int loopLimit                    = 0;
           if(socialArray.size() > specials.size()) {
               loopLimit                    = socialArray.size();
           } else {
               loopLimit                    = specials.size();
           }
           
            int specialIndex                = 0;
            int socialIndex                 = 0;
            for(int i=0;i<loopLimit;i++){
                if(socialIndex==socialArray.size()){
                    socialIndex  = 0;
                }
                String socialMarketingHtml  = socialArray.get(socialIndex);
                socialIndex++;

                String specialHtml          = "";
                if(!specials.isEmpty()) {
                    if(specialIndex==specials.size()){
                        specialIndex        = 0;
                    }
                    specialHtml             =   specials.get(specialIndex);
                    specialIndex++;
                }
                String specialBoarder       ="";
                if(!specialHtml.equals("")){
                    specialBoarder          ="style=\"background-repeat:no-repeat; border: 3px solid #F2EF9B;\"";
                }
                prodDesc                    = new StringBuilder();
                 prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                         + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                         + "<tr><td height=\"10px\"> </td> </tr><tr>"
                         + "<td  height=\"300px\" valign=\"top\" align=\"center\"  style=\"background-repeat:no-repeat; border: 3px solid #F2EF9B;\">"+socialMarketingHtml+"</td></tr>"
                         + "<tr><td height=\"20px\"> </td> </tr><tr>"
                         + "<td   align=\"center\" height=\"150px\" "+specialBoarder+">"
                         + specialHtml+"</td></tr></table>");
                 social.add(prodDesc.toString());
            }
              
          
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");    
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf");             
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");                        
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));                        
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png")); 
            int menuCount                   = menus.size();
            int promotionCount              = promotion.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:"+menuCount +" promotionCount: "+ promotionCount +" SocialCount: "+ socialCount );
            if((menuCount/2) > socialCount){                
                int socialindex             = 0;
                for(int i=0; i<menuCount;i++){
                    String menuList         = menus.get(i);         
                    if(socialindex>socialCount-1){
                        socialindex          = 0;
                    }
                    String socialList       = social.get(socialindex);
                    i++;
                    int nextMenuCount       = i;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount          = 0;
                    }
                    String promoList        = menus.get(nextMenuCount);
                   promoList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\">"+promoList+"</td></tr></table>";
                    socialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" >"+menuList+"</td>"
                                            + " <td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">"+socialList+"</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\"  >"+promoList+"</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } else {
                int menuindex              = 0;                
                for(int i = 0; i < socialCount; i++) {
                    
                     String socialList       = social.get(i);
                    if(menuindex>menuCount-1) {
                        menuindex          = 0;
                    }
                    //logger.debug("menuList Index"+menuindex);
                    String menuList         = menus.get(menuindex);
                   // logger.debug("socialList:"+socialList);
                    int nextMenuCount       = menuindex+1;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    menuindex++;
                    String promoList        = menus.get(nextMenuCount);
                    promoList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\" >"+promoList+"</td></tr></table>";
                    //logger.debug("promotion list"+promoList);
                    menuindex++;
                    
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" >"+menuList+"</td>"
                                            + "<td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">" + socialList + "</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\" >" + promoList + "</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            }
            
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {                    
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("25000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu15CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));                        
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {            
            close(rs);
            close(stmt);
        }
     }

      private String getTileMenu16CSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'MARIDAVID'; src: url('/mnt/sdcard/Images/MARIDAVID BOLD.ttf'); } " +
                                            " @font-face { font-family: 'Dickie'; src: url('/mnt/sdcard/Images/Dickie.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:36px; font-weight:bold; color: #F2EF9B; word-wrap:break-word; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:18px;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .price_list{ font-family: \"Chalkboard\";  font-size:22px;  color: #F2EF9B; word-wrap:break-word;   text-align:center;  }" +
                                            " .special_list{ font-family: \"Chalkboard\";  font-size:35px; font-weight:bold;  color: #ffffff; overflow:hidden;  word-wrap:break-word;   text-align:center;  }" +
                                            " .social_list{ font-family: \"Chalkboard\";  font-size:28px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }" +
                                            " .feature_list{ font-family: \"Chalkboard\";  font-size:23px; font-weight:bold;  color: #ffffff; word-wrap:break-word; text-align:center;  }" +
                                            " .fb_list{ font-family: \"Chalkboard\";  font-size:18px; font-weight:bold;  color: #ffffff; overflow:hidden;  white-space:nowrap;  text-align:center; }";
        return css;
     }

      private void getTileMenuTemplate16(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> social           = new ArrayList<String>();
         ArrayList<String> promotion        = new ArrayList<String>();
         ArrayList<String> specials         = new ArrayList<String>();
         ArrayList<String> marketing        = new ArrayList<String>();
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') " +
                                            " FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 " +
                                            " ORDER BY bS.style, p.name; ";
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";
            /* String selectLocationSocialMedia
                                            = "(SELECT DISTINCT bMU.avatar, CONCAT( ' LIKES ', pD.boardName) msg,   bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user   LEFT JOIN productDescription pD ON pD.product =  bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUR.date) < 1 ORDER BY id DESC)" +
                                            " UNION ALL " +
                                            " (SELECT DISTINCT  bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg,  bMU.fbID,bMU.username,bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location  " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DATEDIFF(NOW(),bMUC.date) < 1 " +
                                            " ORDER BY id DESC) LIMIT 3;";*/
             
             String selectLocationSocialMedia    = "SELECT DISTINCT bMU.avatar, CONCAT(  ' LIKES ', p.name) msg, DATE(bMUR.date) AS d,  bMU.fbID, bMU.username,bMU.platform FROM bbtvMobileUserRating bMUR " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUR.user LEFT JOIN product p ON p.id = bMUR.product " +
                                            " WHERE bMUR.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUR.date) < 2 " +
                                            " UNION " +
                                            " SELECT DISTINCT bMU.avatar, CONCAT( ' Checked-In @ ', l.boardName) msg, DATE(bMUC.date) AS d, bMU.fbID, bMU.username, bMU.platform FROM bbtvMobileUserCheckin bMUC " +
                                            " LEFT JOIN bbtvMobileUser bMU ON bMU.id = bMUC.user LEFT JOIN location l ON l.id = bMUC.location " +
                                            " WHERE bMUC.location = ? AND  bMU.username <> 'null' AND DateDiff(now(),bMUC.date) < 2 " +
                                            " ORDER BY d DESC LIMIT 3;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String selectLocationSpecials  = "SELECT id, specials, sequence FROM locationSpecials WHERE location = ? ORDER BY sequence  ";
             String selectAutoFeed          = "SELECT newBeer, localBeer, comingSoon FROM bbtvAutoFeed WHERE location=?; ";
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             StringBuilder prodDesc         = new StringBuilder();
             StringBuilder marketingDesc    = new StringBuilder();
             StringBuilder localDesc        = new StringBuilder();
             StringBuilder onDeckDesc       = new StringBuilder();

             int productCount               = 0, featureCount = 0, localCount = 0, onDeckCount = 0;
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:200px;  max-width:300px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

             stmt                           = transconn.prepareStatement(selectLocationSpecials);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             while(rs.next()){
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table valign=\"top\" width=\"350px\" align=\"center\" border=\"0\"> "
                                             //+ "<tr><td  valign=\"top\" class=\"beer_list_header1\"  align=\"center\">Special</td></tr>"
                                             + "<tr><td  align=\"center\" class=\"special_list\" width=\"350px\" >"+rs.getString(2).replace("|", "<br/>")+"</td></tr></table>");
                 specials.add(prodDesc.toString());
             }

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }

             String glass                   = "", glassUrl = "", preStyle = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }

                 String price               = productPrices.get(prodId);
                 if (price != null && !price.equals("")){
                     price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 //logger.debug(productName +  " : " + price);

                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table width=\"380px\" height=\"650px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div>"+price+" </td></tr>");
                     productCount++;
                     if (productName.length() > 28) {
                         productCount++;
                     }
                     if (style.length() > 15) {
                         productCount++;
                     }
                 } else {
                    /* if (!preStyle.equals(beerStyle)) {
                         productCount++;
                         if (productCount > 6){
                             prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                             prodDesc       = new StringBuilder();
                             prodDesc.append("<table width=\"380px\" height=\"600px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                             productCount++;
                         } else {
                             prodDesc.append("<tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                             //productCount ++;
                         }
                     }*/
                     if (productCount > 6 && productName.length() > 28) {
                         prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         productCount       = 0;
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table width=\"380px\" height=\"650px\" valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+styleOriginAbv+" </div>"+price+"</td></tr>");
                         productCount++;
                         productCount++;
                          if(productName.length() >28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                     } else {
                         prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                         if (!preStyle.equals(beerStyle)) {
                            //logger.debug("Style" + style + "cnt: " + productCount);
                            productCount++;
                            prodDesc.append("<tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         }
                         prodDesc.append("<tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div>"+price+"</td></tr>");
                         productCount++;
                         if(productName.length() > 28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                         if(productCount >= 6){
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 }
                 //logger.debug(productName + " : " + productCount);
                 preStyle                   = beerStyle;

                 if(advertise > 0) {
                     if (featureCount == 0) {
                         marketingDesc      = new StringBuilder();
                         marketingDesc.append("<table width=\"350px\" height=\"200px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Featured Keg</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     } else {
                         marketingDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+kegLogo+"\" width=\"36px\"></td></tr>");
                         featureCount++;
                     }
                     if(featureCount >= 2) {
                         marketingDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(marketingDesc.toString());
                         featureCount       = 0;
                     }
                 }

                 if(local > 0) {
                     if (localCount == 0) {
                         localDesc      = new StringBuilder();
                         localDesc.append("<table width=\"350px\" height=\"200px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Local Beer</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     } else {
                         localDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                         localCount++;
                     }
                     if(localCount >= 2) {
                         localDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                         marketing.add(localDesc.toString());
                         localCount       = 0;
                     }
                 }
             }

             if(featureCount > 0) {
                marketingDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(marketingDesc.toString());
                featureCount                = 0;
             }

             if(localCount > 0) {
                localDesc.append("<tr><td height=\"50px\"></td> </tr></table>");
                marketing.add(localDesc.toString());
                localCount                = 0;
             }

             stmt                           = transconn.prepareStatement("SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, " +
                                            " pD.origin, (SELECT name FROM customBeerName WHERE location = l.location AND product = p.id), " +
                                            " (SELECT name FROM customStyleName WHERE location = l.location AND productSet = sPS.id), IFNULL(sL.logo, 'Rotator') " +
                                            " FROM comingSoonProducts l LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id " +
                                            " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet " +
                                            " LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id LEFT JOIN beerStyles bS ON bS.id =  bSM.style " +
                                            " LEFT JOIN styleLogo sL ON sL.style = sPS.name  WHERE l.location = ? AND p.id != 4311 AND sPS.productSetType = 9 " +
                                            " GROUP BY l.product ORDER BY bS.style, p.name, pD.category;");
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while(rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(6));  
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }

                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(9));
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }
                 String price               = productPrices.get(prodId);
                 if (price != null && !price.equals("")){
                     price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 //logger.debug(productName + " : " + productCount);

                 if (onDeckCount == 0) {
                     onDeckDesc             = new StringBuilder();
                     onDeckDesc.append("<table width=\"350px\" height=\"200px\" border=\"0\"><tr><td height=\"5px\"></td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"center\" class=\"beer_list_header\">Beer On-Deck</td></tr>"
                                            + "<tr><td style=\"padding-top: 15px;\" align=\"center\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 } else {
                     onDeckDesc.append("<tr><td align=\"center\" style=\"padding-top: 15px;\" class=\"feature_list\">"+productName+"<br>"
                                            + "<div class=\"beer_list2\">"+styleOriginAbv+"</div>"+price+"</td>"
                                            + "<td align=\"right\" ><img src=\"/mnt/sdcard/Images/"+glass+"\" width=\"36px\"></td></tr>");
                     onDeckCount++;
                 }
                 if(onDeckCount >= 2) {
                     onDeckDesc.append("<tr><td height=\"10px\"></td> </tr></table>");
                     marketing.add(onDeckDesc.toString());
                     //logger.debug(onDeckDesc.toString());
                     onDeckCount       = 0;
                 }
             }

             if(onDeckCount > 0) {
                onDeckDesc.append("<tr><td height=\"50px\"></td></tr></table>");
                marketing.add(onDeckDesc.toString());
                //logger.debug(onDeckDesc.toString());
                onDeckCount                 = 0;
             }

             //logger.debug("Marketing Count:" + marketing.size());

             if(productCount > 0) {
                  if(productCount>8) {
                      prodDesc.append("<tr><td  height=\"10px\"></td></tr>");
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  } else {
                      for(int i=productCount;i<7;i++) {
                          prodDesc.append("<tr><td height=\"50\" class=\"beer_list\"><br /><br /></td></tr>");
                          prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                          productCount++;
                      }
                      prodDesc.append("</table>");
                      menus.add(prodDesc.toString());
                      productCount = 0;
                  }
             }
             //logger.debug("product:"+prodDesc.toString());

            stmt                            = transconn.prepareStatement(selectLocationSocialMedia);
            stmt.setInt(1, location);
            stmt.setInt(2, location);
            rs                              = stmt.executeQuery();
            while(rs.next()) {
                String avatar               = rs.getString(1);
                String message              = rs.getString(2);
                String fbId                 = rs.getString(3);
                String username             = rs.getString(4);
                int platform                = rs.getInt(5);
                String firstName            = "";
                //logger.debug("FbID:" + fbId + " Message:"+ message);
                if(fbId!=null && !fbId.equals("") && !fbId.equals("null")) {
                    avatar                  = getAvatar(fbId);
                    avatar                  = avatar.replace("https", "http");
                    if(platform == 7) {
                        firstName           = getFBFirstName(fbId);
                    }
                }

                if(platform ==7) {
                    if(firstName!=null && !firstName.equals("")){
                        username            = firstName;
                    }
                }

                if(username.length() > 8) {
                    username                = username.substring(0,7);
                }
                message                     = username + message;

                if (!httpFileExists(avatar)) {
                   avatar                   = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/profile-pic.png";
                }

                String[] avatarArray        = avatar.split("/");
                int arrayLength             = avatarArray.length;
                String[] avatarArray2       = avatarArray[avatarArray.length-1].split("\\?");
                String avatarFileName       = avatarArray[arrayLength - 1];
                if(avatar.contains("?")) {
                    avatarFileName          = avatarArray2[0];
                }
                if(productCount == 0) {
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table width=\"350px\"  valign=\"top\" align=\"center\"  border=\"0\"><tr><td height=\"5px\"> </td> </tr>"
                                            + "<tr><td  valign=\"top\" class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social <br style=\"line-height:'150%'; margin-top:5px;\"/>"
                                            + "<img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"top\" width=\"60px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td>"
                                            + "<td width=\"340px\" class=\"fb_list\" valign=\"middle\"> "+message+"</td></tr>");
                    productCount++;
                } else {
                    prodDesc.append("<tr><td valign=\"middle\" width=\"60px\"><img height=\"60px\" src=\"/mnt/sdcard/Images/"+avatarFileName+"\"/></td><td width=\"340px\" class=\"fb_list\">"+message+"</td></tr>");
                    productCount++;
                }
                assetUrl.add(avatar);
            }

            boolean socialMediaAvail        = false;
            String socialMedia              = "";
            String socialMediaStatic        = "";
            String socialMediaStatic2       = "";
            ArrayList<String> socialArray   = new ArrayList<String>();

            if(productCount ==0) {
            } else {
                prodDesc.append("</table>");
                socialMedia                 = prodDesc.toString();
                socialMediaAvail            = true;
                productCount                = 0;
            }

            prodDesc                        = new StringBuilder();
            prodDesc.append("<table  width=\"350px\" align=\"center\"  border=\"0\"><tr><td height=\"20px\"> </td> </tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/checkinChalk.png\"/></td>"
                                            + "<td  width=\"340px\" class=\"social_list\" valign=\"middle\">Check-in and <br>update your Friends</td></tr>");
            prodDesc.append("<tr><td  height=\"15px\"></td></tr><tr><td valign=\"middle\" width=\"100px\"><img src=\"/mnt/sdcard/Images/likeChalk.png\"/></td><td  width=\"340px\" class=\"social_list\">Like and Recommend <br>Your Favorite Beers</td></tr>");
            prodDesc.append("</table>");
            socialMediaStatic              = prodDesc.toString();
            socialArray.add(socialMediaStatic);

            prodDesc                       = new StringBuilder();
            prodDesc.append("<table  width=\"350px\" align=\"center\" border=\"0\"><tr><td height=\"20px\"></td></tr><tr><td class=\"beer_list_header1\" colspan=\"2\" align=\"center\">Get Social<br/><img src=\"/mnt/sdcard/Images/sline.png\"/></td></tr>"
                                            + "<tr><td style=\"padding-top: 10px;\" valign=\"middle\" width=\"100px\"><img height=\"120px\" src=\"/mnt/sdcard/Images/MobileApp.png\"/></td>"
                                            + "<td width=\"340px\" class=\"social_list\" valign=\"middle\"> Download <br>\"BeerBoard Mobile\""
                                            //+ "<br /><br /><img src=\"/mnt/sdcard/Images/iStoreGooglePlayIcon125x50.png\"/>"
                                            + "</td></tr></table>");
            socialMediaStatic2             = prodDesc.toString();
            socialArray.add(socialMediaStatic2);

            if(!socialMediaAvail) {
                socialMedia                = socialMediaStatic;
            }
            socialArray.add(socialMedia);


            //addLocal & feature beer to social list
            for (String marketingStr : marketing) {
                  socialArray.add(marketingStr);
              }

           stmt                             = transconn.prepareStatement(selectLocationPromotions);
           stmt.setInt(1, location);
           rs                               = stmt.executeQuery();
           while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        prodDesc                = new StringBuilder();
                        prodDesc.append("<table width=\"350px\" border=\"0\"> <tr><td height =\"5px\"></td></tr>"
                                + "  <tr><td width=\"350px\" valign=\"middle\" align=\"center\">"
                                + "<img align=\"center\"  style=\"  max-height:250px;  max-width:350px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+creative+"\"/></td></tr>"
                                + "</table>");
                        promotion.add(prodDesc.toString());
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
           
            for (String promoStr : promotion) {
               socialArray.add(promoStr);
           }
           //logger.debug("promotion size:"+promotion.size() +" specialsCount: "+ specials.size()  +" SocialCount: "+socialArray.size() );
           int loopLimit                    = 0;
           if(socialArray.size() > specials.size()) {
               loopLimit                    = socialArray.size();
           } else {
               loopLimit                    = specials.size();
           }
           
            int specialIndex                = 0;
            int socialIndex                 = 0;
            for(int i=0;i<loopLimit;i++){
                if(socialIndex==socialArray.size()){
                    socialIndex  = 0;
                }
                String socialMarketingHtml  = socialArray.get(socialIndex);
                socialIndex++;

                String specialHtml          = "";
                if(!specials.isEmpty()) {
                    if(specialIndex==specials.size()){
                        specialIndex        = 0;
                    }
                    specialHtml             =   specials.get(specialIndex);
                    specialIndex++;
                }
                String specialBoarder       ="";
                if(!specialHtml.equals("")){
                    specialBoarder          ="style=\"background-repeat:no-repeat; border: 3px solid #F2EF9B;\"";
                }
                prodDesc                    = new StringBuilder();
                 prodDesc.append("<table align=\"center\" width=\"410px\" height =\"680px\" border=\"0\"> <tr><td height=\"10px\"> </td> </tr>"
                         + "<tr><td  valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                         + "<tr><td height=\"10px\"> </td> </tr><tr>"
                         + "<td  height=\"300px\" valign=\"top\" align=\"center\" style=\"background-repeat:no-repeat; border: 3px solid #F2EF9B;\">"+socialMarketingHtml+"</td></tr>"
                         + "<tr><td height=\"20px\"> </td> </tr><tr>"
                         + "<td   align=\"center\" height=\"150px\" "+specialBoarder+">"
                         + specialHtml+"</td></tr></table>");
                 social.add(prodDesc.toString());
            }
              
           
           

            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bbwhiteboarderlogo.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/MobileApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/likeChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/checkinChalk.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/downloadApp.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/iStoreGooglePlayIcon125x50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/like.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/bernard-mt-condense.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/sline.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/keg.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg0.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg05.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg10.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg15.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg20.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg25.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg30.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg35.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg40.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg45.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg50.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg55.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg60.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg65.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg70.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg75.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg80.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg85.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg90.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg95.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg100.png");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
            assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg125.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg150.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg175.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg200.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg225.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg250.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg275.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg300.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg325.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg350.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg375.png"));
            assetUrl.add(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Generic/Keg400.png"));
            int menuCount                   = menus.size();
            int socialCount                 = social.size();
            //logger.debug("menuCount size:"+menuCount +" socialCount: " + socialCount );
            
            if((menuCount/2) > socialCount) {
                int socialindex             = 0;
                for(int i=0; i < menuCount;i++){
                    String menuList         = menus.get(i);
                    if(socialindex > socialCount - 1){
                        socialindex          = 0;
                    }
                    String socialList       = social.get(socialindex);
                    i++;
                    int nextMenuCount       = i;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    String promoList        = menus.get(nextMenuCount);
                    promoList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\">"+promoList+"</td></tr></table>";
                    socialindex++;
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" >"+menuList+"</td>"
                                            + " <td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">"+socialList+"</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\"  >"+promoList+"</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } else {
                int menuindex              = 0;
                for(int i = 0; i < socialCount; i++) {

                     String socialList       = social.get(i);
                    if(menuindex>menuCount-1) {
                        menuindex          = 0;
                    }
                    //logger.debug("menuList Index"+menuindex);
                    String menuList         = menus.get(menuindex);
                    //logger.debug("SocialList"+socialList);
                    int nextMenuCount       = menuindex+1;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    menuindex++;
                    String promoList        = menus.get(nextMenuCount);
                    promoList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\" >"+promoList+"</td></tr></table>";
                    //logger.debug("promotion list"+promoList);
                    menuindex++;

                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\"><tr><td valign=\"top\" align=\"left\" width=\"600px\" height=\"700px\" >"+menuList+"</td>"
                                            + "<td width=\"600px\"  height\"700px\"  valign=\"bottom\" align=\"center\">" + socialList + "</td>"
                                            + "<td valign=\"top\" align=\"center\" height\"620px\"  width=\"360px\" >" + promoList + "</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            }

            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("25000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getTileMenu16CSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
      
      
      private void getThreeColumnTemplate(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();         
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') " +
                                            " FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 " +
                                            " ORDER BY bS.style, p.name; ";             
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             StringBuilder prodDesc         = new StringBuilder();             

             int productCount               = 0, productCountLimit = 5;
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:100px;  max-width:300px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

           

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }

             String glass                   = "", glassUrl = "", preStyle = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         =  HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 =  HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               =  HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              =  HandlerUtils.nullToEmpty(rs.getString(6));
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }

                 String price               = productPrices.get(prodId);
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }
                 if (price != null && !price.equals("")){
                     price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 //logger.debug(productName +  " : " + price);

                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table    valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\"></td></tr> <tr><td class=\"beer_list_header\" >"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div>"+price+" </td></tr><tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                     productCount++;
                     if (productName.length() > 28) {
                         productCount++;
                     }
                     if (style.length() > 15) {
                         productCount++;
                     }
                     if (price.length() > 0) {
                             productCount++;
                         }
                 } else {                    
                     if (productCount > productCountLimit && productName.length() > 28) {
                         prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         productCount       = 0;
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table    valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" ></td></tr> <tr><td class=\"beer_list_header\" >"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+styleOriginAbv+" </div>"+price+"</td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         productCount++;
                          if(productName.length() >28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                         if (price.length() > 0) {
                             productCount++;
                         }
                     } else {
                         prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                         if (!preStyle.equals(beerStyle)) {
                            //logger.debug("Style" + style + "cnt: " + productCount);
                            productCount++;
                            prodDesc.append("<tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         }
                         prodDesc.append("<tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div>"+price+"</td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         if(productName.length() > 28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                         if (price.length() > 0) {
                             productCount++;
                         }
                         if(productCount >= productCountLimit){
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 }
                 //logger.debug(productName + " : " + productCount);
                 preStyle                   = beerStyle;

                
             }
             if(productCount > 0){
                  prodDesc.append("</table>");
                  menus.add(prodDesc.toString());
             }
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
             int menuCount                   = menus.size();            
             logger.debug("menuCount size:"+menuCount  );

            if(menuCount > 0) {                
                for(int i=0; i < menuCount;i++){
                    String menuList         = menus.get(i);                    
                    i++;
                    int nextMenuCount       = i;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    String secondList        = menus.get(nextMenuCount);
                    secondList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\">"+secondList+"</td></tr></table>";                    
                    i++;
                    nextMenuCount++;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    String thirdList        = menus.get(nextMenuCount);
                    thirdList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\">"+thirdList+"</td></tr></table>";                    
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\">"
                                            + " <tr><td  colspan=\"3\" valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td valign=\"top\" align=\"center\" width=\"33%\" >"+menuList+"</td>"                                           
                                            + "<td valign=\"top\" align=\"center\"   width=\"33%\"  >"+secondList+"</td>"
                                            + "<td valign=\"top\" align=\"center\"   width=\"34%\"  >"+thirdList+"</td></tr><tr>"
                                            + "<td colspan=\"3\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } 
            //logger.debug("html size:" + htmlMenus.size());
            String css                      = getVerticalMenuCSS(1);
            String visibleTime              = "25000";
             generateMenuXMLRespons(htmlMenus, assetUrl, visibleTime, css, toAppend);
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
      
      
      
       private void generateMenuXMLRespons(ArrayList<String> htmlMenus, ArrayList<String> assetUrl,String visibleTime, String css, Element toAppend) throws HandlerException {
           Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText(visibleTime);
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(css));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));
                }
            }
           
           
     }
       
      
      
      private String getVerticalMenuCSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +                                            
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:40px; font-weight:bold; color: #F2EF9B; word-wrap:break-word; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Arial\";  font-size:33px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:20px;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .price_list{ font-family: \"Chalkboard\";  font-size:20px;  color: #F2EF9B; word-wrap:break-word;   text-align:center;  }";
           
           switch(type){
               case 2:
                   css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Chalkboard'; src: url('/mnt/sdcard/Images/Chalkboard.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +                                            
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:40px; font-weight:bold; color: #F2EF9B; word-wrap:break-word; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Arial\";  font-size:33px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .beer_list2{ font-family: \"Chalkboard\";  font-size:20px;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .price_list{ font-family: \"Chalkboard\";  font-size:20px;  color: #F2EF9B; word-wrap:break-word;   text-align:left;  }";
                   break;
                   
           }
        return css;
     }

      private void getVerticalMenuTemplate1(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();         
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, l.qtyOnHand * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') " +
                                            " FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 " +
                                            " ORDER BY bS.style, p.name; ";             
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             StringBuilder prodDesc         = new StringBuilder();             

             int productCount               = 0, productCountLimit = 13;
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:200px;  max-width:300px;\" height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

           

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }

             String glass                   = "", glassUrl = "", preStyle = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         =  HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 =  HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               =  HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              =  HandlerUtils.nullToEmpty(rs.getString(6));
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }

                 String price               = productPrices.get(prodId);
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }
                 if (price != null && !price.equals("")){
                     price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 //logger.debug(productName +  " : " + price);

                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table    valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\"></td></tr> <tr><td class=\"beer_list_header\" >"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div>"+price+" </td></tr><tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                     productCount++;
                     if (productName.length() > 28) {
                         productCount++;
                     }
                     if (style.length() > 15) {
                         productCount++;
                     }
                     if (price.length() > 0) {
                             productCount++;
                         }
                 } else {                    
                     if (productCount > productCountLimit && productName.length() > 28) {
                         prodDesc.append("<tr><td  height=\"3px\"></td></tr>");
                         prodDesc.append("</table>");
                         menus.add(prodDesc.toString());
                         productCount       = 0;
                         prodDesc           = new StringBuilder();
                         prodDesc.append("<table    valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td class=\"beer_list_header\" ></td></tr> <tr><td class=\"beer_list_header\" >"+beerStyle+"</td></tr>"
                                            + " <tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+styleOriginAbv+" </div>"+price+"</td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         productCount++;
                          if(productName.length() >28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                         if (price.length() > 0) {
                             productCount++;
                         }
                     } else {
                         prodDesc.append("<tr><td height=\"3px\"></td></tr>");
                         if (!preStyle.equals(beerStyle)) {
                            //logger.debug("Style" + style + "cnt: " + productCount);
                            productCount++;
                            prodDesc.append("<tr><td class=\"beer_list_header\" height=\"20\"></td></tr> <tr><td class=\"beer_list_header\" height=\"20\">"+beerStyle+"</td></tr>");
                         }
                         prodDesc.append("<tr><td class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div>"+price+"</td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         if(productName.length() > 28){
                             productCount++;
                         }
                         if(style.length() > 15) {
                             productCount++;
                         }
                         if (beerStyle.length() > 20) {
                             productCount++;
                         }
                         if (price.length() > 0) {
                             productCount++;
                         }
                         if(productCount >= productCountLimit){
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 }
                 //logger.debug(productName + " : " + productCount);
                 preStyle                   = beerStyle;

                
             }
             if(productCount > 0){
                  prodDesc.append("</table>");
                  menus.add(prodDesc.toString());
             }
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
             int menuCount                   = menus.size();            
             logger.debug("menuCount size:"+menuCount  );

            if(menuCount > 0) {                
                for(int i=0; i < menuCount;i++){
                    String menuList         = menus.get(i);                    
                    i++;
                    int nextMenuCount       = i;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    String promoList        = menus.get(nextMenuCount);
                    promoList               ="<table><tr><td valign=\"top\" align=\"center\" height\"680px\"  width=\"360px\">"+promoList+"</td></tr></table>";                    
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\">"
                                            + " <tr><td  colspan=\"2\" valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td valign=\"top\" align=\"left\" width=\"45%\" >"+menuList+"</td>"                                           
                                            + "<td valign=\"top\" align=\"left\"   width=\"45%\"  >"+promoList+"</td></tr><tr>"
                                            + "<td colspan=\"2\" align=\"right\"><img width=\"150px\" src=\"/mnt/sdcard/Images/bbwhiteboarderlogo.png\" style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\"></td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } 
            //logger.debug("html size:" + htmlMenus.size());
            Element layoutAssetEl           = null;
            for (int i = 0; i < htmlMenus.size(); i++) {
                String beerListString       = htmlMenus.get(i);
                Element beerMenusEl         = toAppend.addElement("beerMenus");
                beerMenusEl.addElement("visibleTime").addText("25000");
                beerMenusEl.addElement("sequence").addText(HandlerUtils.nullToEmpty(String.valueOf(i)));
                beerMenusEl.addElement("beerMenu").addText(HandlerUtils.nullToEmpty(beerListString));
                beerMenusEl.addElement("type").addText(HandlerUtils.nullToEmpty(String.valueOf(6)));
                beerMenusEl.addElement("locationBackground").addText(HandlerUtils.nullToEmpty(""));
                beerMenusEl.addElement("locationAnimation").addText(HandlerUtils.nullToEmpty("0"));
                beerMenusEl.addElement("aniVisible").addText(String.valueOf((0)));
                beerMenusEl.addElement("css").addText(HandlerUtils.nullToEmpty(getVerticalMenuCSS(1)));

                Element menusLayoutEl       = beerMenusEl.addElement("menuLayout");
                menusLayoutEl.addElement("html").addText(HandlerUtils.nullToEmpty(""));

                layoutAssetEl               = menusLayoutEl.addElement("asset");
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Chalkboard.ttf"));
                layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/ChalkboardNew.jpg"));
            }
            if(layoutAssetEl!=null) {
                for(int i=0;i<assetUrl.size();i++){
                    layoutAssetEl.addElement("url").addText(HandlerUtils.nullToEmpty(assetUrl.get(i)));
                }
            }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
      
      
      private String getEightMenuCSS(int type) throws HandlerException {
           String typeBackground[]          = {""};
           String  css                      = "@charset 'utf-8'; " +
                                            " @font-face { font-family: 'Avantgarde'; src: url('/mnt/sdcard/Images/Avantgarde.ttf'); } " +
                                            " @font-face { font-family: 'appleberry'; src: url('/mnt/sdcard/Images/appleberry.ttf'); } " +
                                            " @font-face { font-family: 'SimonScript'; src: url('/mnt/sdcard/Images/SimonScript.ttf'); } " +                                            
                                            " body { background-color: #000000; background-position: left top; background-repeat: repeat; fieldset border-style:none; margin:0px; border-collapse:collapse; }" +
                                            " .beer_list_header{ font-family:'appleberry'; font-size:40px; font-weight:bold; color: #F2EF9B; word-wrap:break-word; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list_header1{ font-family:'SimonScript'; font-size:42px; font-weight:bold;  color: #F2EF9B; overflow:hidden;  white-space:nowrap; text-align:center; padding-top:\"0px\";  }" +
                                            " .beer_list{ font-family: \"Avantgarde\";  font-size:49px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .bottle_list{ font-family: \"Avantgarde\";  font-size:40px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .bottle_title{ font-family: \"Avantgarde\";  font-size:50px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:center;  }" +
                                            " .bottle_list2{ font-family: \"Avantgarde\";  font-size:25px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .bottle_list1{ font-family: \"Avantgarde\";  font-size:35px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +                                            
                                            " .bottle_list3{ font-family: \"Avantgarde\";  font-size:20px; font-weight:bold;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .beer_list2{ font-family: \"Avantgarde\";  font-size:27px;  color: #ffffff; word-wrap:break-word;   text-align:left;  }" +
                                            " .price_list{ font-family: \"Avantgarde\";  font-size:20px;  color: #F2EF9B; word-wrap:break-word;   text-align:left;  }";
        return css;
     }

      private void getEightMenuTemplate(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();         
         ArrayList<String> bottleMenus      = new ArrayList<String>();         
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, MAX(l.qtyOnHand) * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') " +
                                            " FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 " +
                                            " GROUP BY p.id ORDER BY  p.name; ";             
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";
             String selectBottleBeer        = "SELECT p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), s.name, pD.origin   FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN brewStyleMap bSM ON bSM.product = p.id"
                                            + "  LEFT JOIN productSet s ON s.id=bSM.style WHERE location=? ORDER by p.name;";

             StringBuilder prodDesc         = new StringBuilder();             

             int productCount               = 0, productCountLimit = 4;
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:200px;    height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

           

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }

             String glass                   = "", glassUrl = "", preStyle = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         =  HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 =  HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               =  HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              =  HandlerUtils.nullToEmpty(rs.getString(6));
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }

                 String price               = productPrices.get(prodId);
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }
                 if (price != null && !price.equals("")){
                     //price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 price                      = "";
                 //logger.debug(productName +  " : " + price);

                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table   valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td valign=\"top\" height=\"155px\"  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+" </div></td></tr><tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                     productCount++;
                     
                 } else {                    
                     
                         prodDesc.append("<tr><td valign=\"top\" height=\"155px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ styleOriginAbv+"</div>"+price+"</td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         
                         if(productCount >= productCountLimit){
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 
                 

                
             }
             if(productCount > 0){
                  prodDesc.append("</table>");
                  menus.add(prodDesc.toString());
             }
             /* For Bottle Beer*/
             productCount                   = 0;
             stmt                           = transconn.prepareStatement(selectBottleBeer);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {                
                 String productName         =  HandlerUtils.nullToEmpty(rs.getString(1));
                  String abv                 =  HandlerUtils.nullToEmpty(rs.getString(2));
                 String style               =  HandlerUtils.nullToEmpty(rs.getString(3));
                 String origin              =  HandlerUtils.nullToEmpty(rs.getString(4));
                  if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                  String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }
                 String styleName           = "height=\"125px\"  class=\"bottle_list\"";
                 String styleAbv           = " class=\"bottle_list2\"";
                 if(bottleMenus.size()==0) {
                      productCountLimit     = 5;
                      styleName             = " height=\"100px\"  class=\"bottle_list1\"";
                      styleAbv              = " class=\"bottle_list3\"";
                 } else{
                      productCountLimit     = 4;
                      styleName             = " height=\"100px\"  class=\"bottle_list1\"";
                      styleAbv              = " class=\"bottle_list3\"";
                 }
                 
                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table   valign=\"top\"  align=\"center\"    border=\"0\">"
                                            + " <tr><td valign=\"top\" "+styleName+">"+productName+" <br><div "+styleAbv+"> "+ styleOriginAbv+" </div></td></tr><tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                     productCount++;
                     
                 } else {                    
                     
                         prodDesc.append("<tr><td valign=\"top\"  "+styleName+">"+productName+"<br><div "+styleAbv+"> "+ styleOriginAbv+" </div></td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         
                         if(productCount >= productCountLimit){
                             if(productCountLimit==4){
                                 prodDesc.append("<tr><td valign=\"top\" height=\"100px\"></td></tr>");
                             }
                             prodDesc.append("</table>");
                             bottleMenus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 
                 

                
             }
             if(productCount > 0){
                 for(int i=productCount; i<productCountLimit;i++){
                     prodDesc.append("<tr><td valign=\"top\" height=\"100px\"></td></tr>");
                     
                 }
                  prodDesc.append("</table>");
                  bottleMenus.add(prodDesc.toString());
             }
             
           
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
              assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Avantgarde.ttf");
              assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/whiteborder.png");
             int menuCount                   = menus.size();            
             logger.debug("menuCount size:"+menuCount  );

            if(menuCount > 0) {                
                for(int i=0; i < menuCount;i++){
                    String menuList         = menus.get(i);                    
                    i++;
                    int nextMenuCount       = i;
                    if(nextMenuCount>menuCount-1) {
                        nextMenuCount       = 0;
                    }
                    String promoList        = menus.get(nextMenuCount);
                   // promoList               ="<table><tr><td valign=\"top\" >"+promoList+"</td></tr></table>";                    
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\">"
                                           // + " <tr><td  colspan=\"3\" valign=\"top\" align=\"center\">"+locationLogo+"</td></tr>"
                                            + "<tr><td valign=\"top\" align=\"left\"  width=\"45%\" height=\"650px\" >"+menuList+"</td>"
                                            + "<td  valign=\"middle\"  align=\"center\" width=\"10%\"><img   width=\"7px\" height=\"650px\" src=\"/mnt/sdcard/Images/whiteborder.png\"/></td>"                                           
                                            + "<td valign=\"top\" align=\"left\"   width=\"45%\" height=\"650px\" >"+promoList+"</td></tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } 
            int bottleMenuCount = bottleMenus.size();
            logger.debug("menuCount size:"+bottleMenuCount  );
             if(bottleMenuCount > 0) {                
                for(int i=0; i < bottleMenuCount;i++){
                    String menuList1         = bottleMenus.get(i);    
                    prodDesc                = new StringBuilder();
                    i++;
                    int nextMenuCount       = i;
                    String menuList2 = "";
                    if(nextMenuCount>bottleMenuCount-1) {
                        
                    } else {
                        menuList2        = bottleMenus.get(nextMenuCount);
                        nextMenuCount++;
                       
                    }
                    i++;
                    String menuList3 = "";
                    if(nextMenuCount>bottleMenuCount-1) {
                        
                    } else {
                        menuList3        = bottleMenus.get(nextMenuCount);
                        nextMenuCount++;
                        
                        
                    }
                    prodDesc.append("<table  width=\"100%\" border=\"0\">"
                                            + " <tr><td height=\"100px\" colspan=\"5\" valign=\"top\" align=\"center\" class=\"bottle_title\">Bottles & Cans</td></tr>"
                                            + "<tr><td valign=\"top\" align=\"left\"  width=\"30%\" height=\"650px\" >"+menuList1+"</td>");
                     prodDesc.append("<td  valign=\"middle\"  align=\"center\" width=\"5%\"><img   width=\"7px\" height=\"525px\" src=\"/mnt/sdcard/Images/whiteborder.png\"/></td>"                                           
                                            + "<td valign=\"middle\" align=\"left\"   width=\"30%\" height=\"650px\" >"+menuList2+"</td>");
                     prodDesc.append("<td  valign=\"middle\"  align=\"center\" width=\"5%\"><img   width=\"7px\" height=\"525px\" src=\"/mnt/sdcard/Images/whiteborder.png\"/></td>"                                           
                                            + "<td valign=\"middle\" align=\"left\"   width=\"30%\" height=\"650px\" >"+menuList3+"</td>");
                    
                    prodDesc.append("</tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } 
            
            String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";  
           stmt                             = transconn.prepareStatement(selectLocationPromotions);
           stmt.setInt(1, location);
           rs                               = stmt.executeQuery();
           while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        prodDesc                = new StringBuilder();
                        prodDesc.append("<table height=\"100%\" width=\"100%\" align=\"center\"  valign=\"middle\" border=\"0\"> <tr><td  valign=\"middle\" align=\"center\">"
                                + "<img align=\"center\"  style=\" max-width:1250px;  max-height:650px;\"  src=\"/mnt/sdcard/Images/"+creative+"\"/></td></tr>"
                                + "</table>");
                        htmlMenus.add(prodDesc.toString());
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
           
            String css                      = getEightMenuCSS(location);
            String visibleTime              = "20000";
             generateMenuXMLRespons(htmlMenus, assetUrl, visibleTime, css, toAppend);
            
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
      
      
      

      private void getVerticalMenuTemplate2(int location, Element toAppend) throws HandlerException {

         ArrayList<String> htmlMenus        = new ArrayList<String>();
         ArrayList<String> menus            = new ArrayList<String>();         
         ArrayList<String> promotion        = new ArrayList<String>();         
         ArrayList<String> assetUrl         = new ArrayList<String>();
         String locationLogo                = "";
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;

         try {
             String selectBeverageDescription
                                            = "SELECT DISTINCT p.id, bS.style, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), sPS.name, pD.origin, " +
                                            " (SELECT name FROM customBeerName WHERE location =b.location AND product = p.id),( SELECT name FROM customStyleName " +
                                            " WHERE location = b.location AND productSet = sPS.id), l.advertise, MAX(l.qtyOnHand) * 100, " +
                                            " (SELECT file FROM kegIcon WHERE (l.qtyOnHand*100 ) between start AND end), l.local, IFNULL(sL.logo, 'Rotator') " +
                                            " FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN productSetMap sPSM ON sPSM.product = l.product " +
                                            " LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet LEFT JOIN beerStylesMap bSM ON bSM.productSet = sPS.id " +
                                            " LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = sPS.name " +
                                            " WHERE l.status = 'RUNNING' AND p.id != 4311 AND b.location = ? AND sPS.productSetType = 9 " +
                                            " GROUP BY p.id ORDER BY  p.name; ";             
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";
             String selectBottleBeer        = "SELECT p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), s.name, pD.origin   FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product = p.id LEFT JOIN brewStyleMap bSM ON bSM.product = p.id"
                                            + "  LEFT JOIN productSet s ON s.id=bSM.style WHERE location=? ORDER by p.name;";

             StringBuilder prodDesc         = new StringBuilder();             

             int productCount               = 0, productCountLimit = 5;
             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             String logo                    = "USBNLogo.png";
             rs                             = stmt.executeQuery();
             if(rs.next()) {
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             assetUrl.add("http://bevmanager.net/Images/Location_logo/"+logo);
             locationLogo                   ="<table  border=\"0\"><tr><td align=\"center\" valign=\"middle\">"
                                            + "<img style=\"  max-height:200px;    height=\"75%\" src=\"/mnt/sdcard/Images/"+logo+"\"/></td></tr></table>";

           

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }

             String glass                   = "", glassUrl = "", preStyle = "";
             stmt                           = transconn.prepareStatement(selectBeverageDescription);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int prodId                 = rs.getInt(1);
                 String beerStyle           = HandlerUtils.nullToEmpty(rs.getString(2));
                 String productName         =  HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 =  HandlerUtils.nullToEmpty(rs.getString(4));
                 String style               =  HandlerUtils.nullToEmpty(rs.getString(5));
                 String origin              =  HandlerUtils.nullToEmpty(rs.getString(6));
                 productName                = HandlerUtils.nullToString(rs.getString(7),productName);
                 style                      = HandlerUtils.nullToString(rs.getString(8),style);
                 int advertise              = rs.getInt(9);
                 double kegLevel            = rs.getDouble(10);
                 String kegLogo             = HandlerUtils.nullToString(rs.getString(11),"keg.png");
                 int local                  = rs.getInt(12);
                 String StyleLogo           = HandlerUtils.nullToEmpty(rs.getString(13));
                 if(style.contains("Do Not Know")){
                     style                  ="";
                 }
                 if(origin.contains("Select")) {
                     origin                 = "";
                 }
                 if(StyleLogo != null & !StyleLogo.equals("")){
                     glass                  = StyleLogo + ".png";
                     glassUrl               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/glass/" + HandlerUtils.nullToEmpty(glass);
                     assetUrl.add(glassUrl);
                 }

                 String price               = productPrices.get(prodId);
                 String styleOriginAbv      = "";
                 if(!style.equals("")){
                     styleOriginAbv         = style+" | ";
                 }
                 if(!origin.equals("")){
                     styleOriginAbv         += origin+" | ";
                 }
                 if(!abv.equals("")){
                     styleOriginAbv         += abv+"  ";
                 }
                 if (price != null && !price.equals("")){
                     //price                  = "<div class=\"price_list\"> "+ price +" </div>";
                 } else {
                     price                  = "";
                 }
                 price                      = "";
                 //logger.debug(productName +  " : " + price);

                 if (productCount == 0) {
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table   valign=\"top\"  align=\"left\"    border=\"0\">"
                                            + " <tr><td valign=\"top\" width=\"60%\" height=\"100px\"  class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ style+" </div></td><td width=\"20%\" class=\"beer_list2\"> "+ abv+" </td><td width=\"20%\" class=\"beer_list2\"> "+ origin+" </td></tr><tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                     productCount++;
                     
                 } else {                    
                     
                         prodDesc.append("<tr><td valign=\"top\" height=\"100px\" class=\"beer_list\">"+productName+"<br><div class=\"beer_list2\"> "+ style+"</div>/td><td width=\"20%\" class=\"beer_list2\"> "+ abv+" </td><td width=\"20%\" class=\"beer_list2\"> "+ origin+" </td></tr> <tr><td class=\"beer_list_header\" height=\"20\" ></td></tr>");
                         productCount++;
                         
                         if(productCount >= productCountLimit){
                             prodDesc.append("</table>");
                             menus.add(prodDesc.toString());
                             productCount   = 0;
                         } else {
                             //productCount++;
                         }
                     }
                 
                 

                
             }
             if(productCount > 0){
                  prodDesc.append("</table>");
                  menus.add(prodDesc.toString());
             }
            
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/MARIDAVID%20BOLD.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Dickie.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/tradegothic.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/SimonScript.ttf");
             assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/appleberry.ttf");
              assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Avantgarde.ttf");
              assetUrl.add("http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/whiteborder.png");
             int menuCount                   = menus.size();      
             String selectLocationPromotions= "SELECT id, type, visibleTime, file, sequence,location FROM locationPromotions WHERE location IN (?) ORDER BY sequence";  
           stmt                             = transconn.prepareStatement(selectLocationPromotions);
           stmt.setInt(1, location);
           rs                               = stmt.executeQuery();
           while(rs.next()) {
                int type                    = rs.getInt(1);
                String creative             = rs.getString(4);
                switch (rs.getInt(2)) {
                    case 1:
                        String url          = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Customers/"+ String.valueOf(rs.getInt(6)) + "/" + creative.trim().replaceAll("\'", "%27").replaceAll(" ", "%20");
                        prodDesc                = new StringBuilder();
                        prodDesc.append("<table height=\"650px\" width=\"750px\" align=\"center\"  valign=\"middle\" border=\"0\"> <tr><td  valign=\"middle\" align=\"center\">"
                                + "<img align=\"center\"  style=\" max-width:750px;  max-height:650px;\"  src=\"/mnt/sdcard/Images/"+creative+"\"/></td></tr>"
                                + "</table>");
                        promotion.add(prodDesc.toString());
                        assetUrl.add(url);
                    case 2:
                        break;
                    default:
                        break;
                }
            }
           
           int loopLimit                    = 0;
           
             if(promotion.size()> menuCount) {
                 loopLimit                  = promotion.size();
             } else {
                 loopLimit                  = menuCount;
             }
             

            if(loopLimit > 0) { 
                int menuIndex               = 0;
                int promoIndex              = 0;
                
                for(int i=0; i < loopLimit;i++){
                      if(promoIndex>promotion.size()-1) {                        
                        promoIndex           = 0;
                    }
                    
                    String promoList         = promotion.get(promoIndex); 
                    promoIndex++;
                    
                    String menuList1         = menus.get(menuIndex);                    
                    menuIndex++;                    
                    if(menuIndex>menuCount-1) {                        
                        menuIndex           = 0;
                    }
                   // String menuList2        = menus.get(menuIndex);
                    //menuIndex++;
                   // promoList               ="<table><tr><td valign=\"top\" >"+promoList+"</td></tr></table>";                    
                    prodDesc                = new StringBuilder();
                    prodDesc.append("<table  width=\"100%\" border=\"0\">"
                                            + " <tr><td  colspan=\"3\" valign=\"top\" align=\"center\">"+promoList+"</td></tr>"
                                            + "<tr><td valign=\"top\" align=\"left\"  width=\"90%\" height=\"650px\" >"+menuList1+"</td>"
                                            //+ "<td  valign=\"middle\"  align=\"center\" width=\"10%\"><img   width=\"7px\" height=\"650px\" src=\"/mnt/sdcard/Images/whiteborder.png\"/></td>"                                           
                                            //+ "<td valign=\"top\" align=\"left\"   width=\"45%\" height=\"650px\" >"+menuList2+"</td>"
                                            + "</tr></table>");
                    htmlMenus.add(prodDesc.toString());
                }
            } 
           
            
            String css                      = getVerticalMenuCSS(2);
            String visibleTime              = "20000";
             generateMenuXMLRespons(htmlMenus, assetUrl, visibleTime, css, toAppend);
            
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } finally {
            close(rs);
            close(stmt);
        }
     }
      
      
      
      
      
      
}
