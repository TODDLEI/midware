/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package net.terakeet.util;


import java.sql.*;
import java.text.BreakIterator;
import java.util.ArrayList;
import java.util.HashMap;
import net.terakeet.soapware.DatabaseConnectionManager;
import net.terakeet.soapware.HandlerUtils;
import net.terakeet.soapware.RegisteredConnection;
import net.terakeet.soapware.handlers.BeerBoardHandler;
import net.terakeet.soapware.*;
import org.dom4j.Element;

/**
 *
 * @author suba
 */
public class printableMenu {    
    private void close(Statement s) {
        if (s != null) {
            try { s.close(); } catch (SQLException sqle) { }
        }
    }
    private void close(ResultSet rs) {
        if (rs != null) {
            try { rs.close(); } catch (SQLException sqle) { }
        }
    }
     
     public  ArrayList<String> getBottledTemplate3(int beerType,int location,int customer,int count, String color, String logo,Element toAppend, MidwareLogger logger, RegisteredConnection transconn  ) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                       = "#000000",
         String  bgcolor                    = "#FFFFFF";


         try {
             String selectDraftBeer         = "SELECT  sPS.name,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')),IF(pD.ibu = 0.0, '', pD.ibu) FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + "  LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id "
                                            + " LEFT JOIN productSetMap sPSM ON sPSM.product = l.product LEFT JOIN productSet sPS ON sPS.id = sPSM.productSet"
                                            + "  WHERE l.status = 'RUNNING' AND b.location = ?  AND sPS.productSetType = 9 AND p.id NOT IN(4311,10661)  GROUP BY l.product ORDER BY sPS.name, pD.boardName, pD.category ;";
             String selectBottleBeer        = "SELECT  pS.name,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')),IF(pD.ibu = 0.0, '', pD.ibu) FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product=p.id  LEFT JOIN productSetMap pSM ON pSM.product=p.id LEFT JOIN productSet pS ON pS.id=pSM.productSet "
                                            + " WHERE location=? AND pS.productSetType=9 AND p.id NOT IN(4311,10661) ORDER by pS.name;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";
             String style3                  = "style=\" color:#000000; font-family:'serif'; font-size:10px; font-weight:bold; \"";
             String style4                  = "";
             if(count == 20) {
                // logger.debug("Loading S1");
                  style1                    = "style=\" color: "+color+"; font-family:'arial'; font-size:20px; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                  style2                    = "style=\" color: "+color+"; font-family:'serif'; font-size:24px; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                  style4                    = "style=\" color: "+color+"; font-family: Calibri; font-size:18px; font-weight:bold;    padding:5px; text-align:center;\"";
             } else if(count >= 30){
                 //logger.debug("Loading S2");
                  style1                    = "style=\" color: "+color+"; font-family:'arial'; font-size:16px; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                  style2                    = "style=\" color: "+color+"; font-family:'serif'; font-size:20px; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                  style4                    = "style=\" color: "+color+"; font-family: Calibri; font-size:26px; font-weight:bold;    padding:5px; text-align:center;\"";
             } else if(count == 36){
                 //logger.debug("Loading S3");
                  style1                    = "style=\" color: "+color+"; font-family:'arial'; font-size:10px; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                  style2                    = "style=\" color: "+color+"; font-family:'serif'; font-size:8px; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                  style4                    = "style=\" color: "+color+"; font-family: Calibri; font-size:12px; font-weight:bold;    padding:5px; text-align:center;\"";
             }
             int prodCount                  = 0;

             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if(rs.next()){
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             String pngFileName             = logo;
             logo                           = logo.replaceAll("\'", "%27").replaceAll(" ", "%20");
             String logoURL                 ="http://bevmanager.net/Images/Location_logo/"+logo;
             if(!logo.equals("USBNLogo.png") && logo.contains(".png")){
                 String fileName            = pngFileName.replaceAll(".png", ".jpg");
                 BeerBoardHandler bb        = new BeerBoardHandler();
                 //bb.saveImage("http://bevmanager.net/Images/Location_logo/"+logo, "/home/midware/"+pngFileName);
                 bb.convertPNGToJPG("http://bevmanager.net/Images/Location_logo/"+logo,"/home/midware/"+fileName,"#FFFFFF");
                 bb.fileUpload("/home/midware/"+fileName);
                 fileName                           = fileName.replaceAll("\'", "%27").replaceAll(" ", "%20");
                 logoURL                    = "http://social.usbeveragenet.com:8080/fileUploader/Images/"+fileName;
             }
             String title                   = "";
             StringBuilder prodDesc         = new StringBuilder();
             if(beerType ==1){
                 stmt                        = transconn.prepareStatement(selectBottleBeer);
                 stmt.setInt(1, location);
                 title                      = "Bottled Beer";
             } else {
                 stmt                        = transconn.prepareStatement(selectDraftBeer);
                 stmt.setInt(1, location);
                 title                      = "Draft Beer";
             }
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 String StyleName           = HandlerUtils.nullToEmpty(rs.getString(1));
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(2));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(3));
                 String ibu                 = HandlerUtils.nullToEmpty(rs.getString(4));


                // String style1              = "class=\"beer_list_header\"",style2="class=\"beer_list\"";
                 if(prodCount ==0){
                     prodDesc               = new StringBuilder();
                     prodDesc.append("<table cellspacing=\"0\" cellpadding=\"0\" style=\"background-color:"+bgcolor+"\"  width=\"700px\" border=\"0\">  <tr> "
                                            //+ " <td colspan=\"4\" "+style1+" >"+title+"</td> </tr>  <tr>"
                                           // + " <td colspan=\"4\" "+style1+" >Served Ice Cold!</td> </tr> <tr>"
                                            + " <td "+style1+"><u>Style</u></td>"
                                            + " <td "+style1+"><u>Brand</u></td>"
                                            + " <td "+style1+"><u>ABV%</u></td>"
                                            + " <td "+style1+"><u>IBU</u></td>"
                                            + " </tr>");
                      if(count ==20) {
                          prodDesc.append(" <tr><td  colspan=\"4\" height=\"5px\""+style2+"></td></tr>");
                      }
                 }
                  prodDesc.append(" <tr><td "+style2+">"+StyleName+"</td>"
                                            + " <td "+style2+">"+productName+"</td>"
                                            + " <td "+style2+">"+abv+"</td>"
                                            + " <td "+style2+">"+ibu+"</td></tr>");
                  if(count ==20) {
                      prodDesc.append(" <tr><td  colspan=\"4\" height=\"5px\""+style2+"></td></tr>");
                  }
                // logger.debug(productName+ ": "+prodCount);
                 prodCount++;

                 if (count ==prodCount){
                     prodDesc.append("</table>");
                     styleMenus.add(prodDesc.toString());
                     prodCount              = 0;
                 }
             }

             if(prodCount > 0){
                  prodDesc.append("</table>");
                  styleMenus.add(prodDesc.toString());
             }
             prodCount                      = 0;
             String closeTr                 = "";
             logger.debug("Menu Size:"+styleMenus.size());
             for(int i=0;i<styleMenus.size();i++) {
                 prodDesc                   = new StringBuilder();
                 prodDesc.append("<table width=\"1500px\" height=\"700px\" border=\"0\">" +
                                            "<tr><td width=\"700px\" valign=\"top\" align=\"left\">" +
                                            "<table width=\"700px\" border=\"0\"><tr><td width=\"75px\">" +
                                            "<img style=\"max-width:100px; max-height:75px; background-color:"+bgcolor+";\" src=\""+logoURL+"\"/></td>" +
                                            "<td width=\"50px\"></td><td align=\"center\" "+style4 +"> Ice Cold "+title+"</td></tr>" +
                                            "</table>" +
                                            "</td>" +
                                            "<td style=\" width=\"100px\";\" valign=\"top\"></td>" +
                                            "<td width=\"700px\" valign=\"top\" align=\"left\">" +
                                            "<table width=\"700px\" border=\"0\">" +
                                            "<tr><td width=\"75px\"><img style=\"max-width:100px; max-height:75px;  background-color:"+bgcolor+";\" src=\""+logoURL+"\"/></td>" +
                                            "<td width=\"50px\"></td><td align=\"center\" "+style4 +"> Ice Cold "+title+"</td></tr></table>" +
                                            "</td></tr>" +
                                            "<tr><td height=\"5px\" valign=\"top\" align=\"left\"></td>" +
                                            "<td height=\"5px\"valign=\"top\" align=\"left\"></td>" +
                                            "<td height=\"5px\" valign=\"top\" align=\"left\"></td></tr>" +
                                            "<tr><td width=\"700px\" height=\"700px\" valign=\"top\">"+styleMenus.get(i)+"</td>" +
                                            "<td style=\" width=\"100px\";\" height=\"700px\" valign=\"top\"></td>" +
                                            "<td width=\"700px\" height=\"700px\" valign=\"top\">"+styleMenus.get(i)+"</td></tr>" +
                                            "<tr><td valign='bottom' align='right' ><hr/>" +
                                            "<table width='700px'><tr><td align='right'>" +
                                            "<img height='50px' align='right' src='http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Beerboardqr80x80.png' /></td>" +
                                            "<td width=\"2px\"></td><td width='110px' align='right' "+style3+">Our Draft List is Mobile!<img width='100px' src='http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/beerboardlogo.png' /></td></tr>" +
                                            "</table>" +
                                            "</td>" +
                                            "<td style=\" width=\"100px\";\" valign=\"top\"></td>" +
                                            "<td valign='bottom' align='right'><hr/>" +
                                            "<table width='700px'>" +
                                            "<tr><td align='right'><img height='50px' align='right' src='http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Beerboardqr80x80.png' /></td>" +
                                            "<td width=\"2px\"></td><td width='110px' align='right' "+style3+">Our Draft List is Mobile!<img width='100px' src='http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/beerboardlogo.png' /></td></tr>" +
                                            "</table>" +
                                            "</td></tr></table>");
                 menus.add(prodDesc.toString());
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
            close(rs);
            close(stmt);
        }
        return menus;
     }



        public  ArrayList<String> getBottledTemplate6(int beerType, int location, int customer, int count, String color, String logo, Element toAppend, MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                       = "#000000",
         String  bgcolor                    = "#FFFFFF";
         HashMap<Integer, String> productCalories
                                            = new HashMap<Integer, String>();
         
         productCalories.put(1,"96");//MillerLight
         productCalories.put(3,"180");//Sam Boston Lager 180
         productCalories.put(21,"125");//Guinness 125
         productCalories.put(25,"110");//Bud Light 110
         productCalories.put(36,"164");//Blue Moon 164
         productCalories.put(40,"148");//Heineken 148
         productCalories.put(42,"99");//Yuengling 99 
         productCalories.put(52,"154");//Stella Artois 154
         productCalories.put(58,"138");//Newcastle 138
         productCalories.put(59,"100");//Coors Light 100
         productCalories.put(61,"145");//Budweiser 145
         productCalories.put(221,"130");//Dos Equis Lager 130
         productCalories.put(708,"167");//Shock Top 167 
         productCalories.put(2532,"190");//Angry Orchard 190
         productCalories.put(12,"153");//Labatt Blue 153 
         productCalories.put(2596,"147");//Founders All Day IPA
         productCalories.put(2992,"180");//Bell's Kalamazoo Stout 180 
         productCalories.put(1103,"210");//Bell two 210
         productCalories.put(8112,"144");// 'Cigar City End of Summer' 144
         productCalories.put(2596,"147");//Founders All Day IPA 147
         productCalories.put(3739,"165");//Redd's Apple Ale 165
         productCalories.put(3776,"138");//Redhook Gamechanger Ale 138
         productCalories.put(228,"175");//Sierra Nevada Pale Ale 175
         productCalories.put(770,"126");//Goose Island 312 Urban Wheat 126



         

         

         
         

         try {
             String selectDraftBeer         = "SELECT pD.category, p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')),  "
                                            + " IF(pD.abv = 0.0, '', CONCAT((pD.abv * 1.25 * 16), ' cal.')), "
                                            + " IF(pD.category=2 ,1,2 ) craft, l.product FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + "  LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id "
                                            + " WHERE l.status = 'RUNNING'  AND b.location = ?  AND p.id NOT IN(4311,10661)  GROUP BY l.product ORDER BY craft, pD.category, p.name ;";
             String selectBottleBeer        = "SELECT  pD.category,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')) "
                                            + " IF(pD.abv = 0.0, '', CONCAT('Approx. ', (pD.abv * 1.25 * 16), ' cal. per pint')) "
                                            + "  FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product=p.id  "
                                            + " WHERE location=?  AND p.id NOT IN(4311,10661) ORDER by pD.category, p.name;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";

             int prodCount                  = 0;
             String title                   = "";
             StringBuilder prodDesc         = new StringBuilder();
             if(beerType == 1){
                 stmt                        = transconn.prepareStatement(selectBottleBeer);
                 stmt.setInt(1, location);
                 title                      = "Bottled Beer";
             } else {
                 stmt                        = transconn.prepareStatement(selectDraftBeer);
                 stmt.setInt(1, location);
                 title                      = "Draft Beer";
             }
             int oldCategory                = 0;
             rs                             = stmt.executeQuery();
             rs.last();
             int rowCount                   = rs.getRow();
             logger.debug("Row Count:" + rowCount);
             
             if(rowCount > 30) {
                 count                      = 18;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:10pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:8pt;  word-wrap:break-word; text-align:left;\"";
             } else if(rowCount > 24){
                 count                      = 15;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:12pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:9pt;  word-wrap:break-word; text-align:left;\"";
             } else if( rowCount > 16){
                 count                      = 12;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:14pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:10pt;  word-wrap:break-word; text-align:left;\"";
             } else {
                 count                      = 8;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:16pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:11pt;  word-wrap:break-word; text-align:left;\"";
             }

             //logger.debug("Count:" + count);
             prodDesc                       = new StringBuilder();
             rs.beforeFirst();
             while (rs.next()) {
                 int category               = rs.getInt(1);
                 if (category > 3) {
                     category               = 2;
                 }
                 String calories            = rs.getString(4);
                 int productId              = rs.getInt(6);
                 if(productCalories.get(productId)!=null && !productCalories.get(productId).equals("")) {
                     calories               = productCalories.get(productId) + " cal.";
                 }
                 
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(2));
                 String abv                 = rs.getString(3) ;
                 if(calories!=null && !calories.equals("")) {
                     abv                    +=  " | " + calories;
                 }
                 if(category != oldCategory || prodCount == 0) {
                     String categoryName    = "";
                     if(category == 1) {
                         categoryName       = "Domestic";
                         if (styleMenus.isEmpty()) {
                            prodDesc.append("</table>");
                            //logger.debug("product Count:" + prodCount);
                            styleMenus.add(prodDesc.toString());
                            prodDesc        = new StringBuilder();
                            prodCount       = 0;                             
                         }
                     } else if(category == 2) {
                         categoryName       = "Craft";
                     } else if(category == 3) {
                         categoryName       = "Import";
                     }
                     
                     if(prodCount == 0){
                         prodDesc.append("<table cellspacing=\"0\" cellpadding=\"0\" style=\"background-color:"
                                 + bgcolor + "\" height=\"400px\"  width=\"90%\" border=\"0\"><tr> "
                                 + " <td "+style1+">"+categoryName+"</td> </tr>");
                     } else {
                         prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                         prodDesc.append(" <tr><td "+style1+"><b>"+categoryName+"</b></td> </tr>");
                     }
                     prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                     oldCategory            = category;
                 }
                 prodDesc.append(" <tr><td "+style2+">"+productName+"  "+abv+"</td> </tr>");
                 prodDesc.append(" <tr><td "+style1+" height=\"3px\"></td> </tr>");

                 prodCount++;
                 //logger.debug(productName+ ": "+prodCount);

                 if (prodCount >= count){
                     prodDesc.append("</table>");
                     //logger.debug("product Count:" + prodCount);
                     styleMenus.add(prodDesc.toString());
                     prodDesc               = new StringBuilder();
                     prodCount              = 0;
                 }
             }

             if(prodCount > 0){
                 prodDesc.append("</table>");
                 styleMenus.add(prodDesc.toString());
             }
             
             prodCount                      = 0;
             String backgroundImage         = "Menu800.jpg";
             //logger.debug("Menu Size:" + styleMenus.size());
             for(int i=0; i < styleMenus.size(); i++) {
                 prodDesc                   = new StringBuilder();
                 String col1                = styleMenus.get(i);
                 String col2                = "";
                 if(i + 1 < styleMenus.size()) {
                     i++;
                     col2                   = styleMenus.get(i);
                 }
                 prodDesc.append("<table width=\"100%\"><tr><td height=\"150px\">&nbsp;</td></tr><tr><td align=\"center\">");
                 prodDesc.append("<table background=\"http://social.usbeveragenet.com:8080/fileUploader/Images/"+backgroundImage+"\" width=\"384px\" height=\"576px\">"
                         + "<tr><td height=\"40px\">&nbsp;</td><td>&nbsp;</td></tr>"
                         + "<tr><td height=\"500px\" width=\"50%\" valign=\"top\" align=\"center\">"+col1+"</td><td valign=\"top\" align=\"center\" width=\"50%\">"+col2+"</td></tr>");
                 prodDesc.append("</table></td></tr></table>");
                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
             close(rs);
            close(stmt); 
        }
        return menus;
     }
       
       public ArrayList<String> getBottledTemplate5 (int beerType, int location, int customer, int count, String color, String logo, Element toAppend, MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                       = "#000000",
         String  bgcolor                    = "#FFFFFF";


         try {
             String selectDraftBeer         = "SELECT pD.category, p.name,IF(pD.abv = 0.0, '', CONCAT('(',pD.abv,'%)')),if (pD.category=2 ,1,2 ) craft  FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + "  LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id "
                                            + " WHERE l.status = 'RUNNING'  AND b.location = ?  AND p.id NOT IN(4311,10661)  GROUP BY l.product ORDER BY craft, pD.category, p.name ;";
             String selectBottleBeer        = "SELECT  pD.category,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')) FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product=p.id  "
                                            + " WHERE location=?  AND p.id NOT IN(4311,10661) ORDER by pD.category, p.name;";
             String selectlogo              = "SELECT logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";

             int prodCount                  = 0;
             String title                   = "";
             StringBuilder prodDesc         = new StringBuilder();
             if(beerType == 1){
                 stmt                        = transconn.prepareStatement(selectBottleBeer);
                 stmt.setInt(1, location);
                 title                      = "Bottled Beer";
             } else {
                 stmt                        = transconn.prepareStatement(selectDraftBeer);
                 stmt.setInt(1, location);
                 title                      = "Draft Beer";
             }
             int oldCategory                = 0;
             rs                             = stmt.executeQuery();
             rs.last();
             int rowCount                   = rs.getRow();
             logger.debug("Row Count:" + rowCount);
             
             if(rowCount > 30) {
                 count                      = 18;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:23pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:15pt;  word-wrap:break-word; text-align:left;\"";
             } else if(rowCount > 24){
                 count                      = 15;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:25pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:17pt;  word-wrap:break-word; text-align:left;\"";
             } else if( rowCount > 16){
                 count                      = 12;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:27pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:20pt;  word-wrap:break-word; text-align:left;\"";
             } else {
                 count                      = 8;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:30pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:25pt;  word-wrap:break-word; text-align:left;\"";
             }

             //logger.debug("Count:" + count);
             prodDesc                       = new StringBuilder();
             rs.beforeFirst();
             while (rs.next()) {
                 int category               = rs.getInt(1);
                 if (category > 3) {
                     category               = 2;
                 }
                 
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(2));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(3));
                 if(category != oldCategory || prodCount == 0) {
                     String categoryName    = "";
                     if(category == 1) {
                         categoryName       = "Domestic";
                     } else if(category == 2) {
                         categoryName       = "Craft";
                     } else if(category == 3) {
                         categoryName       = "Import";
                     }
                     
                     if(prodCount == 0){
                         prodDesc.append("<table cellspacing=\"0\" cellpadding=\"0\" style=\"background-color:"+bgcolor+"\" height=\"850px\"  width=\"90%\" border=\"0\"><tr> "
                                 + " <td "+style1+">"+categoryName+"</td> </tr>");
                     } else {
                         prodDesc.append(" <tr><td "+style1+" height=\"20px\"></td> </tr>");
                         prodDesc.append(" <tr><td "+style1+"><b>"+categoryName+"</b></td> </tr>");
                     }
                     prodDesc.append(" <tr><td "+style1+" height=\"20px\"></td> </tr>");
                     oldCategory            = category;
                 }
                 prodDesc.append(" <tr><td "+style2+">"+productName+"  "+abv+"</td> </tr>");
                 prodDesc.append(" <tr><td "+style1+" height=\"10px\"></td> </tr>");

                 prodCount++;
                 //logger.debug(productName+ ": "+prodCount);

                 if (prodCount >= count){
                     prodDesc.append("</table>");
                     //logger.debug("product Count:" + prodCount);
                     styleMenus.add(prodDesc.toString());
                     prodDesc               = new StringBuilder();
                     prodCount              = 0;
                 }
             }

             if(prodCount > 0){
                 prodDesc.append("</table>");
                 styleMenus.add(prodDesc.toString());
             }
             
             prodCount                      = 0;
             String backgroundImage         = "Menu.jpg";
             if (customer == 66) {
                 backgroundImage            = "Menu800.jpg";
             }
             //logger.debug("Menu Size:" + styleMenus.size());
             for(int i=0; i < styleMenus.size(); i++) {
                 prodDesc                   = new StringBuilder();
                 String col1                = styleMenus.get(i);
                 String col2                = "";
                 if(i + 1 < styleMenus.size()) {
                     i++;
                     col2                   = styleMenus.get(i);
                 }
                 prodDesc.append("<table background=\"http://social.usbeveragenet.com:8080/fileUploader/Images/"+backgroundImage+"\" width=\"800px\" height=\"1200px\">"
                         + "<tr><td height=\"100px\">&nbsp;</td><td>&nbsp;</td></tr><tr>"
                         + "<td height=\"900px\" width=\"50%\" valign=\"top\" align=\"center\">"+col1+"</td><td valign=\"top\" align=\"center\" width=\"50%\">"+col2+"</td></tr>");
                 if (customer != 66) {
                     prodDesc.append("<tr><td align=\"left\" valign=\"bottom\">" +
                             "<img style=\" max-height:200px; max-width:300px;\" src=\""+logo+"\"/></td><td align=\"right\" valign=\"bottom\">" +
                             "<img style=\" max-height:200px; max-width:300px;\" src=\"http://bevmanager.net/Images/Assets/Generic/beerboardlogo.png\"/></td></tr></table>");
                 } else {
                     prodDesc.append("<tr><td height=\"200px\">&nbsp;</td><td>&nbsp;</td></tr>");
                 }
                 prodDesc.append("</table>");
                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
             close(rs);
            close(stmt);  
        }
        return menus;
     }




        public  ArrayList<String> getBottledTemplate4(int beerType, int location, int customer, int count, String color, String logo, Element toAppend , MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                       = "#000000",
         String  bgcolor                    = "#FFFFFF";
         logger.debug("Template 400x600dpi loading");

         try {
             String selectDraftBeer         = "SELECT pD.category, p.name,IF(pD.abv = 0.0, '', CONCAT('(',pD.abv,'%)')),if (pD.category=2 ,1,2 ) craft  FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + "  LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id "
                                            + " WHERE l.status = 'RUNNING'  AND b.location = ?  AND p.id NOT IN(4311,10661) GROUP BY l.product ORDER BY craft, pD.category, p.name ;";
             String selectBottleBeer        = "SELECT  pD.category,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')) FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product=p.id  "
                                            + " WHERE location=?  AND p.id NOT IN(4311,10661) ORDER by pD.category, p.name;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";

             int prodCount                  = 0;
             String title                   = "";
             StringBuilder prodDesc         = new StringBuilder();
             if(beerType == 1){
                 stmt                        = transconn.prepareStatement(selectBottleBeer);
                 stmt.setInt(1, location);
                 title                      = "Bottled Beer";
             } else {
                 stmt                        = transconn.prepareStatement(selectDraftBeer);
                 stmt.setInt(1, location);
                 title                      = "Draft Beer";
             }
             int oldCategory                = 0;
             rs                             = stmt.executeQuery();
             rs.last();
             int rowCount                   = rs.getRow();
             logger.debug("Row Count:" + rowCount);
             
             if(rowCount > 30) {
                 count                      = 18;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:10pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:8pt;  word-wrap:break-word; text-align:left;\"";
             } else if(rowCount > 24){
                 count                      = 15;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:12pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:9pt;  word-wrap:break-word; text-align:left;\"";
             } else if( rowCount > 16){
                 count                      = 12;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:14pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:10pt;  word-wrap:break-word; text-align:left;\"";
             } else {
                 count                      = 8;
                 style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:16pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:11pt;  word-wrap:break-word; text-align:left;\"";
             }

             //logger.debug("Count:" + count);
             prodDesc                       = new StringBuilder();
             rs.beforeFirst();
             while (rs.next()) {
                 int category               = rs.getInt(1);
                 if (category > 3) {
                     category               = 2;
                 }
                 
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(2));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(3));
                 if(category != oldCategory || prodCount == 0) {
                     String categoryName    = "";
                     if(category == 1) {
                         categoryName       = "Domestic";
                         if (styleMenus.isEmpty()) {
                            prodDesc.append("</table>");
                            //logger.debug("product Count:" + prodCount);
                            styleMenus.add(prodDesc.toString());
                            prodDesc        = new StringBuilder();
                            prodCount       = 0;                             
                         }
                     } else if(category == 2) {
                         categoryName       = "Craft";
                     } else if(category == 3) {
                         categoryName       = "Import";
                     }
                     
                     if(prodCount == 0){
                         prodDesc.append("<table cellspacing=\"0\" cellpadding=\"0\" style=\"background-color:"+bgcolor+"\" height=\"400px\"  width=\"90%\" border=\"0\"><tr> "
                                 + " <td "+style1+">"+categoryName+"</td> </tr>");
                     } else {
                         prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                         prodDesc.append(" <tr><td "+style1+"><b>"+categoryName+"</b></td> </tr>");
                     }
                     prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                     oldCategory            = category;
                 }
                 prodDesc.append(" <tr><td "+style2+">"+productName+"  "+abv+"</td> </tr>");
                 prodDesc.append(" <tr><td "+style1+" height=\"3px\"></td> </tr>");

                 prodCount++;
                 //logger.debug(productName+ ": "+prodCount);

                 if (prodCount >= count){
                     prodDesc.append("</table>");
                     //logger.debug("product Count:" + prodCount);
                     styleMenus.add(prodDesc.toString());
                     prodDesc               = new StringBuilder();
                     prodCount              = 0;
                 }
             }

             if(prodCount > 0){
                 prodDesc.append("</table>");
                 styleMenus.add(prodDesc.toString());
             }
             
             prodCount                      = 0;
             String backgroundImage         = "Menu800.jpg"; 
             //logger.debug("Menu Size:" + styleMenus.size());
             for(int i=0; i < styleMenus.size(); i++) {
                 prodDesc                   = new StringBuilder();
                 String col1                = styleMenus.get(i);
                 String col2                = "";
                 if(i + 1 < styleMenus.size()) {
                     i++;
                     col2                   = styleMenus.get(i);
                 }
                 prodDesc.append("<table width=\"100%\"><tr><td height=\"150px\">&nbsp;</td></tr><tr><td align=\"center\">");
                 prodDesc.append("<table background=\"http://social.usbeveragenet.com:8080/fileUploader/Images/"+backgroundImage+"\" width=\"384px\" height=\"576px\">"
                         + "<tr><td height=\"40px\">&nbsp;</td><td>&nbsp;</td></tr>"
                         + "<tr><td height=\"500px\" width=\"50%\" valign=\"top\" align=\"center\">"+col1+"</td><td valign=\"top\" align=\"center\" width=\"50%\">"+col2+"</td></tr>");
                  
                 prodDesc.append("</table></td></tr></table>");
                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
            close(rs);
            close(stmt);   
        }
        return menus;
     }
        
        
        public  ArrayList<String> getDescriptionTemplate(int beerType, int location, int customer, int count, String color, String logo, Element toAppend, MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();

         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                              = "#000000",
         String  bgcolor                    = "#FFFFFF";
         logger.debug("Description Template");
         try {
             String selectDraftBeer         = "SELECT DISTINCT  bS.majorStyle, pS.name,p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pDE.description, p.id, pSD.description FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            "  LEFT JOIN productDescription pD ON pD.product = p.id   LEFT JOIN productDesc pDE ON pDE.product = p.id  LEFT JOIN brewStyleMap bM ON bM.product = l.product"
                                            + "  LEFT JOIN productSet pS ON pS.id = bM.style LEFT JOIN beerStylesMap bSM ON bSM.productSet = bM.style"
                                            + "  LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = pS.name LEFT JOIN productSetDescription pSD ON pSD.productSet=pS.id "
                                            + "  WHERE l.status = 'RUNNING' AND p.id NOT IN(4311,10661) AND b.location = ?  GROUP BY l.product"
                                            + "  ORDER BY pS.name, p.name;";
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";
             String style3                  = "";
             String style4                  = "";

             stmt                           = transconn.prepareStatement(selectlogo);
             stmt.setInt(1,location);
             rs                             = stmt.executeQuery();
             if(rs.next()){
                 logo                       = HandlerUtils.nullToString(rs.getString(1), logo);
             }
             logo                           = "http://bevmanager.net/Images/Location_logo/"+logo.replaceAll(" ", "%20");
             String bblogo                  = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/BeerBoardLogo70.jpg";
             String nowontap                = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/NowOnTap.jpg";
             String blackline               = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/BlackLine.jpg";
             int prodCount                  = 0;
             String title                   = "";
             String styleHeader             = "style=\" color:#000000; font-family:'Avantgarde'; font-size:20pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
             style1                         = "style=\" color: #000000; font-family:'Avantgarde'; font-size:15pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
             style2                         = "style=\" color: #000000; font-family:'Avantgarde'; font-size:11pt;  word-wrap:break-word; text-align:left;\"";
             style4                         = "style=\" color: #000000; font-family:'Avantgarde'; font-size:11pt;  word-wrap:break-word; text-align:right;\"";
             style3                         = "style=\" color: #000000; font-family:'Avantgarde'; font-size:10pt;  word-wrap:break-word; text-align:right;\"";

             StringBuilder menuDesc         = new StringBuilder();
             stmt                           = transconn.prepareStatement(selectDraftBeer);
             stmt.setInt(1, location);
             menuDesc                       = new StringBuilder();
             rs                             = stmt.executeQuery();
             String preStyle                = "";
             int tableRow                   = -1, pageCount = 1;
             while (rs.next()) {
                 if(tableRow == -1){
                     menuDesc.append("<table cellspacing=\"0\" cellpadding=\"0\" width=\"100%\" border=\"0\"> ");
                     tableRow++;
                 }
                 
                 String majorStyle          = HandlerUtils.nullToEmpty(rs.getString(1));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(2));
                 String name                = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String desc                = HandlerUtils.nullToEmpty(rs.getString(5));
                 int product                = rs.getInt(6);
                 String styleDesc           = HandlerUtils.nullToEmpty(rs.getString(7));
                 if (abv.length() > 1) {
                     abv                    = abv + " ABV";
                 }
                 StringBuilder prodDesc     = new StringBuilder();

                BreakIterator bi            = BreakIterator.getSentenceInstance();
		bi.setText(desc);
                String descClean            = "";
		int index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    desc.substring(index, bi.current());
		if(bi.current() < 250) {
                    descClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Sentence: "+ index+":"+ sentence.length());
		}

                bi                          = BreakIterator.getSentenceInstance();
		bi.setText(styleDesc);
                String styleDescClean       = "";
		index                       = 0;
		while (bi.next() != BreakIterator.DONE) {
                    String sentence         =    styleDesc.substring(index, bi.current());
                    if(bi.current() < 250) {
                        styleDescClean               +=sentence;
                    }
                    index                   = bi.current();
		//logger.debug("Style Sentence: "+ index+":"+ sentence.length());
		}


                if(descClean.length() < 4){
                    desc                    = styleDescClean;
                } else {
                    desc                    = descClean;
                }
                //logger.debug("Name:"+ name+" Desc Length:"+desc.length());
                 String price               = HandlerUtils.nullToEmpty(productPrices.get(product));
                 prodDesc.append("<table style='width:350px; height: 130px;' border=\"0\"> <tr><td><div class='ptextfill' style='width:350px; height: 20px;'>"
                                             + "<span style=\" color: #000000; font-family:'Arial';  text-align: left; font-weight:bold; word-wrap:break-word; \">"+name+"</span></div></td></tr>"
                                             + "<tr><td><table width=\"100%\" border=\"0\"><tr><td " + style2 + ">" + style + " " + abv + "</td>" +
                                             "<td "+style4+">"+price+"</td></tr></table></td></tr>"
                                             + "<tr><td><div class='dtextfill' style='width:350px; height:70px;'>"
                                             + "<span style=\"  color: "+color+"; font-family:'Avantgarde'; text-align: justify; text-justify: inter-word; word-wrap:break-word; \">"+desc+"</span></div></td></tr></table>");
                 /*if(!preStyle.equals(majorStyle) || tableRow==0) {
                      if(prodCount > 0) {
                          menuDesc.append(" <td width=\"50%\"> </td></tr>");
                          prodCount          =0;
                          tableRow++;
                     }
                     menuDesc.append(" <tr><td colspan=\"2\"><div "+styleHeader+" align=\"center\">"+majorStyle+"</div></td></tr>");
                     menuDesc.append(" <tr><td colspan=\"2\"><div "+styleHeader+" align=\"center\"></div></td></tr>");
                     if(tableRow== 0) {
                         tableRow++;
                     }
                 }*/
                 if(prodCount == 0) {
                     menuDesc.append(" <tr><td valign=\"top\" width=\"50%\">"+prodDesc.toString()+"</td>");
                     prodCount++;

                 } else {
                     menuDesc.append(" <td valign=\"top\" width=\"50%\">"+prodDesc.toString()+"</td></tr>");
                     prodCount          =0;
                     tableRow++;

                 }

                 preStyle                   = majorStyle;

                 if(tableRow >= (pageCount == 1 ? 7 : 8)) {
                     if(prodCount > 0) {
                         menuDesc.append(" <td width=\"50%\"> </td></tr>");
                         prodCount          = 0;
                         tableRow++;
                     }
                     if (pageCount == 1) { menuDesc.append(" <tr><td width=\"50%\" style=\"height: 40px\">&nbsp;</td><td width=\"50%\"></td></tr>"); }
                     menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     tableRow               = -1;
                     pageCount++;
                 }

             }

             if(tableRow > 0) {
                 String pageHeight          = "130px;";
                 if(prodCount > 0) {
                     menuDesc.append(" <td width=\"50%\">&nbsp;</td></tr>");
                     prodCount              = 0;
                     tableRow++;
                 }
                 for (int i = 0; i < ((pageCount == 1 ? 7 : 8) - tableRow); i++) {
                     menuDesc.append("<tr><td width=\"50%\" style=\"height: " + pageHeight + "\">&nbsp;</td><td width=\"50%\"></td></tr>");
                 }
                 if(pageCount == 1) {
                     menuDesc.append("<tr><td width=\"50%\" style=\"height: 40px\">&nbsp;</td><td width=\"50%\"></td></tr>");
                 }
                 menuDesc.append("</table>");
                 styleMenus.add(menuDesc.toString());
                 menuDesc                   = new StringBuilder();
                 tableRow                   = 0;
             }
             //logger.debug("Size:" + styleMenus.size());

             StringBuilder prodDesc          = new StringBuilder();
             for(int i = 0; i < styleMenus.size(); i++) {
                 prodDesc                   = new StringBuilder();
                 if(menus.size()==0) {
                     prodDesc.append("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"></script>"
                                             + "<script src=\"http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/js/jquery.textfill.min.js\"></script>"
                                             + "<script type=\"text/javascript\">$(document).ready(function() {"
                                             + "$('.dtextfill').textfill({ maxFontPixels: 12 });});</script>  <script type=\"text/javascript\">"
                                             + "$(document).ready(function(){$('.ptextfill').textfill({ maxFontPixels: 18 });});</script>");
                      prodDesc.append(" <style>"
                         + " @font-face {font-family: Avantgarde;  src: url(http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Avantgarde.ttf) format(\"truetype\"); }  "                         
                         + " </style>");
                 }
                 prodDesc.append("<table width=\"100%\">" +
                                            (i == 0 ?"<tr><td height='70px'><table width=\"100%\"><tr><td align=\"left\"><img src=\"" + logo + "\" style=\"max-height:70px; max-width:200px\"></td>" +
                                            "<td align=\"right\"><img src=\"" + nowontap + "\" style=\"max-height:70px;\"></td></tr></table></td></tr>" : "") +
                                            "<tr><td height='20px'></td></tr>" +
                                            "<tr><td>"+styleMenus.get(i)+"</td></tr>" +
                                            "<tr><td align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></td></tr></table>");
                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        } finally {
             close(rs);
            close(stmt);
        }
        return menus;
     }

        public  ArrayList<String> getDescriptionFeatureTemplate(int beerType, int location, int customer, int count, String color, String logo, Element toAppend, MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();

         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                            = "#000000",
         String  bgcolor                    = "#FFFFFF";

         logger.debug("Description Kiabacca Feature Template");
         try {
             String selectDraftBeer         = "SELECT DISTINCT  bS.majorStyle, pS.name,p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pDE.description, p.id, pSD.description FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            "  LEFT JOIN productDescription pD ON pD.product = p.id   LEFT JOIN productDesc pDE ON pDE.product = p.id  LEFT JOIN brewStyleMap bM ON bM.product = l.product"
                                            + "  LEFT JOIN productSet pS ON pS.id = bM.style LEFT JOIN beerStylesMap bSM ON bSM.productSet = bM.style"
                                            + "  LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = pS.name LEFT JOIN productSetDescription pSD ON pSD.productSet=pS.id "
                                            + "  WHERE l.status = 'RUNNING' AND p.id NOT IN(4311,10661) AND b.location = ?  GROUP BY l.product"
                                            + "  ORDER BY   bS.majorStyle;";
             String SelectFeatureBeer       ="SELECT DISTINCT  bS.majorStyle, pS.name,p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pDE.description, p.id, pSD.description FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id =l.product"
                                            + " LEFT JOIN productDescription pD ON pD.product = p.id   LEFT JOIN productDesc pDE ON pDE.product = p.id  LEFT JOIN brewStyleMap bM ON bM.product = l.product"
                                            + " LEFT JOIN productSet pS ON pS.id = bM.style LEFT JOIN beerStylesMap bSM ON bSM.productSet = bM.style LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = pS.name LEFT JOIN productSetDescription pSD ON pSD.productSet=pS.id "
                                            + " WHERE   p.id NOT IN(4311,10661) AND b.location = ? AND l.advertise= 1  GROUP BY l.product ORDER BY   bS.majorStyle;";
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";


             int prodCount                  = -1;
             String title                   = "";
             count                      = 8;
             String styleHeader         = "style=\" color: "+color+"; font-family:'AvantgardeBold'; font-size:14pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
             String styleName           = "style=\" color: "+color+"; font-family:'Arial'; font-size:12pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
             style1                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:10pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
             style2                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:8pt;  word-wrap:break-word; text-align:left;\"";
             String style3              = "style=\" color: #000000; font-family:'Avantgarde'; font-size:10pt;  word-wrap:break-word; text-align:right;\"";


             StringBuilder menuDesc         = new StringBuilder();
             String preStyle                = "";
             int tableRow                   = -1;
             menuDesc                       = new StringBuilder();
             boolean createTable            = true;
             int countLimit                 = 10;
             stmt                        = transconn.prepareStatement(SelectFeatureBeer);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 String majorStyle          = HandlerUtils.nullToEmpty(rs.getString(1));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(2));
                 String name                = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String desc                = HandlerUtils.nullToEmpty(rs.getString(5));
                 int product                = rs.getInt(6);
                 String styleDesc           = HandlerUtils.nullToEmpty(rs.getString(7));
                 StringBuilder prodDesc     = new StringBuilder();

                BreakIterator bi = BreakIterator.getSentenceInstance();
		bi.setText(desc);
                String descClean            = "";
		int index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    desc.substring(index, bi.current());
		if(bi.current() <250) {
                    descClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Sentence: "+ index+":"+ sentence.length());
		}


                bi = BreakIterator.getSentenceInstance();
		bi.setText(styleDesc);
                String styleDescClean            = "";
		index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    styleDesc.substring(index, bi.current());
		if(bi.current() <250) {
                    styleDescClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Style Sentence: "+ index+":"+ sentence.length());
		}


                if(descClean.length() <4){
                    desc                    = styleDescClean;
                } else {
                    desc                    = descClean;
                }
                //logger.debug("Name:"+ name+" Desc Length:"+desc.length());
                 String price               = HandlerUtils.nullToEmpty(productPrices.get(product));
                 prodDesc.append("<table border=\"0\"> <tr><td "+style1+" width=\"700px\"> <span "+ styleName+" >"+name+"</span><span "+ styleName+"> - </span> "+abv+" ABV<span "+ styleName+"> - </span>"+style+" <br/> <div class='dtextfill' style='width:100%;height:30px;'>"
                         + "<span style=\"  color: "+color+"; font-family:'Avantgarde';  text-align: justify;    text-justify: inter-word; word-wrap:break-word; \">"+desc+"</span></div></td>"
                         + " <td  width=\"150px\" align=\"right\"> "+price+"</td> </tr></table>");
                 if(createTable){
                     menuDesc.append("<table border=\"0\"><tr>"
                             + "<td width=\"35%\" ><hr style=\"height:10px;   border:none;color:#333;background-color:#333;\" /></td>"
                                     + "<td "+styleHeader+">Featured</td><td width=\"35%\"><hr style=\"height:10px;    border:none;color:#333;background-color:#333;\" /> </td></tr>");
                     createTable= false;
                 }
                 if(!preStyle.equals(majorStyle) || tableRow==0) {
                      if(prodCount > 0) {
                        //  menuDesc.append(" <td colspan=\"3\"> </td></tr>");

                     }
                     menuDesc.append(" <tr><td "+styleHeader+" valign=\"midde\" align\"center\" colspan=\"3\">"+majorStyle+"</td></tr>");
                     //prodCount++;
                 }

                 menuDesc.append("<tr><td  colspan=\"3\">"+prodDesc.toString()+"</td></tr>"
                         + "<tr><td colspan=\"3\"> <hr style=\"border-top: dashed 2px;\" /></td></tr>");
                 prodCount++;
                 preStyle                   = majorStyle;
                 if(prodCount >= 9) {

                     menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     prodCount               = -1;
                     createTable            = true;
                 }
             }

             int draftCount                 = -1;
             stmt                           = transconn.prepareStatement(selectDraftBeer);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 String majorStyle          = HandlerUtils.nullToEmpty(rs.getString(1));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(2));
                 String name                = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String desc                = HandlerUtils.nullToEmpty(rs.getString(5));
                 int product                = rs.getInt(6);
                 String styleDesc           = HandlerUtils.nullToEmpty(rs.getString(7));
                 StringBuilder prodDesc     = new StringBuilder();

                BreakIterator bi = BreakIterator.getSentenceInstance();
		bi.setText(desc);
                String descClean            = "";
		int index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    desc.substring(index, bi.current());
		if(bi.current() <250) {
                    descClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Sentence: "+ index+":"+ sentence.length());
		}


                bi = BreakIterator.getSentenceInstance();
		bi.setText(styleDesc);
                String styleDescClean            = "";
		index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    styleDesc.substring(index, bi.current());
		if(bi.current() <250) {
                    styleDescClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Style Sentence: "+ index+":"+ sentence.length());
		}


                if(descClean.length() <4){
                    desc                    = styleDescClean;
                } else {
                    desc                    = descClean;
                }
                //logger.debug("Name:"+ name+" Desc Length:"+desc.length());
                 String price               = HandlerUtils.nullToEmpty(productPrices.get(product));
                 prodDesc.append("<table border=\"0\"> <tr><td "+style1+" width=\"700px\"> <span "+ styleName+">"+name+" - </span> "+abv+" ABV<span "+ styleName+"> - </span>"+style+" <br/> <div class='dtextfill' style='width:100%;height:30px;'>"
                         + "<span style=\"  color: "+color+"; font-family:'Avantgarde';  text-align: justify;    text-justify: inter-word; word-wrap:break-word; \">"+desc+"</span></div></td>"
                         + " <td  width=\"150px\" align=\"right\"> "+price+"</td> </tr></table>");
                 if(prodCount == -1 || draftCount==-1){
                     if(createTable) {
                         menuDesc.append("<table border=\"0\">");
                         createTable = false;
                         prodCount++;
                     } else {
                          prodCount++;
                     }
                     menuDesc.append("<tr><td width=\"35%\"><hr style=\"height:10px;   border:none;color:#333;background-color:#333;\" /></td>"
                                     + "<td  "+styleHeader+">Now ON TAP</td><td width=\"35%\" ><hr style=\"height:10px;    border:none;color:#333;background-color:#333;\" /> </td></tr>");
                     tableRow++;

                 }
                 if(!preStyle.equals(majorStyle) || tableRow==0) {
                      if(prodCount > 0) {
                          //menuDesc.append(" <td colspan=\"3\"> </td></tr>");
                           
                     }
                     // prodCount++;
                     menuDesc.append(" <tr><td "+styleHeader+" valign=\"midde\" align\"center\" colspan=\"3\">"+majorStyle+"</td></tr>");
                     if(tableRow== 0) {
                         tableRow++;
                     }
                 }
                
                     menuDesc.append("<tr><td  colspan=\"3\">"+prodDesc.toString()+"<hr style=\"border-top: dashed 2px;\" /></td></tr>");
                     prodCount++;
                     draftCount++;

                 

                 preStyle                   = majorStyle;
                 
                 if(styleMenus.size() > 0) {
                     countLimit             = 12;
                 }

                 if(prodCount>=countLimit) {
                      
                     menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     prodCount               = -1;
                     createTable            = true;
                     preStyle               = "";
                 }



             }

             if(prodCount > -1) {
                 String heightLimit = "height=\"75px\""; 
                 if(prodCount >0 && prodCount < 4) {
                     heightLimit = "height=\"60px\""; 
                 } else if (prodCount >3 && prodCount < 6)  {
                     heightLimit = "height=\"55px\""; 
                 } else  if (prodCount >5 && prodCount < 7){
                     heightLimit = "height=\"52px\""; 
                 } else {
                     heightLimit = "height=\"50px\""; 
                 }
                 for(int i=prodCount;i<=countLimit;i++) {
                     menuDesc.append("<tr><td "+heightLimit+" colspan=\"3\"></td></tr>");
                     prodCount++;
                 }
                  menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     prodCount               = 0;

             }
             logger.debug("Size:"+styleMenus.size());
             String bblogo                  = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/BeerBoardLogo70.jpg";
             StringBuilder prodDesc                   = new StringBuilder();
             int size                       = styleMenus.size();
             for(int i=0; i < styleMenus.size(); i++) {
                  prodDesc                   = new StringBuilder();
                 if(menus.size()==0) {                     
                      prodDesc.append(" <style>"
                         + " @font-face {font-family: Avantgarde;  src: url(http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Avantgarde.ttf) format(\"truetype\"); } "
                              + "@font-face {font-family: AvantgardeBold;  src: url('http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/avantgarde-bold.ttf') format(\"truetype\"); } "                         
                         + " </style>");
                 }
                
                 prodDesc.append("<div><div style=\"vertical-align: top;\"><table   border=\"0\" width=\"100%\">");
                  if(i ==0  ) {
                      prodDesc.append(" <tr><td align=\"left\"><img src=\""+logo+"\" style=\"max-height:70px; max-width:200px\"></td></tr>");
                  } else {
                      
                  }
                  prodDesc.append("<tr> <td>"+styleMenus.get(i)+"</td></tr>"); 
                       
                         if(i ==0) { 
                             //prodDesc.append("<tr><td align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></td></tr></table>");
                             //prodDesc.append("<div  style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\" align=\"right\" "+style3+">Our draft list is mobile<img style=\"max-height:20px;\" src=\"" + bblogo + "\"></div>");                            
                               prodDesc.append("</table></div> </div>");
                            // prodDesc.append("<div style=\"vertical-align: top; align:right;\"><div align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></div></div></div>");
                         } else {
                             // prodDesc.append(" <tr><td height=\"150px\" ></td></tr>");
                              prodDesc.append("</table></div> </div>");
                            // prodDesc.append("<div style=\"vertical-align: top; align:right;\"><div align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></div></div></div>");
                         }


                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
             close(rs);
            close(stmt);
        }
        return menus;
     }

        public  ArrayList<String> getPrintableMenuTemplate9(int beerType, int location, int customer, int count, String color, String logo, Element toAppend, MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();

         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                            = "#000000",
         String  bgcolor                    = "#FFFFFF";

         logger.debug("Kiabacca Feature Template");
         try {
             String selectDraftBeer         = "SELECT DISTINCT  bS.majorStyle, pS.name,p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pDE.description, p.id, pSD.description FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id = l.product " +
                                            "  LEFT JOIN productDescription pD ON pD.product = p.id   LEFT JOIN productDesc pDE ON pDE.product = p.id  LEFT JOIN brewStyleMap bM ON bM.product = l.product"
                                            + "  LEFT JOIN productSet pS ON pS.id = bM.style LEFT JOIN beerStylesMap bSM ON bSM.productSet = bM.style"
                                            + "  LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = pS.name LEFT JOIN productSetDescription pSD ON pSD.productSet=pS.id "
                                            + "  WHERE l.status = 'RUNNING' AND p.id NOT IN(4311,10661) AND b.location = ?  GROUP BY l.product"
                                            + "  ORDER BY   bS.majorStyle;";
             String SelectFeatureBeer       ="SELECT DISTINCT  bS.majorStyle, pS.name,p.name, IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')), pDE.description, p.id, pSD.description FROM line l LEFT JOIN bar b ON b.id = l.bar LEFT JOIN product p ON p.id =l.product"
                                            + " LEFT JOIN productDescription pD ON pD.product = p.id   LEFT JOIN productDesc pDE ON pDE.product = p.id  LEFT JOIN brewStyleMap bM ON bM.product = l.product"
                                            + " LEFT JOIN productSet pS ON pS.id = bM.style LEFT JOIN beerStylesMap bSM ON bSM.productSet = bM.style LEFT JOIN beerStyles bS ON bS.id =  bSM.style LEFT JOIN styleLogo sL ON sL.style = pS.name LEFT JOIN productSetDescription pSD ON pSD.productSet=pS.id "
                                            + " WHERE   p.id NOT IN(4311,10661) AND b.location = ? AND l.advertise= 1  GROUP BY l.product ORDER BY   bS.majorStyle;";
             String selectPrices            = "SELECT i.product, s.name, CONCAT('$', iP.value) FROM inventoryPrices iP LEFT JOIN inventory i " +
                                            " ON i.id = iP.inventory LEFT JOIN beverageSize s ON s.id = iP.size WHERE i.location = ? AND s.id <> 'null' " +
                                            " GROUP BY i.product ORDER BY i.product, iP.value;";

             HashMap<Integer, String> productPrices
                                            = new HashMap<Integer, String>();
             stmt                           = transconn.prepareStatement(selectPrices);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 int productId              = rs.getInt(1);
                 String price               = HandlerUtils.nullToEmpty(rs.getString(2)) + " - " + HandlerUtils.nullToEmpty(rs.getString(3));
                 productPrices.put(productId, price);
             }
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";


             int prodCount                  = -1;
             String title                   = "";
             count                      = 8;
             String styleHeader         = "style=\" color: "+color+"; font-family:'AvantgardeBold'; font-size:14pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
             String styleName           = "style=\" color: "+color+"; font-family:'Arial'; font-size:12pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
             String style1                  = "";
             String style2                  = "";
             String style3              = "style=\" color: #000000; font-family:'Avantgarde'; font-size:10pt;  word-wrap:break-word; text-align:right;\"";


             StringBuilder menuDesc         = new StringBuilder();
             String preStyle                = "";
             int tableRow                   = -1;
             menuDesc                       = new StringBuilder();
             boolean createTable            = true;
             int countLimit                 = 10;
             stmt                        = transconn.prepareStatement(SelectFeatureBeer);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 String majorStyle          = HandlerUtils.nullToEmpty(rs.getString(1));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(2));
                 String name                = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String desc                = HandlerUtils.nullToEmpty(rs.getString(5));
                 int product                = rs.getInt(6);
                 String styleDesc           = HandlerUtils.nullToEmpty(rs.getString(7));
                 StringBuilder prodDesc     = new StringBuilder();

                BreakIterator bi = BreakIterator.getSentenceInstance();
		bi.setText(desc);
                String descClean            = "";
		int index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    desc.substring(index, bi.current());
		if(bi.current() <250) {
                    descClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Sentence: "+ index+":"+ sentence.length());
		}


                bi = BreakIterator.getSentenceInstance();
		bi.setText(styleDesc);
                String styleDescClean            = "";
		index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    styleDesc.substring(index, bi.current());
		if(bi.current() <250) {
                    styleDescClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Style Sentence: "+ index+":"+ sentence.length());
		}


                if(descClean.length() <4){
                    desc                    = styleDescClean;
                } else {
                    desc                    = descClean;
                }
                //logger.debug("Name:"+ name+" Desc Length:"+desc.length());
                 String price               = HandlerUtils.nullToEmpty(productPrices.get(product));
                 color                      = (price.contains("9oz") ? "#CC0000;" : "#000000;");
                 style1                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:10pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:8pt;  word-wrap:break-word; text-align:left;\"";
                 styleName                  = "style=\" color: "+color+"; font-family:'Arial'; font-size:12pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                 //logger.debug("c: " + color);
                 prodDesc.append("<table border=\"0\"> <tr><td "+style1+" width=\"700px\"> <span "+ styleName+" >"+name+"</span><span "+ styleName+"> - </span> "+abv+" ABV<span "+ styleName+"> - </span>"+style+" <br/> <div class='dtextfill' style='width:100%;height:30px;'>"
                                            + "<span style=\" color: "+color+" font-family:'Avantgarde';  text-align: justify;    text-justify: inter-word; word-wrap:break-word; \">"+desc+"</span></div></td>"
                                            + " <td  width=\"150px\" align=\"right\"> "+price+"</td> </tr></table>");
                 if(createTable){
                     menuDesc.append("<table border=\"0\"><tr>"
                                            + "<td width=\"35%\" ><hr style=\"height:10px;   border:none;color:#333; background-color:#333;\" /></td>"
                                            + "<td "+styleHeader+">Featured</td><td width=\"35%\"><hr style=\"height:10px;    border:none;color:#333;background-color:#333;\" /> </td></tr>");
                     createTable= false;
                 }
                 if(!preStyle.equals(majorStyle) || tableRow==0) {
                      if(prodCount > 0) {
                        //  menuDesc.append(" <td colspan=\"3\"> </td></tr>");

                     }
                     menuDesc.append(" <tr><td "+styleHeader+" valign=\"midde\" align\"center\" colspan=\"3\">"+majorStyle+"</td></tr>");
                     //prodCount++;
                 }

                 menuDesc.append("<tr><td  colspan=\"3\">"+prodDesc.toString()+"</td></tr>"
                         + "<tr><td colspan=\"3\"> <hr style=\"border-top: dashed 2px;\" /></td></tr>");
                 prodCount++;
                 preStyle                   = majorStyle;
                 if(prodCount >= 10) {

                     menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     prodCount               = -1;
                     createTable            = true;
                 }
             }

             int draftCount                 = -1;
             stmt                           = transconn.prepareStatement(selectDraftBeer);
             stmt.setInt(1, location);
             rs                             = stmt.executeQuery();
             while (rs.next()) {
                 String majorStyle          = HandlerUtils.nullToEmpty(rs.getString(1));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(2));
                 String name                = HandlerUtils.nullToEmpty(rs.getString(3));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(4));
                 String desc                = HandlerUtils.nullToEmpty(rs.getString(5));
                 int product                = rs.getInt(6);
                 String styleDesc           = HandlerUtils.nullToEmpty(rs.getString(7));
                 StringBuilder prodDesc     = new StringBuilder();

                BreakIterator bi = BreakIterator.getSentenceInstance();
		bi.setText(desc);
                String descClean            = "";
		int index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    desc.substring(index, bi.current());
		if(bi.current() <250) {
                    descClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Sentence: "+ index+":"+ sentence.length());
		}


                bi = BreakIterator.getSentenceInstance();
		bi.setText(styleDesc);
                String styleDescClean            = "";
		index = 0;
		while (bi.next() != BreakIterator.DONE) {
		String sentence             =    styleDesc.substring(index, bi.current());
		if(bi.current() <250) {
                    styleDescClean               +=sentence;
                }
		index = bi.current();
		//logger.debug("Style Sentence: "+ index+":"+ sentence.length());
		}


                if(descClean.length() <4){
                    desc                    = styleDescClean;
                } else {
                    desc                    = descClean;
                }
                //logger.debug("Name:"+ name+" Desc Length:"+desc.length());
                 String price               = HandlerUtils.nullToEmpty(productPrices.get(product));
                 color                      = (price.contains("9oz") ? "#CC0000" : "#000000");
                 style1                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:10pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
                 style2                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:8pt;  word-wrap:break-word; text-align:left;\"";
                 styleName                  = "style=\" color: "+color+"; font-family:'Arial'; font-size:12pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
                 prodDesc.append("<table border=\"0\"> <tr><td "+style1+" width=\"700px\"> <span "+ styleName+">"+name+" - </span> "+abv+" ABV<span "+ styleName+"> - </span>"+style+" <br/> <div class='dtextfill' style='width:100%;height:30px;'>"
                         + "<span style=\" color: "+color+"; font-family:'Avantgarde';  text-align: justify;    text-justify: inter-word; word-wrap:break-word; \">"+desc+"</span></div></td>"
                         + " <td  width=\"150px\" align=\"right\"> "+price+"</td> </tr></table>");
                 if(prodCount == -1 || draftCount==-1){
                     if(createTable) {
                         menuDesc.append("<table border=\"0\">");
                         createTable = false;
                         prodCount++;
                     } else {
                          prodCount++;
                     }
                     menuDesc.append("<tr><td width=\"35%\"><hr style=\"height:10px;   border:none;color:#333;background-color:#333;\" /></td>"
                                     + "<td  "+styleHeader+">Now ON TAP</td><td width=\"35%\" ><hr style=\"height:10px;    border:none;color:#333;background-color:#333;\" /> </td></tr>");
                     tableRow++;

                 }
                 if(!preStyle.equals(majorStyle) || tableRow==0) {
                      if(prodCount > 0) {
                          //menuDesc.append(" <td colspan=\"3\"> </td></tr>");

                     }
                     // prodCount++;
                     menuDesc.append(" <tr><td "+styleHeader+" valign=\"midde\" align\"center\" colspan=\"3\">"+majorStyle+"</td></tr>");
                     if(tableRow== 0) {
                         tableRow++;
                     }
                 }

                     menuDesc.append("<tr><td  colspan=\"3\">"+prodDesc.toString()+"<hr style=\"border-top: dashed 2px;\" /></td></tr>");
                     prodCount++;
                     draftCount++;



                 preStyle                   = majorStyle;

                 if(styleMenus.size() > 0) {
                     countLimit             = 12;
                 }

                 if(prodCount>=countLimit) {

                     menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     prodCount               = -1;
                     createTable            = true;
                     preStyle               = "";
                 }



             }

             if(prodCount > -1) {
                 String heightLimit = "height=\"75px\"";
                 if(prodCount >0 && prodCount < 4) {
                     heightLimit = "height=\"60px\"";
                 } else if (prodCount >3 && prodCount < 6)  {
                     heightLimit = "height=\"55px\"";
                 } else  if (prodCount >5 && prodCount < 7){
                     heightLimit = "height=\"52px\"";
                 } else {
                     heightLimit = "height=\"50px\"";
                 }
                 for(int i=prodCount;i<=countLimit;i++) {
                     menuDesc.append("<tr><td "+heightLimit+" colspan=\"3\"></td></tr>");
                     prodCount++;
                 }
                  menuDesc.append("</table>");
                     styleMenus.add(menuDesc.toString());
                     menuDesc               = new StringBuilder();
                     prodCount               = 0;

             }
             logger.debug("Size:"+styleMenus.size());
             String bblogo                  = "http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/BeerBoardLogo70.jpg";
             StringBuilder prodDesc                   = new StringBuilder();
             int size                       = styleMenus.size();
             for(int i=0; i < styleMenus.size(); i++) {
                  prodDesc                   = new StringBuilder();
                 if(menus.size()==0) {
                      prodDesc.append(" <style>"
                         + " @font-face {font-family: Avantgarde;  src: url(http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Avantgarde.ttf) format(\"truetype\"); } "
                              + "@font-face {font-family: AvantgardeBold;  src: url('http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/avantgarde-bold.ttf') format(\"truetype\"); } "
                         + " </style>");
                 }

                 prodDesc.append("<div><div style=\"vertical-align: top;\"><table   border=\"0\" width=\"100%\">");
                  if(i ==0  ) {
                      prodDesc.append(" <tr><td align=\"left\"><img src=\"" + logo + "\" style=\"max-height:70px; max-width:200px\"></td></tr>");
                  } else {

                  }
                  prodDesc.append("<tr> <td>"+styleMenus.get(i)+"</td></tr>");

                         if(i ==0) {
                             //prodDesc.append("<tr><td align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></td></tr></table>");
                             //prodDesc.append("<div  style=\"position:absolute; float:right; right:20px; bottom:10px; z-index:2;\" align=\"right\" "+style3+">Our draft list is mobile<img style=\"max-height:20px;\" src=\"" + bblogo + "\"></div>");
                               prodDesc.append("</table></div> </div>");
                            // prodDesc.append("<div style=\"vertical-align: top; align:right;\"><div align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></div></div></div>");
                         } else {
                             // prodDesc.append(" <tr><td height=\"150px\" ></td></tr>");
                              prodDesc.append("</table></div> </div>");
                            // prodDesc.append("<div style=\"vertical-align: top; align:right;\"><div align=\"right\" "+style3+">Our draft list is mobile <img style=\"max-height:20px;\" src=\"" + bblogo + "\"></div></div></div>");
                         }


                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
              close(rs);
            close(stmt); 
        }
        return menus;
     }
        
        
         public  ArrayList<String> getCWOCTemplate(int beerType, int location, int customer, int count, String color, String logo, Element toAppend, MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //String bgcolor                     = "#336699";
         color                              = "#000000";
         logger.debug("Template CW-OC loading");

         try {
             String selectDraftBeer         = "SELECT pD.category, p.name,IF(pD.abv = 0.0, '', CONCAT('(',pD.abv,'%)')),pS.name,pD.origin,if (pD.category=2 ,1,2 ) craft  FROM line l LEFT JOIN bar b ON b.id = l.bar"
                                            + " LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id "
                                            +" LEFT JOIN brewStyleMap bM ON bM.product = l.product  LEFT JOIN productSet pS ON pS.id = bM.style "
                                            + " WHERE l.status = 'RUNNING'  AND b.location = ?  AND p.id NOT IN(4311,10661) GROUP BY l.product ORDER BY craft, pD.category DESC, p.name ;";
             String selectBottleBeer        = "SELECT  pD.category,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')) FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product=p.id  "
                                            + " WHERE location=?  AND p.id NOT IN(4311,10661) ORDER by pD.category, p.name;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";

             int prodCount                  = 0;
             String title                   = "";
             StringBuilder prodDesc         = new StringBuilder();
             if(beerType == 1){
                 stmt                        = transconn.prepareStatement(selectBottleBeer);
                 stmt.setInt(1, location);
                 title                      = "Bottled Beer";
             } else {
                 stmt                        = transconn.prepareStatement(selectDraftBeer);
                 stmt.setInt(1, location);
                 title                      = "Draft Beer";
             }
             int oldCategory                = 0;
             rs                             = stmt.executeQuery();
             rs.last();
             int rowCount                   = rs.getRow();
             logger.debug("Row Count:" + rowCount);
             count                      = 20;
             style1                     = "style=\" color: "+color+"; font-family:'Arial'; font-size:20pt; font-weight:bold; word-wrap:break-word; text-align:center;\"";
             style2                     = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:13pt;  word-wrap:break-word; text-align:center;\"";
             String style3              = "style=\" color: "+color+"; font-family:'Avantgarde'; font-size:13pt;  word-wrap:break-word; text-align:left;\"";
             String headStyle                     = "style=\" color: "+color+"; font-family:'Arial'; font-size:20pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
             

             //logger.debug("Count:" + count);
             prodDesc                       = new StringBuilder();
             rs.beforeFirst();
             while (rs.next()) {
                 int category               = rs.getInt(1);
                 if (category > 3) {
                     category               = 2;
                 }
                 
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(2));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(3));
                 String style               = HandlerUtils.nullToEmpty(rs.getString(4));
                 String origin              = HandlerUtils.nullToEmpty(rs.getString(5));
                 if(category != oldCategory || prodCount == 0) {
                     String categoryName    = "";
                     if(category == 1) {
                         categoryName       = "Domestic";
                         if (styleMenus.isEmpty()) {
                            prodDesc.append("</table>");
                            //logger.debug("product Count:" + prodCount);
                            styleMenus.add(prodDesc.toString());
                            prodDesc        = new StringBuilder();
                            prodCount       = 0;                             
                         }
                     } else if(category == 2) {
                         categoryName       = "Craft";
                     } else if(category == 3) {
                         categoryName       = "Import";
                     }
                     
                     if(prodCount == 0){
                         prodDesc.append("<table valign=\"top\" width=\"700px\" cellspacing=\"0\" cellpadding=\"0\"  border=\"0\"><tr> "
                                 + " <td "+headStyle+">"+categoryName+"</td> </tr>");
                     } else {
                         prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                         prodDesc.append(" <tr><td "+headStyle+"><b>"+categoryName+"</b></td> </tr>");
                     }
                     prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                     oldCategory            = category;
                     prodDesc.append(" <tr><td width=\"40%\" "+style1+">Brand</td><td width=\"5%\">&nbsp;</td><td width=\"30%\" "+style1+">Style</td>"
                         + " <td width=\"5%\">&nbsp;</td><td width=\"10%\" "+style1+">Origin</td><td width=\"5%\">&nbsp;</td><td width=\"10%\" "+style1+">ABV</td></tr>"
                         + "<tr>");
                     prodDesc.append(" <tr><td "+style1+" height=\"3px\"></td> </tr>");
                 }
                 prodDesc.append(" <tr><td width=\"40%\" "+style3+">"+productName+"</td><td width=\"5%\">&nbsp;</td><td width=\"30%\" "+style2+">"+style+"</td>"
                         + " <td width=\"5%\">&nbsp;</td><td width=\"10%\" "+style2+">"+origin+"</td><td width=\"5%\">&nbsp;</td><td width=\"10%\" "+style2+">"+abv+"</td></tr>"
                         + "<tr>");
                 prodDesc.append(" <tr><td "+style1+" height=\"3px\"></td> </tr>");

                 prodCount++;
                 //logger.debug(productName+ ": "+prodCount);

                 if (prodCount >= count){
                     prodDesc.append("</table>");
                     //logger.debug("product Count:" + prodCount);
                     styleMenus.add(prodDesc.toString());
                     prodDesc               = new StringBuilder();
                     prodCount              = 0;
                 }
             }

             if(prodCount > 0){
                 for(int i=prodCount;i<count;i++){
                      prodDesc.append(" <tr><td "+style1+" height=\"10px\"></td> </tr>");
                 }
                 
                 prodDesc.append("</table>");
                 styleMenus.add(prodDesc.toString());
             }
             
             prodCount                      = 0;
              
             //logger.debug("Menu Size:" + styleMenus.size());
             for(int i=0; i < styleMenus.size(); i++) {
                 prodDesc                   = new StringBuilder();
                 String col1                = styleMenus.get(i);
                 if(menus.size()==0) {
                      prodDesc.append(" <style>"
                         + " @font-face {font-family: Avantgarde;  src: url(http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/Avantgarde.ttf) format(\"truetype\"); } "
                              + "@font-face {font-family: AvantgardeBold;  src: url('http://beerboard.tv/USBN.BeerBoard.UI/Images/Assets/avantgarde-bold.ttf') format(\"truetype\"); } "
                         + " </style>");
                 }
                 prodDesc.append("<table  height=\"100%\" width=\"100%\"><tr><td align=\"center\" height=\"150px\"><img style=\" max-height:200px; max-width:300px;\" src=\""+logo+"\"/></td></tr><tr><td align=\"center\">");
                 prodDesc.append("<table>"                       
                         + "<tr><td   valign=\"top\" align=\"center\">"+col1+"</td></tr>");
                 
                 prodDesc.append("</table>");
                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
            close(rs);
            close(stmt);
        }
        return menus;
     }
         
         
    public  ArrayList<String> getBottledTemplate11(int beerType, int location, int customer, int count, String color, String logo, Element toAppend , MidwareLogger logger, RegisteredConnection transconn) throws HandlerException {

         ArrayList<String> menus            = new ArrayList<String>();
         ArrayList<String> styleMenus       = new ArrayList<String>();
         PreparedStatement stmt             = null;
         ResultSet rs                       = null;
         //color                       = "#000000",
         String  bgcolor                    = "#FFFFFF";
         logger.debug("Template With Beer Map Style");

         try {
             String selectDraftBeer         = "SELECT bS.style, p.name,IF(pD.abv = 0.0, '', CONCAT('(',pD.abv,'%)')), pD.origin  FROM line l LEFT JOIN bar b ON b.id = l.bar "
                                            + "LEFT JOIN product p ON p.id = l.product LEFT JOIN productDescription pD ON pD.product = p.id "
                                            + "LEFT JOIN brewStyleMap bM ON bM.product = l.product LEFT JOIN productSet pS ON pS.id = bM.style LEFT JOIN beerStylesMap bSM ON bSM.productSet = bM.style"
                                            + " LEFT JOIN beerStyles bS ON bS.id =  bSM.style"
                                            + " WHERE l.status = 'RUNNING'  AND b.location = ?  AND p.id NOT IN(4311,10661) GROUP BY l.product ORDER BY bS.style, p.name ;";
             String selectBottleBeer        = "SELECT  pD.category,p.name,IF(pD.abv = 0.0, '', CONCAT(pD.abv,'%')) FROM bottleBeer b LEFT JOIN product p ON p.id=b.product"
                                            + " LEFT JOIN productDescription pD ON pD.product=p.id  "
                                            + " WHERE location=?  AND p.id NOT IN(4311,10661) ORDER by pD.category, p.name;";
             String selectlogo              = "Select logo FROM locationGraphics WHERE location = ?";
             String style1                  = "";
             String style2                  = "";

             int prodCount                  = 0;
             String title                   = "";
             StringBuilder prodDesc         = new StringBuilder();
             if(beerType == 1){
                 stmt                        = transconn.prepareStatement(selectBottleBeer);
                 stmt.setInt(1, location);
                 title                      = "Bottled Beer";
             } else {
                 stmt                        = transconn.prepareStatement(selectDraftBeer);
                 stmt.setInt(1, location);
                 title                      = "Draft Beer";
             }
             String oldStyle                = null;
             rs                             = stmt.executeQuery();
             rs.last();
             int rowCount                   = rs.getRow();
             logger.debug("Row Count:" + rowCount);
              count                      = 18;
              style1                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:10pt; font-weight:bold; word-wrap:break-word; text-align:left;\"";
              style2                     = "style=\" color: "+color+"; font-family:'TradeGothic'; font-size:8pt;  word-wrap:break-word; text-align:left;\"";

             //logger.debug("Count:" + count);
             prodDesc                       = new StringBuilder();
             rs.beforeFirst();
             while (rs.next()) {
                 String  brewStyle               = HandlerUtils.nullToEmpty(rs.getString(1));
                 
                 
                 String productName         = HandlerUtils.nullToEmpty(rs.getString(2));
                 String abv                 = HandlerUtils.nullToEmpty(rs.getString(3));
                 if(!brewStyle.equals(oldStyle) || prodCount == 0) {
                     String categoryName    = "";
                     
                     
                     if(prodCount == 0){
                         prodDesc.append("<table cellspacing=\"0\" cellpadding=\"0\" style=\"background-color:"+bgcolor+"\" height=\"400px\"  width=\"90%\" border=\"0\"><tr> "
                                 + " <td "+style1+">"+brewStyle+"</td> </tr>");
                     } else {
                         prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                         prodDesc.append(" <tr><td "+style1+"><b>"+brewStyle+"</b></td> </tr>");
                     }
                     prodDesc.append(" <tr><td "+style1+" height=\"5px\"></td> </tr>");
                     oldStyle           = brewStyle;
                 }
                 prodDesc.append(" <tr><td "+style2+">"+productName+"  "+abv+"</td> </tr>");
                 prodDesc.append(" <tr><td "+style1+" height=\"3px\"></td> </tr>");

                 prodCount++;
                 //logger.debug(productName+ ": "+prodCount);

                 if (prodCount >= count){
                     prodDesc.append("</table>");
                     //logger.debug("product Count:" + prodCount);
                     styleMenus.add(prodDesc.toString());
                     prodDesc               = new StringBuilder();
                     prodCount              = 0;
                 }
             }

             if(prodCount > 0){
                 prodDesc.append("</table>");
                 styleMenus.add(prodDesc.toString());
             }
             
             prodCount                      = 0;
             String backgroundImage         = "Menu800.jpg"; 
             //logger.debug("Menu Size:" + styleMenus.size());
             for(int i=0; i < styleMenus.size(); i++) {
                 prodDesc                   = new StringBuilder();
                 String col1                = styleMenus.get(i);
                 String col2                = "";
                 if(i + 1 < styleMenus.size()) {
                     i++;
                     col2                   = styleMenus.get(i);
                 }
                 prodDesc.append("<table width=\"100%\"><tr><td height=\"150px\">&nbsp;</td></tr><tr><td align=\"center\">");
                 prodDesc.append("<table background=\"http://social.usbeveragenet.com:8080/fileUploader/Images/"+backgroundImage+"\" width=\"384px\" height=\"576px\">"
                         + "<tr><td height=\"40px\">&nbsp;</td><td>&nbsp;</td></tr>"
                         + "<tr><td height=\"500px\" width=\"50%\" valign=\"top\" align=\"center\">"+col1+"</td><td valign=\"top\" align=\"center\" width=\"50%\">"+col2+"</td></tr>");
                  
                 prodDesc.append("</table></td></tr></table>");
                 menus.add(prodDesc.toString());
                 //logger.debug(""+ prodDesc.toString() );
             }
        } catch (SQLException sqle) {
            logger.dbError("Database error: "+sqle.toString());
            throw new HandlerException(sqle);
        } catch (Exception e){
             logger.debug(e.getMessage());
        }finally {
            close(rs);
            close(stmt);   
        }
        return menus;
     }

        
    
}
